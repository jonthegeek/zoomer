[{"path":"https://jonthegeek.github.io/zoomer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Jon Harmon Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jonthegeek.github.io/zoomer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jon Harmon. Author, maintainer.","code":""},{"path":"https://jonthegeek.github.io/zoomer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harmon J (2023). zoomer: Zoom API R. https://github.com/jonthegeek/zoomer, https://jonthegeek.github.io/zoomer/.","code":"@Manual{,   title = {zoomer: Zoom API in R},   author = {Jon Harmon},   year = {2023},   note = {https://github.com/jonthegeek/zoomer, https://jonthegeek.github.io/zoomer/}, }"},{"path":"https://jonthegeek.github.io/zoomer/index.html","id":"zoomer","dir":"","previous_headings":"","what":"Zoom API in R","title":"Zoom API in R","text":"goal zoomer make easy interact Zoom API R.","code":""},{"path":"https://jonthegeek.github.io/zoomer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Zoom API in R","text":"can install released version zoomer CRAN : development version GitHub :","code":"# No you can't. # install.packages(\"zoomer\") # install.packages(\"devtools\") devtools::install_github(\"jonthegeek/zoomer\")"},{"path":"https://jonthegeek.github.io/zoomer/reference/browse_zoom_app_management.html","id":null,"dir":"Reference","previous_headings":"","what":"Visit Zoom Created Apps — browse_zoom_app_management","title":"Visit Zoom Created Apps — browse_zoom_app_management","text":"Launch Zoom \"Created Apps\" page (can configure OAuth 2.0 Clients). Navigate \"Develop > Build App\" app, choose \"OAuth\". Set \"OAuth allow list\" \"http://localhost:8888\". also give app allowed scopes. configure app, copy/paste Client ID Client Secret ZOOM_CLIENT_ID ZOOM_CLIENT_ID environment variables. recommend placing environment variables .Renviron file.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/browse_zoom_app_management.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visit Zoom Created Apps — browse_zoom_app_management","text":"","code":"browse_zoom_app_management()"},{"path":"https://jonthegeek.github.io/zoomer/reference/browse_zoom_app_management.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visit Zoom Created Apps — browse_zoom_app_management","text":"url \"Created Apps\" page, invisibly.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/browse_zoom_app_management.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visit Zoom Created Apps — browse_zoom_app_management","text":"","code":"zoom_app_mgmt_url <- browse_zoom_app_management() # Copy/paste values from your client. Sys.setenv(ZOOM_CLIENT_ID = \"raNdOMletTeRS\") Sys.setenv(ZOOM_CLIENT_SECRET = \"RanDomleTTerSandNumb3rs\")"},{"path":"https://jonthegeek.github.io/zoomer/reference/dot-hack_refresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Hack oauth_flow_refresh for revolving refresh_token — .hack_refresh","title":"Hack oauth_flow_refresh for revolving refresh_token — .hack_refresh","text":"(hopefully) temporary hack trick httr2::oauth_flow_refresh() allowing us refresh even refresh token changes.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/dot-hack_refresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hack oauth_flow_refresh for revolving refresh_token — .hack_refresh","text":"","code":".hack_refresh(   client = zoom_client(),   refresh_token = Sys.getenv(\"ZOOM_REFRESH_TOKEN\") )"},{"path":"https://jonthegeek.github.io/zoomer/reference/dot-hack_refresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hack oauth_flow_refresh for revolving refresh_token — .hack_refresh","text":"client Zoom OAuth client created zoom_client(). refresh_token refresh token. default behavior look ZOOM_REFRESH_TOKEN environment variable.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/dot-hack_refresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hack oauth_flow_refresh for revolving refresh_token — .hack_refresh","text":"httr2::oauth_token().","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/dot-str2csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Smush a string to a comma-separated list — .str2csv","title":"Smush a string to a comma-separated list — .str2csv","text":"Smush string comma-separated list","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/dot-str2csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smush a string to a comma-separated list — .str2csv","text":"","code":".str2csv(string)"},{"path":"https://jonthegeek.github.io/zoomer/reference/dot-str2csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smush a string to a comma-separated list — .str2csv","text":"string character vector smush.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/dot-str2csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smush a string to a comma-separated list — .str2csv","text":"character scalar like \",\".","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/dot-zoom_req_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Zoom OAuth authentication — .zoom_req_auth","title":"Zoom OAuth authentication — .zoom_req_auth","text":"function main way authentication handled package. tries find token non-interactively possible, bothers user necessary.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/dot-zoom_req_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zoom OAuth authentication — .zoom_req_auth","text":"","code":".zoom_req_auth(   request,   client = zoom_client(),   scopes = \"recording:read\",   cache_disk = getOption(\"zoom.cache_disk\", FALSE),   cache_key = getOption(\"zoom.cache_key\", NULL),   token = NULL )"},{"path":"https://jonthegeek.github.io/zoomer/reference/dot-zoom_req_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zoom OAuth authentication — .zoom_req_auth","text":"request httr2::request(). client Zoom OAuth client created zoom_client(). scopes character vector allowed scopes, \"recording:read\". cache_disk access token cached disk? reduces number times need re-authenticate cost storing access credentials disk. Cached tokens encrypted automatically deleted 30 days creation. cache_key authenticating multiple users using client, use key differentiate users. token Zoom API OAuth token, access_token string token. recommend instead supply client, case appropriate token located possible.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/dot-zoom_req_auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zoom OAuth authentication — .zoom_req_auth","text":"httr2::request() oauth authentication information.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/zoom_authenticate.html","id":null,"dir":"Reference","previous_headings":"","what":"Authenticate with a Zoom OAuth client — zoom_authenticate","title":"Authenticate with a Zoom OAuth client — zoom_authenticate","text":"Load generate Zoom OAuth token use functions package. primary use function cache values early script (user can walk away). Otherwise functions package prompt authentication needed. values cached, rest package use default client.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/zoom_authenticate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authenticate with a Zoom OAuth client — zoom_authenticate","text":"","code":"zoom_authenticate(   client = zoom_client(),   scopes = \"recording:read\",   force = FALSE,   refresh_token = NULL )"},{"path":"https://jonthegeek.github.io/zoomer/reference/zoom_authenticate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authenticate with a Zoom OAuth client — zoom_authenticate","text":"client Zoom OAuth client created zoom_client(). scopes character vector allowed scopes, \"recording:read\". force logical indicating whether force refresh token. refresh_token refresh token associated client. parameter exists primarily testing. wish provide refresh token (example, automated processes), recommend setting ZOOM_REFRESH_TOKEN environment variable.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/zoom_authenticate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authenticate with a Zoom OAuth client — zoom_authenticate","text":"Zoom OAuth token, invisibly.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/zoom_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Zoom OAuth client — zoom_client","title":"Construct a Zoom OAuth client — zoom_client","text":"Builds OAuth client object Zoom apis.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/zoom_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Zoom OAuth client — zoom_client","text":"","code":"zoom_client(   client_id = Sys.getenv(\"ZOOM_CLIENT_ID\"),   client_secret = Sys.getenv(\"ZOOM_CLIENT_SECRET\") )"},{"path":"https://jonthegeek.github.io/zoomer/reference/zoom_client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Zoom OAuth client — zoom_client","text":"client_id Zoom OAuth App client ID. recommend save environment variable, ZOOM_CLIENT_ID. client_secret Zoom OAuth App client secret. recommend save environment variable, ZOOM_CLIENT_SECRET.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/zoom_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Zoom OAuth client — zoom_client","text":"httr2::oauth_client() object.","code":""},{"path":"https://jonthegeek.github.io/zoomer/reference/zoom_client.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a Zoom OAuth client — zoom_client","text":"","code":"zoom_client <- zoom_client()"},{"path":"https://jonthegeek.github.io/zoomer/reference/zoomer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"zoomer: Zoom API in R — zoomer-package","title":"zoomer: Zoom API in R — zoomer-package","text":"consistent interface Zoom API, allow management Zoom conferencing R.","code":""},{"path":[]},{"path":"https://jonthegeek.github.io/zoomer/reference/zoomer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"zoomer: Zoom API in R — zoomer-package","text":"Maintainer: Jon Harmon jonthegeek@gmail.com (ORCID)","code":""},{"path":"https://jonthegeek.github.io/zoomer/news/index.html","id":"zoomer-0009000","dir":"Changelog","previous_headings":"","what":"zoomer 0.0.0.9000","title":"zoomer 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
