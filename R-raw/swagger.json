{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "name": "Zoom Developers",
      "url": "https://developer.zoom.us/"
    },
    "description": "The Zoom Meeting APIs let developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [JWT](/guides/auth/jwt) and [OAuth](/guides/auth/oauth) documentation. \n\nAll endpoints are available via `https` and are located at `api.zoom.us/v2/`. For example, to list all of an account's users, use the `https://api.zoom.us/v2/users/` endpoint.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "termsOfService": "https://zoom.us/docs/en-us/zoom_api_license_and_tou.html",
    "title": "Zoom Meeting API",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://api.zoom.us/v2"
    }
  ],
  "paths": {
    "/accounts/{accountId}/managed_domains": {
      "get": {
        "parameters": [
          {
            "description": "The account's ID. For the Master account, pass the `me` value for this parameter.",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "q6gBJVO5TzexKYTb_I2rpg"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainsList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\nAccount's managed domains returned. \n\n**Error Code:** `200` <br>\nOnly available for paid accounts."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nNot Found \n\n**Error Code:** `2001` <br>\nAccount does not exist: $accountId"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Accounts"
        ],
        "description": "Use this API to get an account's [managed domains](https://support.zoom.us/hc/en-us/articles/203395207). To get the Master account's managed domains, pass the `me` value for the `accountId` path parameter. \n\n **Scopes:** `account:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* A Pro or a higher paid account with the Master account option enabled.",
        "operationId": "accountManagedDomain",
        "summary": "Get account's managed domains"
      }
    },
    "/accounts/{accountId}/settings": {
      "get": {
        "parameters": [
          {
            "description": "The account's ID. For the Master account, pass the `me` value for this parameter.",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "me"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Optional query parameters: \n* `meeting_authentication` — Use this query parameter to view the [meeting authentication settings](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied to the user's account. \n* `recording_authentication` — Use this query parameter to view the [recording authentication settings](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied to the user's account. \n* `security` — Use this query parameter to view the account's security settings. For example, password requirements for user login or two-factor authentication. \n* `meeting_security` — Use this query parameter to view the meeting security settings applied to the user's account.",
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                "meeting_authentication",
                "recording_authentication",
                "meeting_security",
                "security"
              ],
              "type": "string",
              "example": "security"
            }
          },
          {
            "description": "The name of the field by which to filter the response. For example, if you provide the `host_video` value for this field, you will get a response similar to the following: \n\n `{ \"schedule_meeting\": { \"host_video\": false } }` \n\n To use multiple values, comma-separate each value. For example: `host_video,participant_video`",
            "in": "query",
            "name": "custom_query_fields",
            "schema": {
              "type": "string",
              "example": "in_meeting"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AccountSettings"
                    },
                    {
                      "$ref": "#/components/schemas/AccountSettingsAuthentication"
                    },
                    {
                      "$ref": "#/components/schemas/AccountSettingsSecurity"
                    },
                    {
                      "description": "The account's meeting and webinar security settings.",
                      "properties": {
                        "meeting_security": {
                          "properties": {
                            "auto_security": {
                              "description": "Whether all meetings must be secured with at least one security option. \n\n This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts.",
                              "type": "boolean",
                              "example": true
                            },
                            "block_user_domain": {
                              "description": "Whether users in specific domains are blocked from joining meetings and webinars.",
                              "type": "boolean",
                              "example": true
                            },
                            "block_user_domain_list": {
                              "description": "The blocked domains.",
                              "items": {
                                "maxLength": 30,
                                "minLength": 5,
                                "type": "string",
                                "example": "example.com"
                              },
                              "maxItems": 20,
                              "type": "array"
                            },
                            "chat_etiquette_tool": {
                              "description": "Information about the **Chat Etiquette Tool**.",
                              "properties": {
                                "enable": {
                                  "description": "Whether the **Chat Etiquette Tool** is enabled.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "policies": {
                                  "description": "Information about the defined **Chat Etiquette Tool** policies.",
                                  "items": {
                                    "properties": {
                                      "description": {
                                        "description": "The policy's description.",
                                        "type": "string",
                                        "example": "The policy's description"
                                      },
                                      "id": {
                                        "description": "The policy ID.",
                                        "type": "string",
                                        "example": "afwef342tr2qfwrg"
                                      },
                                      "is_locked": {
                                        "description": "Whether the policy is locked by an account-level user. When it is locked, users cannot update the policy.",
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "keywords": {
                                        "description": "A list of defined rule keywords.",
                                        "items": {
                                          "type": "string",
                                          "example": "test"
                                        },
                                        "type": "array"
                                      },
                                      "name": {
                                        "description": "The policy name.",
                                        "type": "string",
                                        "example": "The policy name"
                                      },
                                      "regular_expression": {
                                        "description": "The regular expression to match to the content of chat messages.",
                                        "type": "string",
                                        "example": "^test"
                                      },
                                      "status": {
                                        "description": "The policy's current status: \n* `activated` — Activated. \n* `deactivated` — Deactivated.",
                                        "enum": [
                                          "activated",
                                          "deactivated"
                                        ],
                                        "type": "string",
                                        "x-enum-descriptions": [
                                          "Activated.",
                                          "Deactivated."
                                        ],
                                        "example": "activated"
                                      },
                                      "trigger_action": {
                                        "description": "The policy's trigger action: \n* `1` — Ask the user to confirm before they send the message. \n* `2` — Block the user's message.",
                                        "enum": [
                                          1,
                                          2
                                        ],
                                        "type": "integer",
                                        "x-enum-descriptions": [
                                          "Ask the user to confirm before they send the message.",
                                          "Block the user's message."
                                        ],
                                        "example": 1
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "policy_max_count": {
                                  "description": "The read-only maximum number of **Chat Etiquette Tool** policies.",
                                  "type": "integer",
                                  "example": 14
                                }
                              },
                              "type": "object"
                            },
                            "embed_password_in_join_link": {
                              "description": "Whether the meeting password is encrypted and included in the invitation link. The provided link will allow participants to join the meeting without having to enter the password.",
                              "type": "boolean",
                              "example": true
                            },
                            "encryption_type": {
                              "description": "The type of encryption used when starting a meeting: \n* `enhanced_encryption` — Enhanced encryption. Encryption data is stored in the cloud. \n* `e2ee` — End-to-end encryption. The encryption key is stored on the local device and cannot be obtained by anyone else. Enabling E2EE also [**disables** certain features](https://support.zoom.us/hc/en-us/articles/360048660871), such as cloud recording, live streaming, and allowing participants to join before the host.",
                              "enum": [
                                "enhanced_encryption",
                                "e2ee"
                              ],
                              "type": "string",
                              "example": "e2ee"
                            },
                            "end_to_end_encrypted_meetings": {
                              "description": "Whether end-to-end encryption is enabled for meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "meeting_password": {
                              "description": "Whether all instant and scheduled meetings that users can join via client or Zoom Rooms systems are password-protected. [Personal Meeting ID (PMI)](https://support.zoom.us/hc/en-us/articles/203276937) meetings are **not** included in this setting.",
                              "type": "boolean",
                              "example": true
                            },
                            "meeting_password_requirement": {
                              "description": "Information about the meeting and webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).",
                              "properties": {
                                "consecutive_characters_length": {
                                  "description": "The maximum length of consecutive characters (for example, `abcdef`) allowed in a password: \n* `4` through `8` — The maximum consecutive characters length. The length is `n` minus `1`, where `n` is the value. For example, if the value is `4`, there can only be a maximum of `3` consecutive characters in a password (for example, `abc1x@8fdh`). \n* `0` — No consecutive character restriction.",
                                  "enum": [
                                    0,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8
                                  ],
                                  "type": "integer",
                                  "example": 0
                                },
                                "have_letter": {
                                  "description": "Whether passwords must contain at least one letter character.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "have_number": {
                                  "description": "Whether passwords must contain at least one numeric character.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "have_special_character": {
                                  "description": "Whether passwords must contain at least one special character. For example, `!`, `@`, and/or `#` characters.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "have_upper_and_lower_characters": {
                                  "description": "Whether passwords must include uppercase and lowercase characters.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "length": {
                                  "description": "The minimum password length.",
                                  "type": "integer",
                                  "example": 10
                                },
                                "only_allow_numeric": {
                                  "description": "Whether passwords must contain **only** numeric characters.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "weak_enhance_detection": {
                                  "description": "Whether users are informed when the provided password is weak.",
                                  "type": "boolean",
                                  "example": true
                                }
                              },
                              "type": "object"
                            },
                            "only_authenticated_can_join_from_webclient": {
                              "description": "Whether to specify that only authenticated users can join the meeting from the web client.",
                              "type": "boolean",
                              "example": true
                            },
                            "phone_password": {
                              "description": "Whether passwords are required for participants joining by phone. \n\n If enabled and the meeting is password-protected, a numeric password is required for participants to join by phone. For meetings with alphanumeric passwords, a numeric password will be generated.",
                              "type": "boolean",
                              "example": true
                            },
                            "pmi_password": {
                              "description": "Whether all Personal Meeting ID (PMI) meetings that users can join via client or Zoom Rooms systems are password-protected.",
                              "type": "boolean",
                              "example": true
                            },
                            "require_password_for_scheduled_meeting": {
                              "description": "Whether passwords are required for meetings that have already been scheduled.",
                              "type": "boolean",
                              "example": true
                            },
                            "require_password_for_scheduled_webinar": {
                              "description": "Whether passwords are required for webinars that have already been scheduled.",
                              "type": "boolean",
                              "example": true
                            },
                            "waiting_room": {
                              "description": "Whether participants are placed in the [**Waiting Room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) when they join a meeting. \n\n When the **Waiting Room** feature is enabled, the [**Allow participants to join before host**](https://support.zoom.us/hc/en-us/articles/202828525-Allow-participants-to-join-before-host) setting is disabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "waiting_room_settings": {
                              "description": "Information about the Waiting Room settings.",
                              "properties": {
                                "participants_to_place_in_waiting_room": {
                                  "description": "The type of participants to be admitted to the Waiting Room: \n* `0` — All attendees. \n* `1` — Users who are not in your account. \n* `2` — Users who are not in your account and are not part of your [allowed domains list](https://support.zoom.us/hc/en-us/articles/360037117472-Configuring-authentication-profiles#h_e3cf0d5f-eec7-4c2a-ad29-ef2a5079a7da).",
                                  "enum": [
                                    0,
                                    1,
                                    2
                                  ],
                                  "type": "integer",
                                  "example": 1
                                },
                                "users_who_can_admit_participants_from_waiting_room": {
                                  "description": "The users who can admit participants from the Waiting Room: \n* `0` — Host and co-hosts only. \n* `1` — Host, co-hosts, and anyone who bypassed the Waiting Room if the host and co-hosts are not present.",
                                  "enum": [
                                    0,
                                    1
                                  ],
                                  "type": "integer",
                                  "example": 1
                                },
                                "whitelisted_domains_for_waiting_room": {
                                  "description": "If the `participants_to_place_in_waiting_room` field is `2`, a comma-separated list of the domains that can bypass the Waiting Room (`\"example.com,example2.com\"`).",
                                  "type": "string",
                                  "example": "example.com"
                                }
                              },
                              "type": "object"
                            },
                            "webinar_password": {
                              "description": "Whether to generate a password when scheduling webinars. Participants must use the generated password to join the scheduled webinar.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "Meeting/Webinar Security Account Settings",
                      "type": "object"
                    },
                    {
                      "title": "Video SDK Account Recording Settings",
                      "type": "object",
                      "properties": {
                        "recording": {
                          "type": "object",
                          "properties": {
                            "cloud_recording": {
                              "type": "boolean",
                              "description": "Whether hosts can record and save meetings or webinars to the cloud.",
                              "example": true
                            },
                            "record_speaker_view": {
                              "type": "boolean",
                              "description": "Whether recording the [**Active Speaker** view](https://support.zoom.us/hc/en-us/articles/360025561091-Recording-layouts#h_5c001397-33d6-47fb-bb40-1a3f68401581) during screen sharing is enabled.",
                              "example": true
                            },
                            "record_gallery_view": {
                              "type": "boolean",
                              "description": "Whether recording the [**Gallery** view](https://support.zoom.us/hc/en-us/articles/360025561091-Recording-layouts#h_889dc825-9d79-4139-b65d-e719669c546b) during screen sharing is enabled.",
                              "example": true
                            },
                            "record_audio_file": {
                              "type": "boolean",
                              "description": "Whether to record one audio file for all participants.",
                              "example": true
                            },
                            "save_chat_text": {
                              "type": "boolean",
                              "description": "Whether meeting and webinar chat texts are saved.",
                              "example": false
                            },
                            "show_timestamp": {
                              "type": "boolean",
                              "description": "Whether timestamps are added to all meeting and webinar recordings.",
                              "example": true
                            },
                            "recording_audio_transcript": {
                              "type": "boolean",
                              "description": "Whether the [**Audio transcription**](https://support.zoom.us/hc/en-us/articles/115004794983-Audio-transcription-for-cloud-recordings) feature is enabled.",
                              "example": false
                            },
                            "cloud_recording_download": {
                              "type": "boolean",
                              "description": "Whether the [**Cloud recording downloads**](https://support.zoom.us/hc/en-us/articles/360060240972-Managing-cloud-recording-settings) setting is enabled.",
                              "example": true
                            },
                            "auto_delete_cmr": {
                              "type": "boolean",
                              "description": "Whether cloud recordings are automatically deleted after a specific number of days.",
                              "example": true
                            },
                            "auto_delete_cmr_days": {
                              "type": "integer",
                              "description": "When the `auto_delete_cmr` value is `true`, the number of days before Zoom automatically deletes cloud recordings: \n* `30` — 30 days. \n* `60` — 60 days. \n* `90` — 90 days. \n* `120` — 120 days.",
                              "enum": [
                                30,
                                60,
                                90,
                                120
                              ],
                              "example": 30
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\nAccount settings returned. \n\n**Error Code:** `200` <br>\nOnly available for paid accounts."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nNot Found \n\n**Error Code:** `2001` <br>\nAccount does not exist: $accountId"
          }
        },
        "tags": [
          "Accounts"
        ],
        "description": "Use this API to get an account's settings. To get the Master account's settings, use the `me` value for the `accountId` path parameter. \n\n**Scopes:** `account:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \n\n**Prerequisites:** \n* The account must be a paid account.",
        "operationId": "accountSettings",
        "summary": "Get account settings"
      },
      "patch": {
        "parameters": [
          {
            "description": "The account's ID. For the Master account, pass the `me` value for this parameter.",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "me"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Optional query parameters: \n* `meeting_authentication` — Use this query parameter to view the [meeting authentication settings](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied to the user's account. \n* `recording_authentication` — Use this query parameter to view the [recording authentication settings](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied to the user's account. \n* `security` — Use this query parameter to view the account's security settings. For example, password requirements for user login or two-factor authentication. \n* `meeting_security` — Use this query parameter to view the meeting security settings applied to the user's account.",
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                "meeting_authentication",
                "recording_authentication",
                "security",
                "meeting_security"
              ],
              "type": "string",
              "example": "meeting_security"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200` <br>\nOnly available for paid accounts."
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nAccount settings updated."
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nThe domains provided are invalid. If you are providing multiple domains, separate each domain with a comma."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n Not Found \n\n**Error Code:** `2001` <br>\nAccount does not exist: $accountId"
          }
        },
        "tags": [
          "Accounts"
        ],
        "description": "Use this API to update an account's settings. To update the Master account's settings, pass the `me` value for the `accountId` path parameter. \n\n **Scopes:** `account:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \n\n **Prerequisites:** \n* The account must be a paid account.",
        "operationId": "accountSettingsUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AccountUpdateSettings"
                  },
                  {
                    "$ref": "#/components/schemas/AccountSettingsAuthenticationUpdate"
                  },
                  {
                    "description": "The account's updated meeting and webinar security settings.",
                    "properties": {
                      "meeting_security": {
                        "properties": {
                          "auto_security": {
                            "description": "Whether to require that all meetings are secured with at least one security option. \n\n This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts.",
                            "type": "boolean",
                            "example": true
                          },
                          "block_user_domain": {
                            "description": "Whether to block users in specific domains from joining meetings and webinars.",
                            "type": "boolean",
                            "example": true
                          },
                          "block_user_domain_list": {
                            "description": "The domain to block, up to 20 domains. For example, the `*.example.com` domain.",
                            "items": {
                              "maxLength": 30,
                              "minLength": 5,
                              "type": "string",
                              "example": "example.com"
                            },
                            "maxItems": 20,
                            "type": "array"
                          },
                          "chat_etiquette_tool": {
                            "default": null,
                            "description": "Information about the **Chat Etiquette** Tool.",
                            "properties": {
                              "enable": {
                                "default": false,
                                "description": "Whether to enable the **Chat Etiquette Tool**. This value defaults to `false`. \n\n The **Chat Etiquette Tool** allows you to define specific keywords and text patterns in chat to prevent users from inadvertently sharing unwanted messages.",
                                "type": "boolean",
                                "example": true
                              },
                              "operate": {
                                "description": "The policy operation to perform for the update: \n* `create` — Create policies. \n* `update` — Update policies. \n* `delete` — Delete policies.",
                                "enum": [
                                  "create",
                                  "update",
                                  "delete"
                                ],
                                "type": "string",
                                "x-enum-descriptions": [
                                  "Add new policies.",
                                  "Update policies.",
                                  "Delete policies."
                                ],
                                "example": "update"
                              },
                              "policies": {
                                "description": "Information about the defined **Chat Etiquette Tool** policies.",
                                "items": {
                                  "properties": {
                                    "description": {
                                      "description": "The policy's description.",
                                      "type": "string",
                                      "example": "The policy's description"
                                    },
                                    "id": {
                                      "description": "The policy ID.",
                                      "type": "string",
                                      "example": "afwefwef243fwef132f2g43g43g44br"
                                    },
                                    "is_locked": {
                                      "default": false,
                                      "description": "Whether to lock the policy. When it is locked, users cannot update the policy. This value defaults to `false`.",
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "keywords": {
                                      "description": "A list of defined rule keywords.",
                                      "items": {
                                        "type": "string",
                                        "example": "test"
                                      },
                                      "type": "array"
                                    },
                                    "name": {
                                      "description": "The policy name.",
                                      "type": "string",
                                      "example": "the policy name"
                                    },
                                    "regular_expression": {
                                      "description": "The regular expression to match to the content of chat messages.",
                                      "type": "string",
                                      "example": "^test"
                                    },
                                    "status": {
                                      "description": "The policy's current status: \n* `activated` — Activated. \n* `deactivated` — Deactivated.",
                                      "enum": [
                                        "activated",
                                        "deactivated"
                                      ],
                                      "type": "string",
                                      "x-enum-descriptions": [
                                        "Activated.",
                                        "Deactivated."
                                      ],
                                      "example": "activated"
                                    },
                                    "trigger_action": {
                                      "description": "The policy's trigger action: \n* `1` — Ask the user to confirm before they send the message. \n* `2` — Block the user's message.",
                                      "enum": [
                                        1,
                                        2
                                      ],
                                      "type": "integer",
                                      "x-enum-descriptions": [
                                        "Ask the user to confirm before they send the message.",
                                        "Block the user's message."
                                      ],
                                      "example": 1
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "embed_password_in_join_link": {
                            "description": "Whether the meeting password will be encrypted and included in the invitation link. The provided link will allow participants to join the meeting without having to enter the password.",
                            "type": "boolean",
                            "example": true
                          },
                          "encryption_type": {
                            "description": "The type of encryption to use when starting a meeting: \n* `enhanced_encryption` — Use enhanced encryption. Encryption data is stored in the cloud. \n* `e2ee` — End-to-end encryption. The encryption key is stored on the local device and cannot be obtained by anyone else. Enabling E2EE also [**disables** certain features](https://support.zoom.us/hc/en-us/articles/360048660871), such as cloud recording, live streaming, and allowing participants to join before the host.",
                            "enum": [
                              "enhanced_encryption",
                              "e2ee"
                            ],
                            "type": "string",
                            "example": "e2ee"
                          },
                          "end_to_end_encrypted_meetings": {
                            "description": "Whether to enable end-to-end encryption for meetings. If enabled, you can specify the type of encryption in the `encryption_type` field.",
                            "type": "boolean",
                            "example": true
                          },
                          "meeting_password": {
                            "description": "Whether all instant and scheduled meetings that users can join via client or Zoom Rooms systems are password-protected. [Personal Meeting ID (PMI)](https://support.zoom.us/hc/en-us/articles/203276937) meetings are **not** included in this setting.",
                            "type": "boolean",
                            "example": true
                          },
                          "meeting_password_requirement": {
                            "description": "Information about the meeting and webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).",
                            "properties": {
                              "consecutive_characters_length": {
                                "description": "The maximum length of consecutive characters (for example, `abcdef`) allowed in a password: \n* `4` through `8` — The maximum consecutive characters length. The length is `n` minus `1`, where `n` is the provided value. For example, if you provide the `4` value, there can only be a maximum of `3` consecutive characters in a password (for example, `abc1x@8fdh`). \n* `0` — Do not apply a consecutive character restriction.",
                                "enum": [
                                  0,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8
                                ],
                                "type": "integer",
                                "example": 8
                              },
                              "have_letter": {
                                "description": "Whether the password must contain at least one letter character.",
                                "type": "boolean",
                                "example": true
                              },
                              "have_number": {
                                "description": "Whether the password must contain at least one numeric character.",
                                "type": "boolean",
                                "example": true
                              },
                              "have_special_character": {
                                "description": "Whether the password must contain at least one special character. For example, `!`, `@`, and/or `#` characters.",
                                "type": "boolean",
                                "example": true
                              },
                              "have_upper_and_lower_characters": {
                                "description": "Whether the password must include uppercase and lowercase characters.",
                                "type": "boolean",
                                "example": true
                              },
                              "length": {
                                "description": "The password's minimum length.",
                                "type": "integer",
                                "example": 8
                              },
                              "only_allow_numeric": {
                                "description": "Whether the password must contain **only** numeric characters.",
                                "type": "boolean",
                                "example": true
                              },
                              "weak_enhance_detection": {
                                "description": "Whether users will be informed when the provided password is weak.",
                                "type": "boolean",
                                "example": true
                              }
                            },
                            "type": "object"
                          },
                          "only_authenticated_can_join_from_webclient": {
                            "description": "Whether to specify that only authenticated users can join the meeting from the web client.",
                            "type": "boolean",
                            "example": true
                          },
                          "phone_password": {
                            "description": "Whether to require a password for participants joining by phone. \n\n If enabled and the meeting is password-protected, a numeric password is required for participants to join by phone. For meetings with alphanumeric passwords, a numeric password will be generated.",
                            "type": "boolean",
                            "example": true
                          },
                          "pmi_password": {
                            "description": "Whether all Personal Meeting ID (PMI) meetings that users can join via client or Zoom Rooms systems are password-protected.",
                            "type": "boolean",
                            "example": true
                          },
                          "require_password_for_scheduled_meeting": {
                            "description": "Whether to require a password for meetings that have already been scheduled.",
                            "type": "boolean",
                            "example": true
                          },
                          "require_password_for_scheduled_webinar": {
                            "description": "Whether to require a password for webinars that have already been scheduled.",
                            "type": "boolean",
                            "example": true
                          },
                          "waiting_room": {
                            "description": "Whether participants are placed in the [**Waiting Room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) when they join a meeting. \n\n If the **Waiting Room** feature is enabled, the [**Allow participants to join before host**](https://support.zoom.us/hc/en-us/articles/202828525-Allow-participants-to-join-before-host) setting is automatically disabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "waiting_room_settings": {
                            "description": "Information about the Waiting Room settings.",
                            "properties": {
                              "participants_to_place_in_waiting_room": {
                                "description": "The type of participants to be admitted to the Waiting Room: \n* `0` — All attendees. \n* `1` — Users who are not in your account. \n* `2` — Users who are not in your account and are not part of your [allowed domains list](https://support.zoom.us/hc/en-us/articles/360037117472-Configuring-authentication-profiles#h_e3cf0d5f-eec7-4c2a-ad29-ef2a5079a7da).",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ],
                                "type": "integer",
                                "example": 0
                              },
                              "users_who_can_admit_participants_from_waiting_room": {
                                "description": "The users who can admit participants from the Waiting Room: \n* `0` — Host and co-hosts only. \n* `1` — Host, co-hosts, and anyone who bypassed the Waiting Room if the host and co-hosts are not present.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "type": "integer",
                                "example": 0
                              },
                              "whitelisted_domains_for_waiting_room": {
                                "description": "If the `participants_to_place_in_waiting_room` field is `2`, a comma-separated list of the domains that can bypass the Waiting Room (`\"example.com,example2.com\"`).",
                                "type": "string",
                                "example": "example2.com"
                              }
                            },
                            "type": "object"
                          },
                          "webinar_password": {
                            "description": "Whether to generate a password when scheduling webinars. Participants must use the generated password to join the scheduled webinar.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "Meeting/Webinar Security Account Settings",
                    "type": "object"
                  },
                  {
                    "title": "Update Video SDK Account Recording Settings",
                    "type": "object",
                    "properties": {
                      "recording": {
                        "type": "object",
                        "properties": {
                          "record_speaker_view": {
                            "type": "boolean",
                            "description": "Whether to enable the recording of the [**Active Speaker** view](https://support.zoom.us/hc/en-us/articles/360025561091-Recording-layouts#h_5c001397-33d6-47fb-bb40-1a3f68401581) during screen sharing.",
                            "example": true
                          },
                          "record_gallery_view": {
                            "type": "boolean",
                            "description": "Whether to enable the recording of the [**Gallery** view](https://support.zoom.us/hc/en-us/articles/360025561091-Recording-layouts#h_889dc825-9d79-4139-b65d-e719669c546b) during screen sharing.",
                            "example": false
                          },
                          "record_audio_file": {
                            "type": "boolean",
                            "description": "Whether to record a single audio file for all participants.",
                            "example": true
                          },
                          "save_chat_text": {
                            "type": "boolean",
                            "description": "Whether to save meeting and webinar chat texts.",
                            "example": false
                          },
                          "show_timestamp": {
                            "type": "boolean",
                            "description": "Whether to add timestamps to meeting and webinar recordings.",
                            "example": true
                          },
                          "cloud_recording_download": {
                            "type": "boolean",
                            "description": "Whether to enable the [**Cloud recording downloads**](https://support.zoom.us/hc/en-us/articles/360060240972-Managing-cloud-recording-settings) setting.",
                            "example": true
                          },
                          "auto_delete_cmr": {
                            "type": "boolean",
                            "description": "Whether to enable the automatic deletion of cloud recordings after a specific number of days.",
                            "example": true
                          },
                          "auto_delete_cmr_days": {
                            "type": "integer",
                            "description": "When the `auto_delete_cmr` value is `true`, the number of days before Zoom automatically deletes cloud recordings: \n* `30` — 30 days. \n* `60` — 60 days. \n* `90` — 90 days. \n* `120` — 120 days.",
                            "enum": [
                              30,
                              60,
                              90,
                              120
                            ],
                            "example": 30
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "summary": "Update account settings"
      }
    },
    "/accounts/{accountId}/trusted_domains": {
      "get": {
        "parameters": [
          {
            "description": "The account's ID. For the Master account, pass the `me` value for this parameter.",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "q6gBJVO5TzexKYTb_I2rpg"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "trusted_domains": {
                      "description": "A list of the account's trusted domains.",
                      "items": {
                        "type": "string",
                        "example": "example.com"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\nAccount's trusted domains returned. \n\n**Error Code:** `2001` <br>\nAccount does not exist: $accountId"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nNot Found \n\n**Error Code:** `2001` <br>\nAccount does not exist: $accountId"
          }
        },
        "tags": [
          "Accounts"
        ],
        "description": "Use this API to get an account's [trusted domains](https://support.zoom.us/hc/en-us/articles/203395207). To get the Master account's trusted domains, use the `me` value for the `accountId` path parameter. \n\n **Scopes:** `account:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* The account must be a paid account.",
        "operationId": "accountTrustedDomain",
        "summary": "Get account's trusted domains"
      }
    },
    "/archive_files": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "The query start date, `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `to` query parameter value cannot exceed seven days.",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date-time",
              "type": "string",
              "example": "2021-03-11T05:41:36Z"
            }
          },
          {
            "description": "The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `from` query parameter value cannot exceed seven days.",
            "in": "query",
            "name": "to",
            "schema": {
              "format": "date-time",
              "type": "string",
              "example": "2021-03-18T05:41:36Z"
            }
          },
          {
            "description": "The type of query date: \n* `meeting_start_time` \n* `archive_complete_time` \n\n This value defaults to `meeting_start_time`.",
            "in": "query",
            "name": "query_date_type",
            "schema": {
              "default": "meeting_start_time",
              "enum": [
                "meeting_start_time",
                "archive_complete_time"
              ],
              "type": "string",
              "example": "meeting_start_time"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "from": {
                      "description": "The queried start date.",
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-03-12T02:12:27Z"
                    },
                    "meetings": {
                      "description": "Information about the meeting or webinar.",
                      "items": {
                        "$ref": "#/components/schemas/CloudArchivedFiles"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string",
                      "example": "At6eWnFZ1FB3arCXnRxqHLXKhbDW18yz2i2"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call.",
                      "type": "integer",
                      "example": 20
                    },
                    "to": {
                      "description": "The queried end date.",
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-03-12T02:12:27Z"
                    },
                    "total_records": {
                      "description": "The total number of returned meeting records.",
                      "type": "integer",
                      "example": 20
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\n Archived files returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `2001` <br>\n Account does not exist: {accountId}"
          }
        },
        "tags": [
          "Archiving"
        ],
        "description": "Use this API to get an account's archived meeting or webinar files. \n\n Zoom's [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators) allows account administrators to set up an automated mechanism to record, collect, and archive meeting data to a 3rd-party platform of their choice to satisfy FINRA and/or other compliance requirements. \n\n **Scopes:** `recording:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \n\n **Prerequisites:** \n* The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).",
        "operationId": "listArchivedFiles",
        "summary": "List archived files"
      }
    },
    "/groups": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nList of groups returned.<br>\n**Error Code:** `200`\nOnly available for paid accounts."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `4130`<br> A group with this {groupId} does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "description": "List [groups](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under an account.\n\n**Prerequisite**: Pro or higher account.<br>\n**Scopes**: `group:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "groups",
        "summary": "List groups"
      },
      "post": {
        "summary": "Create a group",
        "description": "Use this API to create a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management). You can add a **maximum** of 100 groups in one account per day, and a maximum of 5000 groups in one account.\n\nIf you enabled a new group via the user interface, you can also choose whether to display the group and set its privacy level.\n\n**Scopes:** `group:write:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites**: \n* A Pro or higher account",
        "operationId": "groupCreate",
        "tags": [
          "Groups"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "directory_privacy": {
                    "type": "integer",
                    "default": 2,
                    "description": "The group's directory privacy setting. Use this parameter if you set the `in_directory` parameter to the `true` value: \n* `1` — Visible and searchable to all users. \n* `2` — Visible only to group members, but searchable to all users. \n* `3` — Visible and searchable only to group members. \n\nThis value defaults to `2` and is only available for accounts that enabled a group via the user interface.",
                    "enum": [
                      1,
                      2,
                      3
                    ],
                    "example": 2
                  },
                  "in_directory": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to display the group in the Zoom client's **Contacts** group:\n* `true` — Display the group.\n* `false` — Do not display the group.\n\nThis value defaults to `false` and is only available for accounts that enabled a group via the user interface.",
                    "example": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The group's name.",
                    "example": "Developers"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**Error Code:** `200` <br>\nOnly available for Paid account: {accountId}"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "directory_privacy": {
                      "type": "integer",
                      "description": "The group's directory privacy setting. The API only returns this response if the `in_directory` value is set to `true`.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "example": 2
                    },
                    "id": {
                      "type": "string",
                      "description": "The group ID.",
                      "example": "A4ql1FjgL913r"
                    },
                    "in_directory": {
                      "type": "boolean",
                      "description": "Whether the group displays in the Zoom client's **Contacts** group: \n* `true` — Displayed. \n* `false` — Not displayed.",
                      "example": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The group's name.",
                      "example": "Developers"
                    },
                    "total_members": {
                      "type": "integer",
                      "description": "The group's total member count.",
                      "example": 34
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` <br>\nGroup created."
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing field: {$name}"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n**Error Code:** `4130` <br>\nA group with the name \"{groupId}\" does not exist."
          },
          "409": {
            "description": "**HTTP Status Code:** `409` <br>\n Conflict \n\n**Error Code:** `4132` <br>\nThe group name \"{groupName}\" is already in use."
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\nYou have exceeded the daily rate limit ({0}) of Create a Group API request for this account. This limit resets at GMT 00:00:00."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/groups/{groupId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nOnly available for Paid account,{accountId}."
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nGroup deleted."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nGroup member not found."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nGroup not found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "description": "Use this API to delete a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-).\n\n**Scopes:** `group:write:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Pro, Business, or Education account",
        "operationId": "groupDelete",
        "summary": "Delete a group"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Group ID.",
                      "type": "string",
                      "example": "825c9e31f1064c73b394c5e4557d3447"
                    },
                    "name": {
                      "description": "Group name.",
                      "type": "string",
                      "example": "Developers"
                    },
                    "total_members": {
                      "description": "Total count of members in the group.",
                      "type": "integer",
                      "example": 100
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br> Group returned.<br>\n**Error Code:** `200`<br>\nOnly available for Paid account,{accountId}."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nGroup does not belong to your account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nGroup not found.<br>\n**Error Code:** `4130`<br> A group with this {groupId} does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "description": "Get a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under an account.\n\n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "group",
        "summary": "Get a group"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "The group does not belong to this account:{accountId}."
          },
          "204": {
            "description": "Group updated."
          },
          "404": {
            "description": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist."
          },
          "409": {
            "description": "**Status Code:** `409`<br>\nConflict<br>\n**Error Code:** `4132`<br>\nGroup name {groupName} is already in use."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "description": "Update a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under your account.\n\n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:write:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "groupUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Group name. It must be unique to one account and less than 128 characters.",
                    "type": "string",
                    "example": "Developers"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Update a group"
      }
    },
    "/groups/{groupId}/admins": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "admins": {
                      "items": {
                        "properties": {
                          "email": {
                            "description": "The user's email address.",
                            "format": "email",
                            "type": "string",
                            "example": "jchill@example.com"
                          },
                          "name": {
                            "description": "The user's display name.",
                            "type": "string",
                            "example": "Jill Chill"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token is returned when the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string",
                      "example": "oMTCmjMRwzSfZtUXDIuWDswdksIQ3dyGUB1"
                    },
                    "page_size": {
                      "description": "The number of records returned in a single API call.",
                      "type": "integer",
                      "example": 1
                    },
                    "total_records": {
                      "description": "The total number of records available across all pages.",
                      "type": "integer",
                      "example": 20
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br> Only available for paid account: \"{accountId}\"."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with the \"{groupId}\" ID does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "description": "Use this API to return a list of [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) administrators under your account.\n\n**Scopes:** `group:read:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Pro, Business, or Education account",
        "operationId": "groupAdmins",
        "summary": "List group admins"
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "**Status Code:** `200` <br> Only available for paid account: \"{accountId}\"."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "added_at": {
                      "description": "The timestamp at which the administrator was added to the group.",
                      "format": "date-time",
                      "type": "string",
                      "example": "2022-03-25T03:08:12Z"
                    },
                    "ids": {
                      "description": "The administrator IDs.",
                      "type": "string",
                      "example": "v4iyWT1LTfy8QvPG4GTvdg"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**Status Code:** `201` <br> Group administrator added."
          },
          "404": {
            "description": "**Status Code:** `404` <br> Not found. <br> **Error Code:** `4130` <br> A group with the \"{groupId}\" ID does not exist."
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Use this API to add administrators to a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under your account.\n\n**Scopes:** `group:write:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Pro, Business, or Education account",
        "operationId": "groupAdminsCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "admins": {
                    "description": "A list of the administrators to add to a group.",
                    "items": {
                      "properties": {
                        "email": {
                          "description": "The user's email. Use this value if you do not have the user's ID.\n\nIf you pass the `id` value, the API ignores this parameter.",
                          "type": "string",
                          "example": "jchill@example.com"
                        },
                        "id": {
                          "description": "The user's ID.",
                          "type": "string",
                          "example": "v4iyWT1LTfy8QvPG4GTvdg"
                        }
                      },
                      "type": "object"
                    },
                    "maximum": 10,
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Add group admins"
      }
    },
    "/groups/{groupId}/admins/{userId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          },
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "**Status Code:** `200` <br> Only available for paid account: \"{accountId}\"."
          },
          "204": {
            "description": "**Status Code:** `204` <br> Group administrator removed."
          },
          "400": {
            "description": "**Status Code:** `400` <br> Bad request. <br> **Error Code:** `4138` <br> That user is not an administrator for the group: \"{groupId}\"."
          },
          "404": {
            "description": "**Status Code:** `404` <br> Not found. <br> **Error Code:** `4130` <br> A group with the \"{groupId}\" ID does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "description": "Use this API to remove a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) administrator in a Zoom account.\n\n**Scopes:** `group:write:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Pro, Business, or Education account",
        "operationId": "groupAdminsDelete",
        "summary": "Delete a group admin"
      }
    },
    "/groups/{groupId}/lock_settings": {
      "get": {
        "parameters": [
          {
            "description": "Id of the group.",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "0mgThLiRQH2bUHvIaL4t2g"
            }
          },
          {
            "description": "Optional query parameters: \n* `meeting_security` — Use this query parameter to view the meeting security settings applied to the user's account.",
            "in": "query",
            "name": "option",
            "schema": {
              "type": "string",
              "example": "meeting_security"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "audio_conferencing": {
                          "properties": {
                            "toll_free_and_fee_based_toll_call": {
                              "description": "Whether the group has the [**Toll-free and Fee-based Toll Call**](https://support.zoom.us/hc/en-us/articles/360060950711-Enabling-Toll-free-and-Fee-based-Toll-Call) setting enabled.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "email_notification": {
                          "properties": {
                            "alternative_host_reminder": {
                              "description": "Notify the alternative host who is set or removed.",
                              "type": "boolean",
                              "example": true
                            },
                            "cancel_meeting_reminder": {
                              "deprecated": true,
                              "description": "Notify host and participants when the meeting is cancelled.",
                              "type": "boolean",
                              "example": true
                            },
                            "cloud_recording_available_reminder": {
                              "description": "Whether to notify the host when a cloud recording is available.",
                              "type": "boolean",
                              "example": true
                            },
                            "jbh_reminder": {
                              "description": "Notify host when participants join the meeting before them.",
                              "type": "boolean",
                              "example": true
                            },
                            "schedule_for_reminder": {
                              "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "in_meeting": {
                          "properties": {
                            "alert_guest_join": {
                              "description": "Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.",
                              "type": "boolean",
                              "example": true
                            },
                            "allow_live_streaming": {
                              "description": "Whether to allow livestreaming.",
                              "type": "boolean",
                              "example": true
                            },
                            "allow_show_zoom_windows": {
                              "description": "Show Zoom windows during screen share.",
                              "type": "boolean",
                              "example": true
                            },
                            "annotation": {
                              "description": "Allow participants to use annotation tools to add information to shared screens.",
                              "type": "boolean",
                              "example": true
                            },
                            "attendee_on_hold": {
                              "deprecated": true,
                              "default": false,
                              "description": "Allow host to put attendee on hold.\n\n**This field has been deprecated and is no longer supported.**",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_answer": {
                              "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_generated_captions": {
                              "description": "Whether to allow a live transcription service to transcribe meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_saving_chat": {
                              "description": "Automatically save all in-meeting chats.",
                              "type": "boolean",
                              "example": true
                            },
                            "breakout_room": {
                              "description": "Allow host to split meeting participants into separate, smaller rooms.",
                              "type": "boolean",
                              "example": true
                            },
                            "chat": {
                              "description": "Allow meeting participants to send chat message visible to all participants.",
                              "type": "boolean",
                              "example": true
                            },
                            "closed_caption": {
                              "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions.",
                              "type": "boolean",
                              "example": true
                            },
                            "co_host": {
                              "description": "Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.",
                              "type": "boolean",
                              "example": true
                            },
                            "custom_data_center_regions": {
                              "description": "Displays whether or not custom [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) have been selected for meetings/webinars hosted by this group.",
                              "type": "boolean",
                              "example": true
                            },
                            "disable_screen_sharing_for_host_meetings": {
                              "description": "Whether the **Disable desktop screen sharing for meetings you host** setting is enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "disable_screen_sharing_for_in_meeting_guests": {
                              "description": "Whether the **Disable screen sharing when guests are in the meeting** setting is enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "e2e_encryption": {
                              "description": "Require that all meetings are encrypted using AES.",
                              "type": "boolean",
                              "example": true
                            },
                            "entry_exit_chime": {
                              "description": "Play sound when participants join or leave.",
                              "type": "string",
                              "example": ""
                            },
                            "far_end_camera_control": {
                              "description": "Allow another user to take control of the camera during a meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "feedback": {
                              "description": "Enable users to provide feedback to Zoom at the end of the meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "file_transfer": {
                              "description": "Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the users in the group or not.",
                              "type": "boolean",
                              "example": true
                            },
                            "full_transcript": {
                              "description": "Whether to allow the viewing of full transcripts in the in-meeting side panel.",
                              "type": "boolean",
                              "example": true
                            },
                            "group_hd": {
                              "description": "Enable higher quality video for host and participants. This will require more bandwidth.",
                              "type": "boolean",
                              "example": true
                            },
                            "language_interpretation": {
                              "description": "Whether to allow hosts to assign participants as interpreters who can interpret one language into another in real-time.",
                              "type": "boolean",
                              "example": true
                            },
                            "manual_captions": {
                              "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions.",
                              "type": "boolean",
                              "example": true
                            },
                            "meeting_reactions": {
                              "description": "Whether meeting participants can [communicate using the emoji reactions](https://support.zoom.us/hc/en-us/articles/115001286183-Nonverbal-feedback-and-meeting-reactions) located in the **Reactions** menu in the meeting toolbar.",
                              "type": "boolean",
                              "example": true
                            },
                            "meeting_survey": {
                              "description": "Whether the host can present a survey to participants once a meeting has ended. This feature is only available in version 5.7.3 or higher.",
                              "type": "boolean",
                              "example": true
                            },
                            "non_verbal_feedback": {
                              "description": "Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel.",
                              "type": "boolean",
                              "example": true
                            },
                            "original_audio": {
                              "description": "Allow users to select original sound during a meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "polling": {
                              "description": "Add 'Polls' to the meeting controls. This allows the host to survey the attendees.",
                              "type": "boolean",
                              "example": true
                            },
                            "meeting_polling": {
                              "type": "object",
                              "description": "Information about the account's meeting polling settings.",
                              "properties": {
                                "enable": {
                                  "type": "boolean",
                                  "description": "Whether to allow the host to add polls before or during a meeting.",
                                  "example": true
                                },
                                "advanced_polls": {
                                  "type": "boolean",
                                  "description": "Whether to allow host to create advanced polls and quizzes. Advanced polls and quizzes include single choice, multiple choice, drop down, matching, short answer, long answer, rank order, and fill-in-the-blank questions. Hosts can also set the correct answers for quizzes they create.",
                                  "example": true
                                },
                                "allow_alternative_host_to_add_edit": {
                                  "type": "boolean",
                                  "description": "Whether to allow alternative hosts to add or edit polls and quizzes.",
                                  "example": true
                                }
                              }
                            },
                            "post_meeting_feedback": {
                              "description": "Display end-of-meeting experience feedback survey.",
                              "type": "boolean",
                              "example": true
                            },
                            "private_chat": {
                              "description": "Allow meeting participants to send a private 1:1 message to another participant.",
                              "type": "boolean",
                              "example": true
                            },
                            "remote_control": {
                              "description": "During screen sharing, allow the person who is sharing to let others control the shared content.",
                              "type": "boolean",
                              "example": true
                            },
                            "remote_support": {
                              "description": "Allow meeting host to provide 1:1 remote support to another participant.",
                              "type": "boolean",
                              "example": true
                            },
                            "request_permission_to_unmute": {
                              "description": "Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled and locked for the group or not.",
                              "type": "boolean",
                              "example": true
                            },
                            "save_caption": {
                              "description": "Whether participants can save closed captions or transcripts.",
                              "type": "boolean",
                              "example": true
                            },
                            "save_captions": {
                              "description": "Whether participants can save closed captions or transcripts.",
                              "type": "boolean",
                              "example": true
                            },
                            "screen_sharing": {
                              "description": "Allow host and participants to share their screen or content during meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "sending_default_email_invites": {
                              "description": "Allow users to invite participants by email only by default.",
                              "type": "boolean",
                              "example": true
                            },
                            "show_a_join_from_your_browser_link": {
                              "description": "Whether to allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is useful for participants who cannot download, install, or run applications. Note that the meeting experience from the browser is limited.",
                              "type": "boolean",
                              "example": true
                            },
                            "show_browser_join_link": {
                              "description": "Allow participants to join a meeting directly from their browser.",
                              "type": "boolean",
                              "example": true
                            },
                            "show_meeting_control_toolbar": {
                              "description": "Always show meeting controls during a meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "slide_control": {
                              "description": "Whether the person sharing during a presentation can allow others to control the slide presentation. This feature is only available in version 5.8.3 or higher.",
                              "type": "boolean",
                              "example": true
                            },
                            "stereo_audio": {
                              "description": "Allow users to select stereo audio during a meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "use_html_format_email": {
                              "description": "Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.",
                              "type": "boolean",
                              "example": true
                            },
                            "virtual_background": {
                              "description": "Enable virtual background.",
                              "type": "boolean",
                              "example": true
                            },
                            "waiting_room": {
                              "description": "Attendees cannot join a meeting until a host admits them individually from the waiting room.",
                              "type": "boolean",
                              "example": true
                            },
                            "webinar_chat": {
                              "description": "Whether to allow webinar participants to send chat messages.",
                              "type": "boolean",
                              "example": true
                            },
                            "webinar_live_streaming": {
                              "description": "Whether webinar livestreaming is enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "webinar_polling": {
                              "description": "Whether the host can add polls before or during a webinar.",
                              "type": "boolean",
                              "example": true
                            },
                            "webinar_question_answer": {
                              "description": "Whether attendees can ask the host and panelists questions in the webinar.",
                              "type": "boolean",
                              "example": true
                            },
                            "webinar_survey": {
                              "description": "Whether the host can present surveys to attendees once a webinar has ended.",
                              "type": "boolean",
                              "example": true
                            },
                            "whiteboard": {
                              "description": "Allow participants to share a whiteboard that includes annotation tools.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "other_options": {
                          "properties": {
                            "blur_snapshot": {
                              "description": "If true, iOS blurs the screenshot in the task switcher when multiple apps are open. Android hides the screenshot in the system-level list of recent apps.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "recording": {
                          "properties": {
                            "account_user_access_recording": {
                              "description": "Make cloud recordings accessible to account members only.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_delete_cmr": {
                              "description": "Allow Zoom to automatically delete recordings permanently after a specified number of days.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_recording": {
                              "description": "Record meetings automatically as they start.",
                              "type": "boolean",
                              "example": true
                            },
                            "cloud_recording": {
                              "description": "Allow hosts to record and save the meeting / webinar in the cloud.",
                              "type": "boolean",
                              "example": true
                            },
                            "cloud_recording_download": {
                              "description": "Allow anyone with a link to the cloud recording to download.",
                              "type": "boolean",
                              "example": true
                            },
                            "host_delete_cloud_recording": {
                              "description": "Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.",
                              "type": "boolean",
                              "example": true
                            },
                            "ip_address_access_control": {
                              "description": "Setting to allow cloud recording access only from specific IP address ranges.\n",
                              "properties": {
                                "enable": {
                                  "description": "If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.\n\n",
                                  "type": "boolean",
                                  "example": true
                                },
                                "ip_addresses_or_ranges": {
                                  "description": "IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.\n\nExample: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`\n\n",
                                  "type": "string",
                                  "example": ""
                                }
                              },
                              "type": "object"
                            },
                            "local_recording": {
                              "description": "Allow hosts and participants to record the meeting to a local file.",
                              "type": "boolean",
                              "example": true
                            },
                            "prevent_host_access_recording": {
                              "description": "If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.\n\n",
                              "type": "boolean",
                              "example": true
                            },
                            "recording_authentication": {
                              "description": "Only authenticated users can view cloud recordings",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "schedule_meeting": {
                          "properties": {
                            "audio_type": {
                              "description": "Determine how participants can join the audio portion of the meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "embed_password_in_join_link": {
                              "description": "If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.\n ",
                              "type": "boolean",
                              "example": true
                            },
                            "force_pmi_jbh_password": {
                              "description": "If join before host option is enabled for a personal meeting, then enforce password requirement.",
                              "type": "boolean",
                              "example": true
                            },
                            "host_video": {
                              "description": "Start meetings with host video on.",
                              "type": "boolean",
                              "example": true
                            },
                            "join_before_host": {
                              "description": "Allow participants to join the meeting before the host arrives",
                              "type": "boolean",
                              "example": true
                            },
                            "meeting_authentication": {
                              "description": "Only authenticated users can join meetings",
                              "type": "boolean",
                              "example": true
                            },
                            "mute_upon_entry": {
                              "description": "Automatically mute all participants when they join the meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "participant_video": {
                              "description": "Start meetings with participant video on.",
                              "type": "boolean",
                              "example": true
                            },
                            "pstn_password_protected": {
                              "description": "Generate and send new passwords for newly scheduled or edited meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "require_password_for_instant_meetings": {
                              "description": "Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "require_password_for_pmi_meetings": {
                              "description": "Require participants to enter password for PMI meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "require_password_for_scheduling_new_meetings": {
                              "description": "This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "upcoming_meeting_reminder": {
                              "description": "Receive desktop notification for upcoming meetings.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "telephony": {
                          "properties": {
                            "telephony_regions": {
                              "type": "boolean",
                              "example": true
                            },
                            "third_party_audio": {
                              "description": "Allow users to join the meeting using the existing 3rd party audio configuration.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "The group's locked meeting and webinar security settings.",
                      "properties": {
                        "meeting_security": {
                          "properties": {
                            "approved_or_denied_countries_or_regions": {
                              "description": "Whether the [**Approve or block entry for users from specific countries/regions**](https://support.zoom.us/hc/en-us/articles/360060086231-Joining-from-specific-countries-regions) setting is enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_security": {
                              "description": "Whether all meetings must be secured with at least one security option. \n\n This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts.",
                              "type": "boolean",
                              "example": true
                            },
                            "block_user_domain": {
                              "description": "Whether users in specific domains are blocked from joining meetings and webinars.",
                              "type": "boolean",
                              "example": true
                            },
                            "embed_password_in_join_link": {
                              "description": "Whether the meeting password is encrypted and included in the invitation link. The provided link will allow participants to join the meeting without having to enter the password.",
                              "type": "boolean",
                              "example": true
                            },
                            "encryption_type": {
                              "description": "The type of encryption used when starting a meeting: \n* `enhanced_encryption` — Enhanced encryption. Encryption data is stored in the cloud. \n* `e2ee` — End-to-end encryption. The encryption key is stored on the local device and cannot be obtained by anyone else. Enabling E2EE also [**disables** certain features](https://support.zoom.us/hc/en-us/articles/360048660871), such as cloud recording, live streaming, and allowing participants to join before the host.",
                              "enum": [
                                "enhanced_encryption",
                                "e2ee"
                              ],
                              "type": "string",
                              "example": "enhanced_encryption"
                            },
                            "end_to_end_encrypted_meetings": {
                              "description": "Whether end-to-end encryption is enabled for meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "meeting_password": {
                              "description": "Whether all instant and scheduled meetings that users can join via client or Zoom Rooms systems are password-protected. [Personal Meeting ID (PMI)](https://support.zoom.us/hc/en-us/articles/203276937) meetings are **not** included in this setting.",
                              "type": "boolean",
                              "example": true
                            },
                            "only_authenticated_can_join_from_webclient": {
                              "description": "Whether to specify that only authenticated users can join the meeting from the web client.",
                              "type": "boolean",
                              "example": true
                            },
                            "phone_password": {
                              "description": "Whether passwords are required for participants joining by phone. \n\n If enabled and the meeting is password-protected, a numeric password is required for participants to join by phone. For meetings with alphanumeric passwords, a numeric password will be generated.",
                              "type": "boolean",
                              "example": true
                            },
                            "pmi_password": {
                              "description": "Whether all Personal Meeting ID (PMI) meetings that users can join via client or Zoom Rooms systems are password-protected.",
                              "type": "boolean",
                              "example": true
                            },
                            "waiting_room": {
                              "description": "Whether participants are placed in the [**Waiting Room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) when they join a meeting. \n\n If the **Waiting Room** feature is enabled, the [**Allow participants to join before host**](https://support.zoom.us/hc/en-us/articles/202828525-Allow-participants-to-join-before-host) setting is automatically disabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "webinar_password": {
                              "description": "Whether to generate a password when scheduling webinars. Participants must use the generated password to join the scheduled webinar.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "Meeting/Webinar Security Group Locked Settings",
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**Error Code:** `200`<br>\nOnly available for paid account.\n\n**Status Code:** `200`<br>\nLocked settings of group returned.\n"
          },
          "404": {
            "description": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nGroup does not exist: {groupId}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "description": "Retrieve a [group's](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) locked settings. If you lock a setting, the group members will not be able to modify it individually. <p style=\"background-color:#FEEFB3; color:#9F6000\"><br>Note:</b> The `force_pmi_jbh_password` field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.</p>\n\n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "getGroupLockSettings",
        "summary": "Get locked settings"
      },
      "patch": {
        "parameters": [
          {
            "description": "The Id of the group.",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "0mgThLiRQH2bUHvIaL4t2g"
            }
          },
          {
            "description": "Optional query parameters: \n* `meeting_security` — Use this query parameter to view the meeting security settings applied to the user's account.",
            "in": "query",
            "name": "option",
            "schema": {
              "type": "string",
              "example": "meeting_security"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**Status Code:** `204`<br>\nGroup's locked settings updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nOnly available for paid account.\n"
          },
          "404": {
            "description": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nThis group does not exist.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "description": "Update a [group's](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) locked settings. If you lock a setting, the group members will not be able to modify it individually. <p style=\"background-color:#FEEFB3; color:#9F6000\"><br>Note:</b> The `force_pmi_jbh_password` field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.</p>\n\n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:write:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "groupLockedSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "properties": {
                      "audio_conferencing": {
                        "properties": {
                          "toll_free_and_fee_based_toll_call": {
                            "description": "Whether the group has the [**Toll-free and Fee-based Toll Call**](https://support.zoom.us/hc/en-us/articles/360060950711-Enabling-Toll-free-and-Fee-based-Toll-Call#h_01F51844DRCX3K7BRTMZ40381R) setting enabled.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "email_notification": {
                        "properties": {
                          "alternative_host_reminder": {
                            "description": "Notify the alternative host who is set or removed.",
                            "type": "boolean",
                            "example": true
                          },
                          "cancel_meeting_reminder": {
                            "description": "Notify host and participants when the meeting is cancelled.",
                            "type": "boolean",
                            "example": true
                          },
                          "cloud_recording_available_reminder": {
                            "description": "Whether to notify the host when a cloud recording is available.",
                            "type": "boolean",
                            "example": true
                          },
                          "jbh_reminder": {
                            "description": "Notify host when participants join the meeting before them.",
                            "type": "boolean",
                            "example": true
                          },
                          "schedule_for_reminder": {
                            "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "in_meeting": {
                        "properties": {
                          "alert_guest_join": {
                            "description": "Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.",
                            "type": "boolean",
                            "example": true
                          },
                          "allow_live_streaming": {
                            "description": "Whether to allow livestreaming.",
                            "type": "boolean",
                            "example": true
                          },
                          "allow_show_zoom_windows": {
                            "description": "Show Zoom windows during screen share.",
                            "type": "boolean",
                            "example": true
                          },
                          "annotation": {
                            "description": "Allow participants to use annotation tools to add information to shared screens.",
                            "type": "boolean",
                            "example": true
                          },
                          "attendee_on_hold": {
                            "default": false,
                            "description": "Allow host to put attendee on hold.\n\n**This field has been deprecated and is no longer supported.**",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_answer": {
                            "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_generated_captions": {
                            "description": "Whether to allow a live transcription service to transcribe meetings.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_saving_chat": {
                            "description": "Automatically save all in-meeting chats.",
                            "type": "boolean",
                            "example": true
                          },
                          "breakout_room": {
                            "description": "Allow host to split meeting participants into separate, smaller rooms.",
                            "type": "boolean",
                            "example": true
                          },
                          "chat": {
                            "description": "Allow meeting participants to send chat message visible to all participants.",
                            "type": "boolean",
                            "example": true
                          },
                          "closed_caption": {
                            "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions.",
                            "type": "boolean",
                            "example": true
                          },
                          "co_host": {
                            "description": "Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.",
                            "type": "boolean",
                            "example": true
                          },
                          "custom_data_center_regions": {
                            "description": "Displays whether or not custom [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) have been selected for meetings/webinars hosted by this group.",
                            "type": "boolean",
                            "example": true
                          },
                          "disable_screen_sharing_for_host_meetings": {
                            "description": "Whether to enable the **Disable desktop screen sharing for meetings you host** setting.",
                            "type": "boolean",
                            "example": true
                          },
                          "disable_screen_sharing_for_in_meeting_guests": {
                            "description": "Whether to enable the **Disable screen sharing when guests are in the meeting** setting.",
                            "type": "boolean",
                            "example": true
                          },
                          "e2e_encryption": {
                            "description": "Require that all meetings are encrypted using AES.",
                            "type": "boolean",
                            "example": true
                          },
                          "entry_exit_chime": {
                            "description": "Play sound when participants join or leave.",
                            "type": "string",
                            "example": ""
                          },
                          "far_end_camera_control": {
                            "description": "Allow another user to take control of the camera during a meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "feedback": {
                            "description": "Enable users to provide feedback to Zoom at the end of the meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "file_transfer": {
                            "description": "Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the users in the group or not.",
                            "type": "boolean",
                            "example": true
                          },
                          "full_transcript": {
                            "description": "Whether to allow the viewing of full transcripts in the in-meeting side panel.",
                            "type": "boolean",
                            "example": true
                          },
                          "group_hd": {
                            "description": "Enable higher quality video for host and participants. This will require more bandwidth.",
                            "type": "boolean",
                            "example": true
                          },
                          "language_interpretation": {
                            "description": "Whether to allow hosts to assign participants as interpreters who can interpret one language into another in real-time.",
                            "type": "boolean",
                            "example": true
                          },
                          "manual_captions": {
                            "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions.",
                            "type": "boolean",
                            "example": true
                          },
                          "meeting_survey": {
                            "description": "Whether to allow the host to present a survey to participants once a meeting has ended. This feature is only available in version 5.7.3 or higher.",
                            "type": "boolean",
                            "example": true
                          },
                          "non_verbal_feedback": {
                            "description": "Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel.",
                            "type": "boolean",
                            "example": true
                          },
                          "original_audio": {
                            "description": "Allow users to select original sound during a meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "polling": {
                            "description": "Add 'Polls' to the meeting controls. This allows the host to survey the attendees.",
                            "type": "boolean",
                            "example": true
                          },
                          "post_meeting_feedback": {
                            "description": "Display end-of-meeting experience feedback survey.",
                            "type": "boolean",
                            "example": true
                          },
                          "private_chat": {
                            "description": "Allow meeting participants to send a private 1:1 message to another participant.",
                            "type": "boolean",
                            "example": true
                          },
                          "remote_control": {
                            "description": "During screen sharing, allow the person who is sharing to let others control the shared content.",
                            "type": "boolean",
                            "example": true
                          },
                          "remote_support": {
                            "description": "Allow meeting host to provide 1:1 remote support to another participant.",
                            "type": "boolean",
                            "example": true
                          },
                          "request_permission_to_unmute": {
                            "description": "Indicate whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option should be enabled and locked for the group or not.",
                            "type": "boolean",
                            "example": true
                          },
                          "save_caption": {
                            "description": "Whether to allow participants to save closed captions or transcripts.",
                            "type": "boolean",
                            "example": true
                          },
                          "save_captions": {
                            "description": "Whether participants can save closed captions or transcripts.",
                            "type": "boolean",
                            "example": true
                          },
                          "screen_sharing": {
                            "description": "Allow host and participants to share their screen or content during meetings.",
                            "type": "boolean",
                            "example": true
                          },
                          "sending_default_email_invites": {
                            "description": "Allow users to invite participants by email only by default.",
                            "type": "boolean",
                            "example": true
                          },
                          "show_a_join_from_your_browser_link": {
                            "description": "Whether to allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is useful for participants who cannot download, install, or run applications. Note that the meeting experience from the browser is limited.",
                            "type": "boolean",
                            "example": true
                          },
                          "show_browser_join_link": {
                            "description": "Allow participants to join a meeting directly from their browser.",
                            "type": "boolean",
                            "example": true
                          },
                          "show_meeting_control_toolbar": {
                            "description": "Always show meeting controls during a meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "slide_control": {
                            "description": "Whether the person sharing during a presentation can allow others to control the slide presentation. This feature is only available in version 5.8.3 or higher.",
                            "type": "boolean",
                            "example": true
                          },
                          "stereo_audio": {
                            "description": "Allow users to select stereo audio during a meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "use_html_format_email": {
                            "description": "Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.",
                            "type": "boolean",
                            "example": true
                          },
                          "virtual_background": {
                            "description": "Enable virtual background.",
                            "type": "boolean",
                            "example": true
                          },
                          "waiting_room": {
                            "description": "Attendees cannot join a meeting until a host admits them individually from the waiting room.",
                            "type": "boolean",
                            "example": true
                          },
                          "webinar_chat": {
                            "description": "Whether to allow webinar participants to send chat messages.",
                            "type": "boolean",
                            "example": true
                          },
                          "webinar_live_streaming": {
                            "description": "Whether webinar livestreaming is enabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "webinar_polling": {
                            "description": "Whether to allow the host to add polls before or during a webinar.",
                            "type": "boolean",
                            "example": true
                          },
                          "webinar_question_answer": {
                            "description": "Whether attendees can ask the host and panelists questions in the webinar.",
                            "type": "boolean",
                            "example": true
                          },
                          "webinar_survey": {
                            "description": "Whether to allow the host to present surveys to attendees once a webinar has ended.",
                            "type": "boolean",
                            "example": true
                          },
                          "whiteboard": {
                            "description": "Allow participants to share a whiteboard that includes annotation tools.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "other_options": {
                        "properties": {
                          "blur_snapshot": {
                            "description": "If true, iOS blurs the screenshot in the task switcher when multiple apps are open. Android hides the screenshot in the system-level list of recent apps.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "recording": {
                        "properties": {
                          "account_user_access_recording": {
                            "description": "Make cloud recordings accessible to account members only.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_delete_cmr": {
                            "description": "Allow Zoom to automatically delete recordings permanently after a specified number of days.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_recording": {
                            "description": "Record meetings automatically as they start.",
                            "type": "boolean",
                            "example": true
                          },
                          "cloud_recording": {
                            "description": "Allow hosts to record and save the meeting / webinar in the cloud.",
                            "type": "boolean",
                            "example": true
                          },
                          "cloud_recording_download": {
                            "description": "Allow anyone with a link to the cloud recording to download.",
                            "type": "boolean",
                            "example": true
                          },
                          "host_delete_cloud_recording": {
                            "description": "Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.",
                            "type": "boolean",
                            "example": true
                          },
                          "ip_address_access_control": {
                            "description": "Setting to allow cloud recording access only from specific IP address ranges.\n",
                            "properties": {
                              "enable": {
                                "description": "If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.\n\n",
                                "type": "boolean",
                                "example": true
                              },
                              "ip_addresses_or_ranges": {
                                "description": "IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.\n\nExample: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`\n\n",
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "local_recording": {
                            "description": "Allow hosts and participants to record the meeting to a local file.",
                            "type": "boolean",
                            "example": true
                          },
                          "recording_authentication": {
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "schedule_meeting": {
                        "properties": {
                          "audio_type": {
                            "description": "Determine how participants can join the audio portion of the meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "embed_password_in_join_link": {
                            "description": "If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.\n ",
                            "type": "boolean",
                            "example": true
                          },
                          "force_pmi_jbh_password": {
                            "deprecated": true,
                            "description": "If join before host option is enabled for a personal meeting, then enforce password requirement.",
                            "type": "boolean",
                            "example": true
                          },
                          "host_video": {
                            "description": "Start meetings with host video on.",
                            "type": "boolean",
                            "example": true
                          },
                          "join_before_host": {
                            "description": "Allow participants to join the meeting before the host arrives",
                            "type": "boolean",
                            "example": true
                          },
                          "meeting_authentication": {
                            "description": "Only authenticated users can join meetings",
                            "type": "boolean",
                            "example": true
                          },
                          "mute_upon_entry": {
                            "description": "Automatically mute all participants when they join the meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "participant_video": {
                            "description": "Start meetings with participant video on.",
                            "type": "boolean",
                            "example": true
                          },
                          "personal_meeting": {
                            "description": "Turn the lock setting on or off for the **Enable Personal Meeting ID** setting for a group.<br><br>\n`true`: Turn the **\"Enable Personal Meeting ID\"** setting **on** for all users in the group. Users can choose to use personal meeting ID for their meetings. <br><br>\n`false`: Turn **off** the **\"Enable Personal Meeting ID\"** setting. **If this setting is [disabled](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link?flash_digest=eb7ac62d8c7fb4daf285916e3e15d87537806133#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a), meetings that were scheduled with PMI by this group members will be invalid. Users will have to update previously scheduled PMI meetings.**<br><br>\nFor Zoom Phone only:If a user has been assigned a desk phone, **\"Elevate to Zoom Meeting\"** on desk phone will be disabled.\n\n\n",
                            "type": "boolean",
                            "example": true
                          },
                          "pstn_password_protected": {
                            "description": "Generate and send new passwords for newly scheduled or edited meetings.",
                            "type": "boolean",
                            "example": true
                          },
                          "require_password_for_instant_meetings": {
                            "description": "Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "require_password_for_pmi_meetings": {
                            "description": "Require participants to enter password for PMI meetings.",
                            "type": "boolean",
                            "example": true
                          },
                          "require_password_for_scheduling_new_meetings": {
                            "description": "This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "upcoming_meeting_reminder": {
                            "description": "Receive desktop notification for upcoming meetings.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "telephony": {
                        "properties": {
                          "telephony_regions": {
                            "type": "boolean",
                            "example": true
                          },
                          "third_party_audio": {
                            "description": "Allow users to join the meeting using the existing 3rd party audio configuration.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "description": "The group's updated locked meeting and webinar security settings.",
                    "properties": {
                      "meeting_security": {
                        "properties": {
                          "approved_or_denied_countries_or_regions": {
                            "description": "Whether to enable the [**Approve or block entry for users from specific countries/regions**](https://support.zoom.us/hc/en-us/articles/360060086231-Joining-from-specific-countries-regions) setting.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_security": {
                            "description": "Whether to require that all meetings are secured with at least one security option. \n\n This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts.",
                            "type": "boolean",
                            "example": true
                          },
                          "block_user_domain": {
                            "description": "Whether to block users in specific domains from joining meetings and webinars.",
                            "type": "boolean",
                            "example": true
                          },
                          "embed_password_in_join_link": {
                            "description": "Whether the meeting password will be encrypted and included in the invitation link. The provided link will allow participants to join the meeting without having to enter the password.",
                            "type": "boolean",
                            "example": true
                          },
                          "encryption_type": {
                            "description": "The type of encryption to use when starting a meeting: \n* `enhanced_encryption` — Use enhanced encryption. Encryption data is stored in the cloud. \n* `e2ee` — End-to-end encryption. The encryption key is stored on the local device and cannot be obtained by anyone else. Enabling E2EE also [**disables** certain features](https://support.zoom.us/hc/en-us/articles/360048660871), such as cloud recording, live streaming, and allowing participants to join before the host.",
                            "enum": [
                              "enhanced_encryption",
                              "e2ee"
                            ],
                            "type": "string",
                            "example": "enhanced_encryption"
                          },
                          "end_to_end_encrypted_meetings": {
                            "description": "Whether to enable end-to-end encryption for meetings. If enabled, you can specify the type of encryption in the `encryption_type` field.",
                            "type": "boolean",
                            "example": true
                          },
                          "meeting_password": {
                            "description": "Whether all instant and scheduled meetings that users can join via client or Zoom Rooms systems are password-protected. [Personal Meeting ID (PMI)](https://support.zoom.us/hc/en-us/articles/203276937) meetings are **not** included in this setting.",
                            "type": "boolean",
                            "example": true
                          },
                          "only_authenticated_can_join_from_webclient": {
                            "description": "Whether to specify that only authenticated users can join the meeting from the web client.",
                            "type": "boolean",
                            "example": true
                          },
                          "phone_password": {
                            "description": "Whether to require a password for participants joining by phone. \n\n If enabled and the meeting is password-protected, a numeric password is required for participants to join by phone. For meetings with alphanumeric passwords, a numeric password will be generated.",
                            "type": "boolean",
                            "example": true
                          },
                          "pmi_password": {
                            "description": "Whether all Personal Meeting ID (PMI) meetings that users can join via client or Zoom Rooms systems are password-protected.",
                            "type": "boolean",
                            "example": true
                          },
                          "waiting_room": {
                            "description": "Whether participants are placed in the [**Waiting Room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) when they join a meeting. \n\n If the **Waiting Room** feature is enabled, the [**Allow participants to join before host**](https://support.zoom.us/hc/en-us/articles/202828525-Allow-participants-to-join-before-host) setting is automatically disabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "webinar_password": {
                            "description": "Whether to generate a password when scheduling webinars. Participants must use the generated password to join the scheduled webinar.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "Meeting/Webinar Security Group Locked Settings",
                    "type": "object"
                  }
                ]
              }
            }
          }
        },
        "summary": "Update locked settings"
      }
    },
    "/groups/{groupId}/members": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "members": {
                      "items": {
                        "properties": {
                          "email": {
                            "description": "User's email address.",
                            "type": "string",
                            "example": ""
                          },
                          "first_name": {
                            "description": "First name of the user.",
                            "type": "string",
                            "example": ""
                          },
                          "id": {
                            "description": "Unique Identifier of the user. ",
                            "type": "string",
                            "example": ""
                          },
                          "last_name": {
                            "description": "Last name of the user.",
                            "type": "string",
                            "example": ""
                          },
                          "type": {
                            "description": "User type: <br> `1` - Basic<br> `2` - Licensed<br> `3` - On-prem",
                            "type": "integer",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string",
                      "example": ""
                    },
                    "page_count": {
                      "description": "The number of pages returned from this request.",
                      "type": "integer",
                      "example": ""
                    },
                    "page_number": {
                      "description": "The page number of the current results.",
                      "type": "integer",
                      "example": ""
                    },
                    "page_size": {
                      "description": "The number of records returned from a single API call.",
                      "type": "integer",
                      "example": ""
                    },
                    "total_records": {
                      "description": "The total number of records available across all pages.",
                      "type": "integer",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br> Only available for paid account,{accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "description": "List the members of a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under your account.\n\n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "groupMembers",
        "summary": "List group members "
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "Only available for paid account,{accountId}."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "added_at": {
                      "format": "date-time",
                      "type": "string",
                      "example": ""
                    },
                    "ids": {
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Member added."
          },
          "404": {
            "description": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist."
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Use this API to add users to a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) in your account.\n\n**Scopes:** `group:write:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Pro, Business, or Education account",
        "operationId": "groupMembersCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "members": {
                    "description": "List of Group members",
                    "items": {
                      "properties": {
                        "email": {
                          "description": "User email. If the user ID is given then the user email should be ignored.",
                          "type": "string",
                          "example": ""
                        },
                        "id": {
                          "description": "User ID.",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    "maximum": 30,
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Add group members"
      }
    },
    "/groups/{groupId}/members/{memberId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          },
          {
            "$ref": "#/components/parameters/MemberId"
          }
        ],
        "responses": {
          "200": {
            "description": "Only available for paid account,{accountId}."
          },
          "204": {
            "description": "Group member deleted."
          },
          "400": {
            "description": "**Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `1010`<br>\nGroup does not belong to this account:{accountId}."
          },
          "404": {
            "description": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "description": "Use this API to remove a user from a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) in an account.\n\n**Scopes:** `group:write:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Pro, Business, or Education account",
        "operationId": "groupMembersDelete",
        "summary": "Delete a group member"
      },
      "patch": {
        "parameters": [
          {
            "description": "The group's unique ID. To get this value, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API.\n* To set a user's primary group, use the `target_group_id` value for this parameter's value. \n* To move a group member from one group to another, use the `groupId` of the designated group.",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "type": "string",
              "example": ""
            }
          },
          {
            "description": "The group member's unique ID. To get this value, use the [**List group members**](/api-reference/zoom-api/methods#operation/groupMembers) API.",
            "in": "path",
            "name": "memberId",
            "required": true,
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nGroup member updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\n Only available for Paid account, {accountId}.<br><br>\n **Error Code:** `300`<br>\n The target_group_id can not be empty.<br><br>\n **Error Code:** `1010`<br>\n Group does not belong to this account:{accountId}.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "description": "Use this API to perform either of the following tasks: \n* Remove a group member from one group and move them to a different group. \n* Set a user's primary group. By default, the primary group is the first group that user is added to.\n\nIf a user is a member of multiple groups, you can [assign the user a primary group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-#h_d07c7dcd-4fd8-485a-b5fe-a322e8d21c09). The user will use the primary group's settings by default. However, if the user is a member of a group with locked settings, those group settings will remain locked to the user.\n\n**Scopes:** `group:write:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Pro or higher account",
        "operationId": "updateAGroupMember",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "description": "The action to perform: \n* `move` — Remove the group member from one group and move them to a different group. \n* `set_primary` — Set the user's primary group.",
                    "enum": [
                      "move",
                      "set_primary"
                    ],
                    "type": "string",
                    "example": ""
                  },
                  "target_group_id": {
                    "description": "The target group's ID. To get this value, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n* To set a user's primary group, use the designated primary group's `groupId` value. \n* To move a group member from one group to another, use the `groupId` of the designated group.",
                    "type": "string",
                    "example": ""
                  }
                },
                "required": [
                  "action"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update a group member"
      }
    },
    "/groups/{groupId}/settings": {
      "get": {
        "summary": "Get a group's settings",
        "description": "Get settings for a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-). \n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "getGroupSettings",
        "tags": [
          "Groups"
        ],
        "parameters": [
          {
            "name": "option",
            "in": "query",
            "allowEmptyValue": true,
            "description": "Optional query parameters: \n* `meeting_authentication` — Use this query parameter to view the [meeting authentication settings](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied to the user's account. \n* `recording_authentication` — Use this query parameter to view the [recording authentication settings](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied to the user's account. \n* `meeting_security` — Use this query parameter to view the meeting security settings applied to the user's account.",
            "schema": {
              "type": "string",
              "enum": [
                "meeting_authentication",
                "recording_authentication",
                "meeting_security"
              ],
              "example": "meeting_security"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "0mgThLiRQH2bUHvIaL4t2g"
            }
          },
          {
            "name": "custom_query_fields",
            "in": "query",
            "description": "Provide the name of the field by which you would like to filter the response. For example, if you provide \"host_video\" as the value of this field, you will get a response similar to the following: \n\n{\n \"schedule_meeting\": {\n \"host_video\": false\n }\n} \n\nYou can provide multiple values by separating them with commas(example: \"host_video,participant_video\").",
            "schema": {
              "type": "string",
              "example": "host_video"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "audio_conferencing": {
                          "$ref": "#/components/schemas/GroupSettingsAudioConference"
                        },
                        "email_notification": {
                          "properties": {
                            "alternative_host_reminder": {
                              "description": "Notify the alternative host who is set or removed.",
                              "type": "boolean",
                              "example": true
                            },
                            "cancel_meeting_reminder": {
                              "description": "Notify host and participants when the meeting is cancelled.",
                              "type": "boolean",
                              "example": true
                            },
                            "cloud_recording_available_reminder": {
                              "description": "Whether to notify the host when a cloud recording is available.",
                              "type": "boolean",
                              "example": true
                            },
                            "jbh_reminder": {
                              "description": "Notify host when participants join the meeting before them.",
                              "type": "boolean",
                              "example": true
                            },
                            "recording_available_reminder_alternative_hosts": {
                              "description": "Whether to notify any alternative hosts when a cloud recording is available.",
                              "type": "boolean",
                              "example": true
                            },
                            "recording_available_reminder_schedulers": {
                              "description": "Whether to notify the person who scheduled the meeting or webinar for the host when a cloud recording is available.",
                              "type": "boolean",
                              "example": true
                            },
                            "schedule_for_reminder": {
                              "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "in_meeting": {
                          "properties": {
                            "alert_guest_join": {
                              "description": "Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.",
                              "type": "boolean",
                              "example": true
                            },
                            "allow_live_streaming": {
                              "description": "Whether livestreaming is enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "allow_participants_chat_with": {
                              "description": "Whether to allow participants to only chat with certain groups:\n* `1` — The participant cannot use chat.\n* `2` — Host and co-hosts only.\n * `3` — The participant can chat with other participants publicly.\n* `4` - The participant can chat with other participants publicly and privately.\n\n**Note:** This setting is only available with client versions 5.7.3 and above.",
                              "enum": [
                                1,
                                2,
                                3,
                                4
                              ],
                              "type": "integer",
                              "x-enum-descriptions": [
                                "No one",
                                "Host and co-hosts",
                                "Everyone",
                                "Everyone and anyone directly"
                              ],
                              "example": 1
                            },
                            "allow_show_zoom_windows": {
                              "description": "Show Zoom windows during screen share.",
                              "type": "boolean",
                              "example": true
                            },
                            "allow_users_save_chats": {
                              "description": "Whether to allow participants to save meeting chats:\n* `1` — Participants cannot save meeting chats.\n* `2` — Participants can only save host and co-host meeting chats.\n* `3` — Participants can save all meeting chats.",
                              "enum": [
                                1,
                                2,
                                3
                              ],
                              "type": "integer",
                              "x-enum-descriptions": [
                                "Not allow",
                                "Host and co-hosts",
                                "Everyone"
                              ],
                              "example": 1
                            },
                            "annotation": {
                              "description": "Allow participants to use annotation tools to add information to shared screens.",
                              "type": "boolean",
                              "example": true
                            },
                            "attendee_on_hold": {
                              "default": false,
                              "description": "Allow host to put attendee on hold.\n\n**This field has been deprecated and is no longer supported.**",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_answer": {
                              "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_saving_chat": {
                              "description": "Automatically save all in-meeting chats.",
                              "type": "boolean",
                              "example": true
                            },
                            "breakout_room": {
                              "description": "Allow host to split meeting participants into separate, smaller rooms.",
                              "type": "boolean",
                              "example": true
                            },
                            "breakout_room_schedule": {
                              "description": "Whether the host can assign participants to breakout rooms when scheduling. This feature is **only** available in version 4.5.0 or higher.",
                              "type": "boolean",
                              "example": true
                            },
                            "chat": {
                              "description": "Allow meeting participants to send chat message visible to all participants.",
                              "type": "boolean",
                              "example": true
                            },
                            "closed_caption": {
                              "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions.",
                              "type": "boolean",
                              "example": true
                            },
                            "closed_captioning": {
                              "description": "Information about the group's closed captioning settings.",
                              "properties": {
                                "auto_transcribing": {
                                  "description": "Whether to allow a live transcription service to transcribe meetings.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "enable": {
                                  "description": "Whether to allow the host to type closed captions or assign a participant or 3rd-party service to provide closed captioning.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "save_caption": {
                                  "description": "Whether to allow participants to save closed captions or transcripts.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "third_party_captioning_service": {
                                  "description": "Whether to allow the use of an API token to integrate with 3rd-party closed captioning services.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "view_full_transcript": {
                                  "description": "Whether to allow the viewing of full transcripts in the in-meeting side panel.",
                                  "type": "boolean",
                                  "example": true
                                }
                              },
                              "type": "object"
                            },
                            "co_host": {
                              "description": "Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.",
                              "type": "boolean",
                              "example": true
                            },
                            "custom_data_center_regions": {
                              "description": "If set to `true`, you can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to be used by this group for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.",
                              "type": "boolean",
                              "example": true
                            },
                            "custom_live_streaming_service": {
                              "description": "Whether custom livestreaming is enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "custom_service_instructions": {
                              "description": "The specific instructions to allow your account's meeting hosts to configure a custom livestream.",
                              "type": "string",
                              "example": "The specific instructions"
                            },
                            "data_center_regions": {
                              "type": "array",
                              "description": "If the value of `custom_data_center_regions` is `true`, a comma-separated list of the following [data center regions](https://support.zoom.us/hc/en-us/articles/360059254691-Datacenter-abbreviation-list) to opt in to: \n* `AU` — Australia.\n* `LA` — Latin America. \n* `CA` — Canada. \n* `CN` — China. \n* `DE` — Germany. \n* `HK` — Hong Kong SAR. \n* `IN` — India. \n* `IE` — Ireland. \n* `TY` — Japan. \n* `MX` — Mexico. \n* `NL` — Netherlands. \n* `SG` — Singapore. \n* `US` — United States.",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "AU",
                                  "LA",
                                  "CA",
                                  "CN",
                                  "DE",
                                  "HK",
                                  "IN",
                                  "IE",
                                  "TY",
                                  "MX",
                                  "NL",
                                  "SG",
                                  "US"
                                ],
                                "example": "AU"
                              }
                            },
                            "disable_screen_sharing_for_host_meetings": {
                              "description": "Whether the **Disable desktop screen sharing for meetings you host** setting is enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "disable_screen_sharing_for_in_meeting_guests": {
                              "description": "Whether the **Disable screen sharing when guests are in the meeting** setting is enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "e2e_encryption": {
                              "description": "Require that all meetings are encrypted using AES.",
                              "type": "boolean",
                              "example": true
                            },
                            "entry_exit_chime": {
                              "description": "Play sound when participants join or leave.",
                              "type": "string",
                              "example": "all"
                            },
                            "far_end_camera_control": {
                              "description": "Allow another user to take control of the camera during a meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "feedback": {
                              "description": "Enable users to provide feedback to Zoom at the end of the meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "file_transfer": {
                              "description": "Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the users in the group or not.",
                              "type": "boolean",
                              "example": true
                            },
                            "group_hd": {
                              "description": "Enable higher quality video for host and participants. This will require more bandwidth.",
                              "type": "boolean",
                              "example": true
                            },
                            "join_from_desktop": {
                              "description": "Whether to allow participants to join a meeting directly from their desktop browser. Note that the meeting experience from the desktop browser is limited.",
                              "type": "boolean",
                              "example": true
                            },
                            "join_from_mobile": {
                              "description": "Whether to allow participants to join a meeting directly from their mobile browser. Note that the meeting experience from the mobile browser is limited.",
                              "type": "boolean",
                              "example": true
                            },
                            "language_interpretation": {
                              "description": "Information about the [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Using-Language-Interpretation-in-your-meeting-or-webinar) settings.",
                              "properties": {
                                "custom_languages": {
                                  "default": null,
                                  "description": "A list of user-defined supported languages.",
                                  "items": {
                                    "type": "string",
                                    "example": "English"
                                  },
                                  "type": "array"
                                },
                                "enable": {
                                  "description": "Whether to allow hosts to assign participants as interpreters who can interpret one language into another in real-time.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "languages": {
                                  "description": "A list of system-supported languages.",
                                  "enum": [
                                    "English",
                                    "Chinese",
                                    "Japanese",
                                    "German",
                                    "French",
                                    "Russian",
                                    "Portuguese",
                                    "Spanish",
                                    "Korean"
                                  ],
                                  "items": {
                                    "type": "string",
                                    "example": "English"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "live_streaming_facebook": {
                              "description": "Whether Facebook livestreaming is enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "live_streaming_youtube": {
                              "description": "Whether YouTube livestreaming is enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "manual_captioning": {
                              "description": "Information about manual captioning settings.",
                              "properties": {
                                "allow_to_type": {
                                  "description": "Whether to allow the host to manually caption or let the host assign a participant to provide manual captioning.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "auto_generated_captions": {
                                  "description": "Whether to enable Zoom's [live transcription feature](https://support.zoom.us/hc/en-us/articles/207279736-Managing-closed-captioning-and-live-transcription#h_01FHGGHYJ4457H4GSZY0KM3NSB).",
                                  "type": "boolean",
                                  "example": true
                                },
                                "full_transcript": {
                                  "description": "Whether to enable the viewing of full transcripts in the in-meeting side panel.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "manual_captions": {
                                  "description": "Whether to [enable manual closed captioning](https://support.zoom.us/hc/en-us/articles/207279736-Managing-closed-captioning-and-live-transcription).",
                                  "type": "boolean",
                                  "example": true
                                },
                                "save_captions": {
                                  "description": "Whether to allow participants to [save closed captions or transcripts](https://support.zoom.us/hc/en-us/articles/360060958752). \n\n **Note:** If the `full_transcript` field is set to `false`, participants **cannot** save captions.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "third_party_captioning_service": {
                                  "description": "Whether to allow the use of an API token to integrate with a [3rd-party device](https://support.zoom.us/hc/en-us/articles/115002212983) to provide closed captioning.",
                                  "type": "boolean",
                                  "example": true
                                }
                              },
                              "type": "object"
                            },
                            "meeting_reactions": {
                              "description": "Whether meeting participants can [communicate using the emoji reactions](https://support.zoom.us/hc/en-us/articles/115001286183-Nonverbal-feedback-and-meeting-reactions) located in the **Reactions** menu in the meeting toolbar.",
                              "type": "boolean",
                              "example": true
                            },
                            "meeting_survey": {
                              "description": "Whether to allow the host to present a survey to participants once a meeting has ended. This feature is only available in version 5.7.3 or higher.",
                              "type": "boolean",
                              "example": true
                            },
                            "non_verbal_feedback": {
                              "description": "Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel.",
                              "type": "boolean",
                              "example": true
                            },
                            "only_host_view_device_list": {
                              "description": "Show the list of H.323/SIP devices only to the host.",
                              "type": "boolean",
                              "example": true
                            },
                            "original_audio": {
                              "description": "Allow users to select original sound during a meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "polling": {
                              "description": "Add 'Polls' to the meeting controls. This allows the host to survey the attendees.",
                              "type": "boolean",
                              "example": true
                            },
                            "post_meeting_feedback": {
                              "description": "Display end-of-meeting experience feedback survey.",
                              "type": "boolean",
                              "example": true
                            },
                            "private_chat": {
                              "description": "Allow meeting participants to send a private 1:1 message to another participant.",
                              "type": "boolean",
                              "example": true
                            },
                            "record_play_own_voice": {
                              "description": "When each participant joins by telephone, allow the option to record and play their own voice as entry and exit chimes.",
                              "type": "boolean",
                              "example": true
                            },
                            "remote_control": {
                              "description": "During screen sharing, allow the person who is sharing to let others control the shared content.",
                              "type": "boolean",
                              "example": true
                            },
                            "remote_support": {
                              "description": "Allow meeting host to provide 1:1 remote support to another participant.",
                              "type": "boolean",
                              "example": true
                            },
                            "request_permission_to_unmute": {
                              "description": "Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the group or not.",
                              "type": "boolean",
                              "example": true
                            },
                            "screen_sharing": {
                              "description": "Allow host and participants to share their screen or content during meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "sending_default_email_invites": {
                              "description": "Allow users to invite participants by email only by default.",
                              "type": "boolean",
                              "example": true
                            },
                            "show_a_join_from_your_browser_link": {
                              "description": "Whether to allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is useful for participants who cannot download, install, or run applications. Note that the meeting experience from the browser is limited.",
                              "type": "boolean",
                              "example": true
                            },
                            "show_browser_join_link": {
                              "description": "Allow participants to join a meeting directly from their browser.",
                              "type": "boolean",
                              "example": true
                            },
                            "show_device_list": {
                              "description": "Show the list of H.323/SIP devices.",
                              "type": "boolean",
                              "example": true
                            },
                            "show_meeting_control_toolbar": {
                              "description": "Always show meeting controls during a meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "slide_control": {
                              "description": "Whether the person sharing during a presentation can allow others to control the slide presentation. This feature is only available in version 5.8.3 or higher.",
                              "type": "boolean",
                              "example": true
                            },
                            "stereo_audio": {
                              "description": "Allow users to select stereo audio during a meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "unchecked_data_center_regions": {
                              "description": "If the value of `custom_data_center_regions` is `true`, a comma-separated list of the following [data center regions](https://support.zoom.us/hc/en-us/articles/360059254691-Datacenter-abbreviation-list) to **not** opt in to: \n* `EU` — Europe. \n* `HK` — Hong Kong. \n* `AU` — Australia. \n* `IN` — India. \n* `LA` — Latin America. \n* `TY` — Tokyo. \n* `CN` — China. \n* `US` — United States. \n* `CA` — Canada.",
                              "enum": [
                                "EU",
                                "HK",
                                "AU",
                                "IN",
                                "TY",
                                "CN",
                                "US",
                                "CA",
                                "DE",
                                "NL",
                                "LA"
                              ],
                              "items": {
                                "type": "string",
                                "example": "EU"
                              },
                              "type": "array"
                            },
                            "use_html_format_email": {
                              "description": "Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.",
                              "type": "boolean",
                              "example": true
                            },
                            "virtual_background": {
                              "description": "Enable virtual background.",
                              "type": "boolean",
                              "example": true
                            },
                            "virtual_background_settings": {
                              "description": "Settings to manage virtual background.",
                              "properties": {
                                "allow_upload_custom": {
                                  "description": "Allow users to upload custom backgrounds.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "allow_videos": {
                                  "description": "Allow use of videos for virtual backgrounds.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "enable": {
                                  "description": "Enable virtual background.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "files": {
                                  "items": {
                                    "properties": {
                                      "id": {
                                        "description": "Unique identifier of the file.",
                                        "type": "string",
                                        "example": "fawegw4tq43t35h4nhgfnethswe"
                                      },
                                      "is_default": {
                                        "description": "Indicates whether or not this file is the default virtual background file.",
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "name": {
                                        "description": "File name.",
                                        "type": "string",
                                        "example": "File name"
                                      },
                                      "size": {
                                        "description": "File size.",
                                        "type": "integer",
                                        "example": 1435
                                      },
                                      "type": {
                                        "description": "File type.",
                                        "type": "string",
                                        "example": "image"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "waiting_room": {
                              "description": "Attendees cannot join a meeting until a host admits them individually from the waiting room.",
                              "type": "boolean",
                              "example": true
                            },
                            "webinar_chat": {
                              "properties": {
                                "allow_attendees_chat_with": {
                                  "description": "Allow webinar attendees to chat with:\n* `1` — No one.\n* `2` — Host and all panelists.\n* `3` — Everyone.",
                                  "enum": [
                                    1,
                                    2,
                                    3
                                  ],
                                  "type": "integer",
                                  "example": 1
                                },
                                "allow_auto_save_local_chat_file": {
                                  "description": "Whether to automatically save chat messages to a local file on the host's computer when the webinar ends.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "allow_panelists_chat_with": {
                                  "description": "Allow webinar panelists to chat with:\n* `1` — Host and all panelists.\n* `2` — Everyone.",
                                  "enum": [
                                    1,
                                    2
                                  ],
                                  "type": "integer",
                                  "example": 2
                                },
                                "allow_panelists_send_direct_message": {
                                  "description": "Whether to allow webinar panelists to send direct messages to other panelists.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "allow_users_save_chats": {
                                  "description": "Whether to allow webinar attendees to save chats:\n* `0` — Attendees cannot save chats.\n* `1` — Attendees can only save host and panelist chats.\n* `2` — Attendees can save all chats.",
                                  "enum": [
                                    0,
                                    1,
                                    2
                                  ],
                                  "type": "integer",
                                  "example": 0
                                },
                                "default_attendees_chat_with": {
                                  "description": "By default, allow webinar attendees to chat with:\n* `1` — Host and all panelists.\n* `2` — Everyone.",
                                  "enum": [
                                    1,
                                    2
                                  ],
                                  "type": "integer",
                                  "example": 1
                                },
                                "enable": {
                                  "description": "Whether to allow webinar participants to send chat messages.",
                                  "type": "boolean",
                                  "example": true
                                }
                              },
                              "type": "object"
                            },
                            "webinar_live_streaming": {
                              "properties": {
                                "custom_service_instructions": {
                                  "description": "The specific instructions to allow your account's meeting hosts to configure a custom livestream.",
                                  "type": "string",
                                  "example": "The specific instructions test"
                                },
                                "enable": {
                                  "description": "Whether webinar livestreaming is enabled.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "live_streaming_reminder": {
                                  "description": "Whether to notify users to watch the livestream. This does not apply to custom RTMP (real-time messaging protocol).",
                                  "type": "boolean",
                                  "example": true
                                },
                                "live_streaming_service": {
                                  "description": "The available livestreaming services:\n* `facebook`\n* `workplace_by_facebook`\n* `youtube`\n* `custom_live_streaming_service`",
                                  "items": {
                                    "enum": [
                                      "facebook",
                                      "workplace_by_facebook",
                                      "youtube",
                                      "custom_live_streaming_service"
                                    ],
                                    "type": "string",
                                    "x-enum-descriptions": [
                                      "Facebook",
                                      "Workplace by Facebook",
                                      "YouTube",
                                      "Custom Live Streaming Service"
                                    ],
                                    "example": "facebook"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "webinar_polling": {
                              "properties": {
                                "enable": {
                                  "description": "Whether to allow the host to add polls before or during a webinar.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "advanced_polls": {
                                  "description": "Whether to allow host to create advanced polls and quizzes. Advanced polls and quizzes include single choice, multiple choice, drop down, matching, short answer, long answer, rank order, and fill-in-the-blank questions. Hosts can also set the correct answers for quizzes they create.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "allow_alternative_host_to_add_edit": {
                                  "type": "boolean",
                                  "description": "Whether to allow alternative hosts to add or edit polls and quizzes.",
                                  "example": true
                                }
                              },
                              "type": "object"
                            },
                            "webinar_question_answer": {
                              "description": "Whether attendees can ask the host and panelists questions in the webinar.",
                              "type": "boolean",
                              "example": true
                            },
                            "webinar_survey": {
                              "description": "Whether to allow the host to present surveys to attendees once a webinar has ended.",
                              "type": "boolean",
                              "example": true
                            },
                            "whiteboard": {
                              "description": "Allow participants to share a whiteboard that includes annotation tools.",
                              "type": "boolean",
                              "example": true
                            },
                            "who_can_share_screen": {
                              "description": "Indicates who can share their screen or content during meetings. The value can be one of the following: <br>\n`host`: Only host can share the screen.<br>\n`all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.\n",
                              "enum": [
                                "host",
                                "all"
                              ],
                              "type": "string",
                              "example": "host"
                            },
                            "who_can_share_screen_when_someone_is_sharing": {
                              "description": "Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>\n`host`: Only a host can share the screen when someone else is sharing.<br>\n`all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.\n",
                              "enum": [
                                "host",
                                "all"
                              ],
                              "type": "string",
                              "example": "all"
                            },
                            "workplace_by_facebook": {
                              "description": "Whether Workplace by Facebook is enabled.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "other_options": {
                          "$ref": "#/components/schemas/GroupSettingsOtherOptions"
                        },
                        "profile": {
                          "$ref": "#/components/schemas/Profile"
                        },
                        "recording": {
                          "properties": {
                            "account_user_access_recording": {
                              "description": "Make cloud recordings accessible to account members only.",
                              "type": "boolean",
                              "example": true
                            },
                            "archive": {
                              "description": "[Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted archiving solution access by the Zoom Support team.",
                              "properties": {
                                "enable": {
                                  "description": "Enable the archiving feature.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "settings": {
                                  "properties": {
                                    "audio_file": {
                                      "description": "Include in-meeting and/or in-webinar audio in the archive.",
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "cc_transcript_file": {
                                      "description": "Include closed caption or transcript in the archive.",
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "chat_file": {
                                      "description": "Include in-meeting chat in the archive.",
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "chat_with_sender_email": {
                                      "description": "Include user email in in-meeting chat file.",
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "video_file": {
                                      "description": "Include in-meeting and/or in-webinar video in the archive.",
                                      "type": "boolean",
                                      "example": true
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": {
                                  "description": "Archive types:\n\n* `1`: Only meetings are archived.<br>\n* `2`: Only webinars are archived.<br>\n* `3`: Both meetings and webinars are archived.",
                                  "enum": [
                                    1,
                                    2,
                                    3
                                  ],
                                  "type": "integer",
                                  "example": 2
                                }
                              },
                              "type": "object"
                            },
                            "auto_recording": {
                              "description": "Record meetings automatically as they start.",
                              "type": "string",
                              "example": "local"
                            },
                            "cloud_recording": {
                              "description": "Allow hosts to record and save the meeting / webinar in the cloud.",
                              "type": "boolean",
                              "example": true
                            },
                            "cloud_recording_download": {
                              "description": "Allow anyone with a link to the cloud recording to download.",
                              "type": "boolean",
                              "example": true
                            },
                            "cloud_recording_download_host": {
                              "description": "Allow only the host with a link to the cloud recording to download.",
                              "type": "boolean",
                              "example": true
                            },
                            "host_delete_cloud_recording": {
                              "description": "Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.",
                              "type": "boolean",
                              "example": true
                            },
                            "record_files_separately": {
                              "type": "object",
                              "description": "The account's [**Record active speaker, gallery view and shared screen separately**](https://support.zoom.us/hc/en-us/articles/360060316092-Changing-basic-and-advanced-cloud-recording-settings#h_01F4CYJTCTXNS2MXH00W9EFG6R) settings.",
                              "properties": {
                                "active_speaker": {
                                  "type": "boolean",
                                  "description": "Whether recording only the active speaker is enabled.",
                                  "example": true
                                },
                                "gallery_view": {
                                  "type": "boolean",
                                  "description": "Whether recording only the gallery view is enabled.",
                                  "example": true
                                },
                                "shared_screen": {
                                  "type": "boolean",
                                  "description": "Whether recording only shared screen is enabled.",
                                  "example": true
                                }
                              }
                            },
                            "display_participant_name": {
                              "type": "boolean",
                              "description": "Whether participants' names display in the recording.",
                              "example": true
                            },
                            "recording_thumbnails": {
                              "type": "boolean",
                              "description": "Whether thumbnails of the presenter are recorded when they are sharing their screen.",
                              "example": true
                            },
                            "optimize_recording_for_3rd_party_video_editor": {
                              "description": "Whether recordings will be optimized for a 3rd party video editor. This can increase the file size and the time it takes to generate recording files.",
                              "type": "boolean",
                              "example": true
                            },
                            "recording_highlight": {
                              "description": "Whether the [recording highlights](https://support.zoom.us/hc/en-us/articles/360060802432) feature is enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "save_panelist_chat": {
                              "description": "Whether panelist chats are saved to the recording.",
                              "type": "boolean",
                              "example": true
                            },
                            "save_poll_results": {
                              "description": "Whether poll results shared during the meeting or webinar are saved. This also includes poll results shared during the meeting or webinar.",
                              "type": "boolean",
                              "example": true
                            },
                            "save_close_caption": {
                              "description": "Whether [closed captions](https://support.zoom.us/hc/en-us/articles/207279736) are saved as a VTT (Video Track Text) file.",
                              "type": "boolean",
                              "example": true
                            },
                            "ip_address_access_control": {
                              "description": "Setting to allow cloud recording access only from specific IP address ranges.\n",
                              "properties": {
                                "enable": {
                                  "description": "If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.\n\n",
                                  "type": "boolean",
                                  "example": true
                                },
                                "ip_addresses_or_ranges": {
                                  "description": "IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.\n\nExample: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`\n\n",
                                  "type": "string",
                                  "example": ""
                                }
                              },
                              "type": "object"
                            },
                            "local_recording": {
                              "description": "Allow hosts and participants to record the meeting to a local file.",
                              "type": "boolean",
                              "example": true
                            },
                            "prevent_host_access_recording": {
                              "description": "If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.\n\n",
                              "type": "boolean",
                              "example": true
                            },
                            "record_audio_file": {
                              "description": "Whether to record one audio file for all participants.",
                              "type": "boolean",
                              "example": true
                            },
                            "record_gallery_view": {
                              "description": "When someone is sharing their screen, active speaker will show on the top right corner of the shared screen.",
                              "type": "boolean",
                              "example": true
                            },
                            "record_speaker_view": {
                              "description": "Record active speaker with shared screen.",
                              "type": "boolean",
                              "example": true
                            },
                            "recording_audio_transcript": {
                              "description": "Automatically transcribe the audio of a meeting or webinar for cloud recordings.",
                              "type": "boolean",
                              "example": true
                            },
                            "save_chat_text": {
                              "description": "Save chat messages from the meeting / webinar.",
                              "type": "boolean",
                              "example": true
                            },
                            "show_timestamp": {
                              "description": "Add a timestamp to the recording.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "schedule_meeting": {
                          "properties": {
                            "audio_type": {
                              "description": "Determine how participants can join the audio portion of the meeting.",
                              "type": "string",
                              "example": "both"
                            },
                            "embed_password_in_join_link": {
                              "description": "If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.\n ",
                              "type": "boolean",
                              "example": true
                            },
                            "force_pmi_jbh_password": {
                              "deprecated": true,
                              "description": "If join before host option is enabled for a personal meeting, then enforce password requirement.\n\n\n**This field will be deprecated in near future.** If you would like to enable this setting, we highly encourage you to use the `require_password_for_pmi_meetings` field.\n\n",
                              "type": "boolean",
                              "example": true
                            },
                            "host_video": {
                              "description": "Start meetings with host video on.",
                              "type": "boolean",
                              "example": true
                            },
                            "join_before_host": {
                              "description": "Allow participants to join the meeting before the host arrives",
                              "type": "boolean",
                              "example": true
                            },
                            "mute_upon_entry": {
                              "description": "Automatically mute all participants when they join the meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "participant_video": {
                              "description": "Start meetings with participant video on.",
                              "type": "boolean",
                              "example": true
                            },
                            "personal_meeting": {
                              "description": "Personal Meeting Setting.<br><br>\n`true`: Indicates that the **\"Enable Personal Meeting ID\"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>\n`false`: Indicates that the **\"Enable Personal Meeting ID\"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.\nFor Zoom Phone only:If a user has been assigned a desk phone, **\"Elevate to Zoom Meeting\"** on desk phone will be disabled.\n\n\n",
                              "type": "boolean",
                              "example": true
                            },
                            "pstn_password_protected": {
                              "description": "Generate and send new passwords for newly scheduled or edited meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "require_password_for_instant_meetings": {
                              "description": "If enabled, a random password will be generated on the user's end who starts the instant meeting. Other participants will have to enter the password to join the meeting. If you use PMI for your instant meetings, this option will be disabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "require_password_for_pmi_meetings": {
                              "description": "Indicates whether a password is required for [PMI](https://support.zoom.us/hc/en-us/articles/203276937-Using-Personal-Meeting-ID-PMI-) meetings or not. The value can be one of the following:<br>\n`none`: Do not require password for PMI meetings.<br> \n`all`: Require participants to enter password for all PMI enabled meetings.<br> `jbh_only`: Require password only for meetings where the **\"join before host\"** setting is enabled.",
                              "enum": [
                                "all",
                                "jbh_only",
                                "none"
                              ],
                              "type": "string",
                              "example": "jbh_only"
                            },
                            "require_password_for_scheduled_meetings": {
                              "description": "Require a password for meetings which have already been scheduled\n",
                              "type": "boolean",
                              "example": true
                            },
                            "require_password_for_scheduling_new_meetings": {
                              "description": "This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting.",
                              "type": "boolean",
                              "example": true
                            },
                            "upcoming_meeting_reminder": {
                              "description": "Receive desktop notification for upcoming meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "use_pmi_for_instant_meetings": {
                              "description": "Indicates whether PMI is enabled for all instant meetings or not.",
                              "type": "boolean",
                              "example": true
                            },
                            "use_pmi_for_schedule_meetings": {
                              "description": "Indicates whether PMI is enabled for all scheduled meetings or not.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "telephony": {
                          "properties": {
                            "audio_conference_info": {
                              "description": "",
                              "type": "string",
                              "example": "test"
                            },
                            "telephony_regions": {
                              "description": "Indicates where most of the participants call into or call from during a meeting.",
                              "properties": {
                                "selection_values": {
                                  "description": "The account's selected telephony regions that indicate where most participants call into or call from during a meeting.",
                                  "type": "string",
                                  "example": "CNTB"
                                }
                              },
                              "type": "object"
                            },
                            "third_party_audio": {
                              "description": "Allow users to join the meeting using the existing 3rd party audio configuration.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/GroupUserSettingsAuthentication"
                    },
                    {
                      "description": "The group's meeting and webinar security settings.",
                      "properties": {
                        "meeting_security": {
                          "properties": {
                            "auto_security": {
                              "description": "Whether all meetings are required to be secured with at least one security option. \n\n This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts.",
                              "type": "boolean",
                              "example": true
                            },
                            "block_user_domain": {
                              "description": "Whether users in specific domains are blocked from joining meetings and webinars.",
                              "type": "boolean",
                              "example": true
                            },
                            "block_user_domain_list": {
                              "description": "A list of blocked domains.",
                              "items": {
                                "maxLength": 30,
                                "minLength": 5,
                                "type": "string",
                                "example": "example.com"
                              },
                              "maxItems": 20,
                              "type": "array"
                            },
                            "chat_etiquette_tool": {
                              "description": "Information about the Chat Etiquette Tool.",
                              "properties": {
                                "enable": {
                                  "description": "Whether the **Chat Etiquette Tool** is enabled.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "policies": {
                                  "description": "Information about the defined **Chat Etiquette Tool** policies.",
                                  "items": {
                                    "properties": {
                                      "description": {
                                        "description": "The policy's description.",
                                        "type": "string",
                                        "example": "The policy's description"
                                      },
                                      "id": {
                                        "description": "The policy ID.",
                                        "type": "string",
                                        "example": "dvgerwe98z8v9vgbug43iubkjn"
                                      },
                                      "is_locked": {
                                        "description": "Whether the policy is locked by an account-level user. When it is locked, users cannot update the policy.",
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "keywords": {
                                        "description": "A list of defined rule keywords.",
                                        "items": {
                                          "type": "string",
                                          "example": "key"
                                        },
                                        "type": "array"
                                      },
                                      "name": {
                                        "description": "The policy name.",
                                        "type": "string",
                                        "example": "The policy name"
                                      },
                                      "regular_expression": {
                                        "description": "The regular expression to match to the content of chat messages.",
                                        "type": "string",
                                        "example": "^test"
                                      },
                                      "status": {
                                        "description": "The policy's current status: \n* `activated` — Activated. \n* `deactivated` — Deactivated.",
                                        "enum": [
                                          "activated",
                                          "deactivated"
                                        ],
                                        "type": "string",
                                        "x-enum-descriptions": [
                                          "Activated.",
                                          "Deactivated."
                                        ],
                                        "example": "Activated"
                                      },
                                      "trigger_action": {
                                        "description": "The policy's trigger action: \n* `1` — Ask the user to confirm before they send the message. \n* `2` — Block the user's message.",
                                        "enum": [
                                          1,
                                          2
                                        ],
                                        "type": "integer",
                                        "x-enum-descriptions": [
                                          "Ask the user to confirm before they send the message.",
                                          "Block the user's message."
                                        ],
                                        "example": 2
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "embed_password_in_join_link": {
                              "description": "Whether the meeting password will be encrypted and included in the invitation link. The provided link will allow participants to join the meeting without having to enter the password.",
                              "type": "boolean",
                              "example": true
                            },
                            "encryption_type": {
                              "description": "The type of encryption used to start a meeting: \n* `enhanced_encryption` — Enhanced encryption. Encryption data is stored in the cloud. \n* `e2ee` — End-to-end encryption. The encryption key is stored on the local device and cannot be obtained by anyone else. E2EE also [**disables** certain features](https://support.zoom.us/hc/en-us/articles/360048660871), such as cloud recording, live streaming, and allowing participants to join before the host.",
                              "enum": [
                                "enhanced_encryption",
                                "e2ee"
                              ],
                              "type": "string",
                              "example": "enhanced_encryption"
                            },
                            "end_to_end_encrypted_meetings": {
                              "description": "Whether end-to-end encryption is enabled for meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "meeting_password": {
                              "description": "Whether all instant and scheduled meetings that users can join via client or Zoom Rooms systems are password-protected. [Personal Meeting ID (PMI)](https://support.zoom.us/hc/en-us/articles/203276937) meetings are **not** included in this setting.",
                              "type": "boolean",
                              "example": true
                            },
                            "meeting_password_requirement": {
                              "description": "Information about the meeting and webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).",
                              "properties": {
                                "consecutive_characters_length": {
                                  "description": "The maximum length of consecutive characters (for example, `abcdef`) allowed in a password: \n* `4` through `8` — The maximum consecutive characters length. The length is `n` minus `1`, where `n` is the provided value. For example, if you provide the `4` value, there can only be a maximum of `3` consecutive characters in a password (for example, `abc1x@8fdh`). \n* `0` — Do not apply a consecutive character restriction.",
                                  "enum": [
                                    0,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8
                                  ],
                                  "type": "integer",
                                  "example": 8
                                },
                                "have_letter": {
                                  "description": "Whether the password must contain at least one letter character.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "have_number": {
                                  "description": "Whether the password must contain at least one numeric character.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "have_special_character": {
                                  "description": "Whether the password must contain at least one special character. For example, `!`, `@`, and/or `#` characters.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "have_upper_and_lower_characters": {
                                  "description": "Whether the password must include uppercase and lowercase characters.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "length": {
                                  "description": "The password's minimum length.",
                                  "type": "integer",
                                  "example": 10
                                },
                                "only_allow_numeric": {
                                  "description": "Whether the password must contain **only** numeric characters.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "weak_enhance_detection": {
                                  "description": "Whether users will be informed when the provided password is weak.",
                                  "type": "boolean",
                                  "example": true
                                }
                              },
                              "type": "object"
                            },
                            "only_authenticated_can_join_from_webclient": {
                              "description": "Whether to specify that only authenticated users can join the meeting from the web client.",
                              "type": "boolean",
                              "example": true
                            },
                            "phone_password": {
                              "description": "Whether a password is required for participants joining by phone. \n\n If enabled and the meeting is password-protected, a numeric password is required for participants to join by phone. For meetings with alphanumeric passwords, a numeric password will be generated.",
                              "type": "boolean",
                              "example": true
                            },
                            "pmi_password": {
                              "description": "Whether all Personal Meeting ID (PMI) meetings that users can join via client or Zoom Rooms systems are password-protected.",
                              "type": "boolean",
                              "example": true
                            },
                            "require_password_for_scheduled_meeting": {
                              "description": "Whether a password is required for meetings that have already been scheduled.",
                              "type": "boolean",
                              "example": true
                            },
                            "require_password_for_scheduled_webinar": {
                              "description": "Whether a password is required for webinars that have already been scheduled.",
                              "type": "boolean",
                              "example": true
                            },
                            "waiting_room": {
                              "description": "Whether participants are placed in the [**Waiting Room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) when they join a meeting. \n\n When the **Waiting Room** feature is enabled, the [**Allow participants to join before host**](https://support.zoom.us/hc/en-us/articles/202828525-Allow-participants-to-join-before-host) setting is disabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "waiting_room_settings": {
                              "description": "Information about the Waiting Room settings.",
                              "properties": {
                                "participants_to_place_in_waiting_room": {
                                  "description": "The type of participants to be admitted to the Waiting Room: \n* `0` — All attendees. \n* `1` — Users who are not in your account. \n* `2` — Users who are not in your account and are not part of your [allowed domains list](https://support.zoom.us/hc/en-us/articles/360037117472-Configuring-authentication-profiles#h_e3cf0d5f-eec7-4c2a-ad29-ef2a5079a7da).",
                                  "enum": [
                                    0,
                                    1,
                                    2
                                  ],
                                  "type": "integer",
                                  "example": 0
                                },
                                "users_who_can_admit_participants_from_waiting_room": {
                                  "description": "The users who can admit participants from the Waiting Room: \n* `0` — Host and co-hosts only. \n* `1` — Host, co-hosts, and anyone who bypassed the Waiting Room if the host and co-hosts are not present.",
                                  "enum": [
                                    0,
                                    1
                                  ],
                                  "type": "integer",
                                  "example": 1
                                },
                                "whitelisted_domains_for_waiting_room": {
                                  "description": "If the `participants_to_place_in_waiting_room` field is `2`, a comma-separated list of the domains that can bypass the Waiting Room (`\"example.com,example2.com\"`).",
                                  "type": "string",
                                  "example": "example.com"
                                }
                              },
                              "type": "object"
                            },
                            "webinar_password": {
                              "description": "Whether a password is generated when scheduling webinars. Participants must use the generated password to join the scheduled webinar.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "Meeting/Webinar Security Group Settings",
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**Error Code**: `200` <br>\nOnly available for paid account.\n\n**HTTP Status Code**: `200` <br>\nGroup Settings Returned.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error Code:** `4130` <br>\nGroup does not exist: {groupId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Id of the group.",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "0mgThLiRQH2bUHvIaL4t2g"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Optional query parameters: \n* `meeting_authentication` — [Meeting authentication settings](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars). \n* `recording_authentication` — [Recording authentication settings](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings). \n* `meeting_security` — Meeting security settings.",
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                "meeting_authentication",
                "recording_authentication",
                "meeting_security"
              ],
              "type": "string",
              "example": "meeting_security"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error code:** `200`<br>\nOnly available for Paid account, {accountId}"
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nSettings updated successfully."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `4130`<br>\nGroup does not exist: {groupId}."
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Update settings for a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-).<p style=\"background-color:#FEEFB3; color:#9F6000\"><br>Note:</b> The `force_pmi_jbh_password` field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.</p>\n**Prerequisite**: Pro, Business, or Education account<br> \n**Scopes**: `group:write:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "updateGroupSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "properties": {
                      "audio_conferencing": {
                        "$ref": "#/components/schemas/GroupSettingsAudioConference"
                      },
                      "email_notification": {
                        "properties": {
                          "alternative_host_reminder": {
                            "description": "Notify the alternative host who is set or removed.",
                            "type": "boolean",
                            "example": true
                          },
                          "cancel_meeting_reminder": {
                            "description": "Notify host and participants when the meeting is cancelled.",
                            "type": "boolean",
                            "example": true
                          },
                          "cloud_recording_available_reminder": {
                            "description": "Whether to notify the host when a cloud recording is available.",
                            "type": "boolean",
                            "example": true
                          },
                          "jbh_reminder": {
                            "description": "Notify host when participants join the meeting before them.",
                            "type": "boolean",
                            "example": true
                          },
                          "recording_available_reminder_alternative_hosts": {
                            "description": "Whether to notify any alternative hosts when a cloud recording is available.",
                            "type": "boolean",
                            "example": true
                          },
                          "recording_available_reminder_schedulers": {
                            "description": "Whether to notify the person who scheduled the meeting or webinar for the host when a cloud recording is available.",
                            "type": "boolean",
                            "example": true
                          },
                          "schedule_for_reminder": {
                            "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "in_meeting": {
                        "properties": {
                          "alert_guest_join": {
                            "description": "Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.",
                            "type": "boolean",
                            "example": true
                          },
                          "allow_live_streaming": {
                            "description": "Whether livestreaming is enabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "allow_participants_chat_with": {
                            "description": "Whether to allow participants to only chat with certain groups:\n* `1` — The participant cannot use chat.\n* `2` — Host and co-hosts only.\n * `3` — The participant can chat with other participants publicly.\n* `4` - The participant can chat with other participants publicly and privately.\n\n**Note:** This setting is only available with client versions 5.7.3 and above.",
                            "enum": [
                              1,
                              2,
                              3,
                              4
                            ],
                            "type": "integer",
                            "x-enum-descriptions": [
                              "No one",
                              "Host and co-hosts",
                              "Everyone",
                              "Everyone and anyone directly"
                            ],
                            "example": 1
                          },
                          "allow_show_zoom_windows": {
                            "description": "Show Zoom windows during screen share.",
                            "type": "boolean",
                            "example": true
                          },
                          "allow_users_save_chats": {
                            "description": "Whether to allow participants to save meeting chats:\n* `1` — Participants cannot save meeting chats.\n* `2` — Participants can only save host and co-host meeting chats.\n* `3` — Participants can save all meeting chats.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer",
                            "x-enum-descriptions": [
                              "Not allow",
                              "Host and co-hosts",
                              "Everyone"
                            ],
                            "example": 3
                          },
                          "annotation": {
                            "description": "Allow participants to use annotation tools to add information to shared screens.",
                            "type": "boolean",
                            "example": true
                          },
                          "attendee_on_hold": {
                            "default": false,
                            "description": "Allow host to put attendee on hold.\n\n**This field has been deprecated and is no longer supported.**",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_answer": {
                            "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_saving_chat": {
                            "description": "Automatically save all in-meeting chats.",
                            "type": "boolean",
                            "example": true
                          },
                          "breakout_room": {
                            "description": "Allow host to split meeting participants into separate, smaller rooms.",
                            "type": "boolean",
                            "example": true
                          },
                          "breakout_room_schedule": {
                            "description": "Whether the host can assign participants to breakout rooms when scheduling. This feature is **only** available in version 4.5.0 or higher.",
                            "type": "boolean",
                            "example": true
                          },
                          "chat": {
                            "description": "Allow meeting participants to send chat message visible to all participants.",
                            "type": "boolean",
                            "example": true
                          },
                          "closed_caption": {
                            "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions.",
                            "type": "boolean",
                            "example": true
                          },
                          "closed_captioning": {
                            "description": "Information about the group's closed captioning settings.",
                            "properties": {
                              "auto_transcribing": {
                                "description": "Whether to allow a live transcription service to transcribe meetings.",
                                "type": "boolean",
                                "example": true
                              },
                              "enable": {
                                "description": "Whether to allow the host to type closed captions or assign a participant or 3rd-party service to provide closed captioning.",
                                "type": "boolean",
                                "example": true
                              },
                              "save_caption": {
                                "description": "Whether to allow participants to save closed captions or transcripts.",
                                "type": "boolean",
                                "example": true
                              },
                              "third_party_captioning_service": {
                                "description": "Whether to allow the use of an API token to integrate with 3rd-party closed captioning services.",
                                "type": "boolean",
                                "example": true
                              },
                              "view_full_transcript": {
                                "description": "Whether to allow the viewing of full transcripts in the in-meeting side panel.",
                                "type": "boolean",
                                "example": true
                              }
                            },
                            "type": "object"
                          },
                          "co_host": {
                            "description": "Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.",
                            "type": "boolean",
                            "example": true
                          },
                          "custom_data_center_regions": {
                            "description": "If set to `true`, you can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to be used by this group for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.",
                            "type": "boolean",
                            "example": true
                          },
                          "custom_live_streaming_service": {
                            "description": "Whether custom livestreaming is enabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "custom_service_instructions": {
                            "description": "The specific instructions to allow your account's meeting hosts to configure a custom livestream.",
                            "type": "string",
                            "example": "The specific instructions"
                          },
                          "data_center_regions": {
                            "type": "array",
                            "description": "If the value of `custom_data_center_regions` is `true`, a comma-separated list of the following [data center regions](https://support.zoom.us/hc/en-us/articles/360059254691-Datacenter-abbreviation-list) to opt in to: \n* `AU` — Australia.\n* `LA` — Latin America. \n* `CA` — Canada. \n* `CN` — China. \n* `DE` — Germany. \n* `HK` — Hong Kong SAR. \n* `IN` — India. \n* `IE` — Ireland. \n* `TY` — Japan. \n* `MX` — Mexico. \n* `NL` — Netherlands. \n* `SG` — Singapore. \n* `US` — United States.",
                            "items": {
                              "type": "string",
                              "enum": [
                                "AU",
                                "LA",
                                "CA",
                                "CN",
                                "DE",
                                "HK",
                                "IN",
                                "IE",
                                "TY",
                                "MX",
                                "NL",
                                "SG",
                                "US"
                              ],
                              "example": "US"
                            }
                          },
                          "disable_screen_sharing_for_host_meetings": {
                            "description": "Whether to enable the **Disable desktop screen sharing for meetings you host** setting.",
                            "type": "boolean",
                            "example": true
                          },
                          "disable_screen_sharing_for_in_meeting_guests": {
                            "description": "Whether to enable the **Disable screen sharing when guests are in the meeting** setting.",
                            "type": "boolean",
                            "example": true
                          },
                          "e2e_encryption": {
                            "description": "Require that all meetings are encrypted using AES.",
                            "type": "boolean",
                            "example": true
                          },
                          "entry_exit_chime": {
                            "description": "Play sound when participants join or leave.",
                            "enum": [
                              "host",
                              "all",
                              "none"
                            ],
                            "type": "string",
                            "example": "host"
                          },
                          "far_end_camera_control": {
                            "description": "Allow another user to take control of the camera during a meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "feedback": {
                            "description": "Enable users to provide feedback to Zoom at the end of the meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "file_transfer": {
                            "description": "Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the users in the group or not.",
                            "type": "boolean",
                            "example": true
                          },
                          "group_hd": {
                            "description": "Enable higher quality video for host and participants. This will require more bandwidth.",
                            "type": "boolean",
                            "example": true
                          },
                          "join_from_desktop": {
                            "description": "Whether to allow participants to join a meeting directly from their desktop browser. Note that the meeting experience from the desktop browser is limited.",
                            "type": "boolean",
                            "example": true
                          },
                          "join_from_mobile": {
                            "description": "Whether to allow participants to join a meeting directly from their mobile browser. Note that the meeting experience from the mobile browser is limited.",
                            "type": "boolean",
                            "example": true
                          },
                          "language_interpretation": {
                            "description": "Information about the [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Using-Language-Interpretation-in-your-meeting-or-webinar) settings.",
                            "properties": {
                              "custom_languages": {
                                "default": null,
                                "description": "A list of user-defined supported languages.",
                                "items": {
                                  "type": "string",
                                  "example": "English"
                                },
                                "type": "array"
                              },
                              "enable": {
                                "description": "Whether to allow hosts to assign participants as interpreters who can interpret one language into another in real-time.",
                                "type": "boolean",
                                "example": true
                              }
                            },
                            "type": "object"
                          },
                          "live_streaming_facebook": {
                            "description": "Whether Facebook livestreaming is enabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "live_streaming_youtube": {
                            "description": "Whether YouTube livestreaming is enabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "manual_captioning": {
                            "properties": {
                              "allow_to_type": {
                                "description": "Allow host to type or assign a participant to type.",
                                "type": "boolean",
                                "example": true
                              },
                              "auto_generated_captions": {
                                "description": "Whether to allow a live transcription service to transcribe meetings.",
                                "type": "boolean",
                                "example": true
                              },
                              "full_transcript": {
                                "description": "Whether to allow the viewing of full transcripts in the in-meeting side panel.",
                                "type": "boolean",
                                "example": true
                              },
                              "manual_captions": {
                                "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions.",
                                "type": "boolean",
                                "example": true
                              },
                              "save_captions": {
                                "description": "Whether participants can save closed captions or transcripts.",
                                "type": "boolean",
                                "example": true
                              },
                              "third_party_captioning_service": {
                                "description": "Whether to allow the use of an API token to integrate with 3rd-party closed captioning services.",
                                "type": "boolean",
                                "example": true
                              }
                            },
                            "type": "object"
                          },
                          "meeting_survey": {
                            "description": "Whether to allow the host to present a survey to participants once a meeting has ended. This feature is only available in version 5.7.3 or higher.",
                            "type": "boolean",
                            "example": true
                          },
                          "non_verbal_feedback": {
                            "description": "Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel.",
                            "type": "boolean",
                            "example": true
                          },
                          "only_host_view_device_list": {
                            "description": "Show the list of H.323/SIP devices only to the host.",
                            "type": "boolean",
                            "example": true
                          },
                          "original_audio": {
                            "description": "Allow users to select original sound during a meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "polling": {
                            "description": "Add 'Polls' to the meeting controls. This allows the host to survey the attendees.",
                            "type": "boolean",
                            "example": true
                          },
                          "post_meeting_feedback": {
                            "description": "Display end-of-meeting experience feedback survey.",
                            "type": "boolean",
                            "example": true
                          },
                          "private_chat": {
                            "description": "Allow meeting participants to send a private 1:1 message to another participant.",
                            "type": "boolean",
                            "example": true
                          },
                          "record_play_own_voice": {
                            "description": "When each participant joins by telephone, allow the option to record and play their own voice as entry and exit chimes.",
                            "type": "boolean",
                            "example": true
                          },
                          "remote_control": {
                            "description": "During screen sharing, allow the person who is sharing to let others control the shared content.",
                            "type": "boolean",
                            "example": true
                          },
                          "remote_support": {
                            "description": "Allow meeting host to provide 1:1 remote support to another participant.",
                            "type": "boolean",
                            "example": true
                          },
                          "request_permission_to_unmute": {
                            "description": "Indicate whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option should be enabled for the group or not.",
                            "type": "boolean",
                            "example": true
                          },
                          "screen_sharing": {
                            "description": "Allow host and participants to share their screen or content during meetings.",
                            "type": "boolean",
                            "example": true
                          },
                          "sending_default_email_invites": {
                            "description": "Allow users to invite participants by email only by default.",
                            "type": "boolean",
                            "example": true
                          },
                          "show_a_join_from_your_browser_link": {
                            "description": "Whether to allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is useful for participants who cannot download, install, or run applications. Note that the meeting experience from the browser is limited.",
                            "type": "boolean",
                            "example": true
                          },
                          "show_browser_join_link": {
                            "description": "Allow participants to join a meeting directly from their browser.",
                            "type": "boolean",
                            "example": true
                          },
                          "show_device_list": {
                            "description": "Show the list of H.323/SIP devices.",
                            "type": "boolean",
                            "example": true
                          },
                          "show_meeting_control_toolbar": {
                            "description": "Always show meeting controls during a meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "slide_control": {
                            "description": "Whether the person sharing during a presentation can allow others to control the slide presentation. This feature is only available in version 5.8.3 or higher.",
                            "type": "boolean",
                            "example": true
                          },
                          "stereo_audio": {
                            "description": "Allow users to select stereo audio during a meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "use_html_format_email": {
                            "description": "Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.",
                            "type": "boolean",
                            "example": true
                          },
                          "virtual_background": {
                            "description": "Enable virtual background.",
                            "type": "boolean",
                            "example": true
                          },
                          "waiting_room": {
                            "description": "Attendees cannot join a meeting until a host admits them individually from the waiting room.",
                            "type": "boolean",
                            "example": true
                          },
                          "webinar_chat": {
                            "properties": {
                              "allow_attendees_chat_with": {
                                "description": "Allow webinar attendees to chat with:\n* `1` — No one.\n* `2` — Host and all panelists.\n* `3` — Everyone.",
                                "enum": [
                                  1,
                                  2,
                                  3
                                ],
                                "type": "integer",
                                "example": 3
                              },
                              "allow_auto_save_local_chat_file": {
                                "description": "Whether to automatically save chat messages to a local file on the host's computer when the webinar ends.",
                                "type": "boolean",
                                "example": true
                              },
                              "allow_panelists_chat_with": {
                                "description": "Allow webinar panelists to chat with:\n* `1` — Host and all panelists.\n* `2` — Everyone.",
                                "enum": [
                                  1,
                                  2
                                ],
                                "type": "integer",
                                "example": 2
                              },
                              "allow_panelists_send_direct_message": {
                                "description": "Whether to allow webinar panelists to send direct messages to other panelists.",
                                "type": "boolean",
                                "example": true
                              },
                              "allow_users_save_chats": {
                                "description": "Whether webinar attendees can save chats:\n* `0` — Attendees cannot save chats.\n* `1` — Attendees can only save host and panelist chats.\n* `2` — Attendees can save all chats.",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ],
                                "type": "integer",
                                "example": 0
                              },
                              "default_attendees_chat_with": {
                                "description": "By default, allow webinar attendees to chat with:\n* `1` — Host and all panelists.\n* `2` — Everyone.",
                                "enum": [
                                  1,
                                  2
                                ],
                                "type": "integer",
                                "example": 1
                              },
                              "enable": {
                                "description": "Whether to allow webinar participants to send chat messages.",
                                "type": "boolean",
                                "example": true
                              }
                            },
                            "type": "object"
                          },
                          "webinar_live_streaming": {
                            "properties": {
                              "custom_service_instructions": {
                                "description": "The specific instructions to allow your account's meeting hosts to configure a custom livestream.",
                                "type": "string",
                                "example": "The specific instructions"
                              },
                              "enable": {
                                "description": "Whether webinar livestreaming is enabled.",
                                "type": "boolean",
                                "example": true
                              },
                              "live_streaming_reminder": {
                                "description": "Whether to notify users to watch the livestream. This does not apply to custom RTMP (real-time messaging protocol).",
                                "type": "boolean",
                                "example": true
                              },
                              "live_streaming_service": {
                                "description": "The available livestreaming services:\n* `facebook`\n* `workplace_by_facebook`\n* `youtube`\n* `custom_live_streaming_service`",
                                "items": {
                                  "enum": [
                                    "facebook",
                                    "workplace_by_facebook",
                                    "youtube",
                                    "custom_live_streaming_service"
                                  ],
                                  "type": "string",
                                  "x-enum-descriptions": [
                                    "Facebook",
                                    "Workplace by Facebook",
                                    "YouTube",
                                    "Custom Live Streaming Service"
                                  ],
                                  "example": "Facebook"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "webinar_polling": {
                            "properties": {
                              "advanced_polls": {
                                "description": "Whether to allow host to create advanced polls and quizzes. Advanced polls and quizzes include single choice, multiple choice, drop down, matching, short answer, long answer, rank order, and fill-in-the-blank questions. Hosts can also set the correct answers for quizzes they create.",
                                "type": "boolean",
                                "example": true
                              },
                              "enable": {
                                "description": "Whether to allow the host to add polls before or during a webinar.",
                                "type": "boolean",
                                "example": true
                              }
                            },
                            "type": "object"
                          },
                          "webinar_question_answer": {
                            "description": "Whether attendees can ask the host and panelists questions in the webinar.",
                            "type": "boolean",
                            "example": true
                          },
                          "webinar_survey": {
                            "description": "Whether to allow the host to present surveys to attendees once a webinar has ended.",
                            "type": "boolean",
                            "example": true
                          },
                          "whiteboard": {
                            "description": "Allow participants to share a whiteboard that includes annotation tools.",
                            "type": "boolean",
                            "example": true
                          },
                          "who_can_share_screen": {
                            "description": "Indicates who can share their screen or content during meetings. The value can be one of the following: <br>\n`host`: Only host can share the screen.<br>\n`all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.\n",
                            "enum": [
                              "host",
                              "all"
                            ],
                            "type": "string",
                            "example": "host"
                          },
                          "who_can_share_screen_when_someone_is_sharing": {
                            "description": "Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>\n`host`: Only a host can share the screen when someone else is sharing.<br>\n`all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.\n",
                            "enum": [
                              "host",
                              "all"
                            ],
                            "type": "string",
                            "example": "all"
                          },
                          "workplace_by_facebook": {
                            "description": "Whether Workplace by Facebook is enabled.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "other_options": {
                        "$ref": "#/components/schemas/GroupSettingsOtherOptions"
                      },
                      "profile": {
                        "$ref": "#/components/schemas/Profile"
                      },
                      "recording": {
                        "properties": {
                          "account_user_access_recording": {
                            "description": "Make cloud recordings accessible to account members only.",
                            "type": "boolean",
                            "example": true
                          },
                          "archive": {
                            "description": "[Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted archiving solution access by the Zoom Support team.",
                            "properties": {
                              "enable": {
                                "description": "Enable the archiving feature.",
                                "type": "boolean",
                                "example": true
                              },
                              "settings": {
                                "properties": {
                                  "audio_file": {
                                    "description": "Include in-meeting and/or in-webinar audio in the archive.",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "cc_transcript_file": {
                                    "description": "Include closed caption or transcript in the archive.",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "chat_file": {
                                    "description": "Include in-meeting chat in the archive.",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "chat_with_sender_email": {
                                    "description": "Include user email in in-meeting chat file.",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "video_file": {
                                    "description": "Include in-meeting and/or in-webinar video in the archive.",
                                    "type": "boolean",
                                    "example": true
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "description": "Archive types:\n\n* `1`: Only meetings are archived.<br>\n* `2`: Only webinars are archived.<br>\n* `3`: Both meetings and webinars are archived.",
                                "enum": [
                                  1,
                                  2,
                                  3
                                ],
                                "type": "integer",
                                "example": 1
                              }
                            },
                            "type": "object"
                          },
                          "auto_recording": {
                            "description": "Record meetings automatically as they start.",
                            "type": "string",
                            "example": "local"
                          },
                          "cloud_recording": {
                            "description": "Allow hosts to record and save the meeting / webinar in the cloud.",
                            "type": "boolean",
                            "example": true
                          },
                          "cloud_recording_download": {
                            "description": "Allow anyone with a link to the cloud recording to download.",
                            "type": "boolean",
                            "example": true
                          },
                          "cloud_recording_download_host": {
                            "description": "Allow only the host with a link to the cloud recording to download.",
                            "type": "boolean",
                            "example": true
                          },
                          "host_delete_cloud_recording": {
                            "description": "Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.",
                            "type": "boolean",
                            "example": true
                          },
                          "record_files_separately": {
                            "type": "object",
                            "description": "The account's [**Record active speaker, gallery view and shared screen separately**](https://support.zoom.us/hc/en-us/articles/360060316092-Changing-basic-and-advanced-cloud-recording-settings#h_01F4CYJTCTXNS2MXH00W9EFG6R) settings.",
                            "properties": {
                              "active_speaker": {
                                "type": "boolean",
                                "description": "Whether recording only the active speaker is enabled.",
                                "example": true
                              },
                              "gallery_view": {
                                "type": "boolean",
                                "description": "Whether recording only the gallery view is enabled.",
                                "example": true
                              },
                              "shared_screen": {
                                "type": "boolean",
                                "description": "Whether recording only shared screen is enabled.",
                                "example": true
                              }
                            }
                          },
                          "display_participant_name": {
                            "type": "boolean",
                            "description": "Whether participants' names display in the recording.",
                            "example": true
                          },
                          "recording_thumbnails": {
                            "type": "boolean",
                            "description": "Whether thumbnails of the presenter are recorded when they are sharing their screen.",
                            "example": true
                          },
                          "optimize_recording_for_3rd_party_video_editor": {
                            "description": "Whether recordings will be optimized for a 3rd party video editor. This can increase the file size and the time it takes to generate recording files.",
                            "type": "boolean",
                            "example": true
                          },
                          "recording_highlight": {
                            "description": "Whether the [recording highlights](https://support.zoom.us/hc/en-us/articles/360060802432) feature is enabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "save_panelist_chat": {
                            "description": "Whether panelist chats are saved to the recording.",
                            "type": "boolean",
                            "example": true
                          },
                          "save_poll_results": {
                            "description": "Whether poll results shared during the meeting or webinar are saved. This also includes poll results shared during the meeting or webinar.",
                            "type": "boolean",
                            "example": true
                          },
                          "save_close_caption": {
                            "description": "Whether [closed captions](https://support.zoom.us/hc/en-us/articles/207279736) are saved as a VTT (Video Track Text) file.",
                            "type": "boolean",
                            "example": true
                          },
                          "ip_address_access_control": {
                            "description": "Setting to allow cloud recording access only from specific IP address ranges.\n",
                            "properties": {
                              "enable": {
                                "description": "If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.\n\n",
                                "type": "boolean",
                                "example": true
                              },
                              "ip_addresses_or_ranges": {
                                "description": "IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.\n\nExample: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`\n\n",
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "local_recording": {
                            "description": "Allow hosts and participants to record the meeting to a local file.",
                            "type": "boolean",
                            "example": true
                          },
                          "prevent_host_access_recording": {
                            "description": "If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.\n\n",
                            "type": "boolean",
                            "example": true
                          },
                          "record_audio_file": {
                            "description": "Whether to record one audio file for all participants.",
                            "type": "boolean",
                            "example": true
                          },
                          "record_gallery_view": {
                            "description": "When someone is sharing their screen, active speaker will show on the top right corner of the shared screen.",
                            "type": "boolean",
                            "example": true
                          },
                          "record_speaker_view": {
                            "description": "Record active speaker with shared screen.",
                            "type": "boolean",
                            "example": true
                          },
                          "recording_audio_transcript": {
                            "description": "Automatically transcribe the audio of a meeting or webinar for cloud recordings.",
                            "type": "boolean",
                            "example": true
                          },
                          "save_chat_text": {
                            "description": "Save chat messages from the meeting / webinar.",
                            "type": "boolean",
                            "example": true
                          },
                          "show_timestamp": {
                            "description": "Add a timestamp to the recording.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "schedule_meeting": {
                        "properties": {
                          "audio_type": {
                            "description": "Determine how participants can join the audio portion of the meeting.",
                            "type": "string",
                            "example": "both"
                          },
                          "embed_password_in_join_link": {
                            "description": "If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.\n ",
                            "type": "boolean",
                            "example": true
                          },
                          "force_pmi_jbh_password": {
                            "deprecated": true,
                            "description": "If join before host option is enabled for a personal meeting, then enforce password requirement.",
                            "type": "boolean",
                            "example": true
                          },
                          "host_video": {
                            "description": "Start meetings with host video on.",
                            "type": "boolean",
                            "example": true
                          },
                          "join_before_host": {
                            "description": "Allow participants to join the meeting before the host arrives",
                            "type": "boolean",
                            "example": true
                          },
                          "mute_upon_entry": {
                            "description": "Automatically mute all participants when they join the meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "participant_video": {
                            "description": "Start meetings with participant video on.",
                            "type": "boolean",
                            "example": true
                          },
                          "pstn_password_protected": {
                            "description": "Generate and send new passwords for newly scheduled or edited meetings.",
                            "type": "boolean",
                            "example": true
                          },
                          "require_password_for_all_meetings": {
                            "description": "Require password from all participants before joining a meeting.",
                            "type": "boolean",
                            "example": true
                          },
                          "require_password_for_instant_meetings": {
                            "description": "If enabled, a random password will be generated on the user's end who starts the instant meeting. Other participants will have to enter the password to join the meeting. If you use PMI for your instant meetings, this option will be disabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "require_password_for_pmi_meetings": {
                            "description": "Indicates whether a password is required for [PMI](https://support.zoom.us/hc/en-us/articles/203276937-Using-Personal-Meeting-ID-PMI-) meetings or not. The value can be one of the following:<br>\n`none`: Do not require password for PMI meetings.<br> \n`all`: Require participants to enter password for all PMI enabled meetings.<br> `jbh_only`: Require password only for meetings where the **\"join before host\"** setting is enabled.",
                            "enum": [
                              "all",
                              "jbh_only",
                              "none"
                            ],
                            "type": "string",
                            "example": "jbh_only"
                          },
                          "require_password_for_scheduled_meetings": {
                            "description": "Require a password for meetings which have already been scheduled\n",
                            "type": "boolean",
                            "example": true
                          },
                          "require_password_for_scheduling_new_meetings": {
                            "description": "This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. ",
                            "type": "boolean",
                            "example": true
                          },
                          "upcoming_meeting_reminder": {
                            "description": "Receive desktop notification for upcoming meetings.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "telephony": {
                        "properties": {
                          "audio_conference_info": {
                            "description": "",
                            "type": "string",
                            "example": "test"
                          },
                          "third_party_audio": {
                            "description": "Allow users to join the meeting using the existing 3rd party audio configuration.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "$ref": "#/components/schemas/GroupUserSettingsAuthenticationUpdate"
                  },
                  {
                    "description": "The group's updated meeting and webinar security settings.",
                    "properties": {
                      "meeting_security": {
                        "properties": {
                          "auto_security": {
                            "description": "Whether to require that all meetings are secured with at least one security option. \n\n This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts.",
                            "type": "boolean",
                            "example": true
                          },
                          "block_user_domain": {
                            "description": "Whether to block users in specific domains from joining meetings and webinars.",
                            "type": "boolean",
                            "example": true
                          },
                          "block_user_domain_list": {
                            "description": "The domain to block, up to 20 domains. For example, the `*.example.com` domain.",
                            "items": {
                              "maxLength": 30,
                              "minLength": 5,
                              "type": "string",
                              "example": "*.example.com"
                            },
                            "maxItems": 20,
                            "type": "array"
                          },
                          "chat_etiquette_tool": {
                            "default": null,
                            "description": "Information about the **Chat Etiquette** Tool.",
                            "properties": {
                              "enable": {
                                "default": false,
                                "description": "Whether to enable the **Chat Etiquette Tool**. This value defaults to `false`. \n\n The **Chat Etiquette Tool** allows you to define specific keywords and text patterns in chat to prevent users from inadvertently sharing unwanted messages.",
                                "type": "boolean",
                                "example": true
                              },
                              "policies": {
                                "description": "Information about the defined **Chat Etiquette Tool** policies.",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "The policy ID.",
                                      "type": "string",
                                      "example": "aefwf23dsv;sdo-khuity8"
                                    },
                                    "status": {
                                      "description": "The policy's current status: \n* `activated` — Activated. \n* `deactivated` — Deactivated.",
                                      "enum": [
                                        "activated",
                                        "deactivated"
                                      ],
                                      "type": "string",
                                      "x-enum-descriptions": [
                                        "Activated.",
                                        "Deactivated."
                                      ],
                                      "example": "Activated"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "embed_password_in_join_link": {
                            "description": "Whether the meeting password will be encrypted and included in the invitation link. The provided link will allow participants to join the meeting without having to enter the password.",
                            "type": "boolean",
                            "example": true
                          },
                          "encryption_type": {
                            "description": "The type of encryption to use when starting a meeting: \n* `enhanced_encryption` — Use enhanced encryption. Encryption data is stored in the cloud. \n* `e2ee` — End-to-end encryption. The encryption key is stored on the local device and cannot be obtained by anyone else. Enabling E2EE also [**disables** certain features](https://support.zoom.us/hc/en-us/articles/360048660871), such as cloud recording, live streaming, and allowing participants to join before the host.",
                            "enum": [
                              "enhanced_encryption",
                              "e2ee"
                            ],
                            "type": "string",
                            "example": "e2ee"
                          },
                          "end_to_end_encrypted_meetings": {
                            "description": "Whether to enable end-to-end encryption for meetings. If enabled, you can specify the type of encryption in the `encryption_type` field.",
                            "type": "boolean",
                            "example": true
                          },
                          "meeting_password": {
                            "description": "Whether all instant and scheduled meetings that users can join via client or Zoom Rooms systems are password-protected. [Personal Meeting ID (PMI)](https://support.zoom.us/hc/en-us/articles/203276937) meetings are **not** included in this setting.",
                            "type": "boolean",
                            "example": true
                          },
                          "meeting_password_requirement": {
                            "description": "Information about the meeting and webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).",
                            "properties": {
                              "consecutive_characters_length": {
                                "description": "The maximum length of consecutive characters (for example, `abcdef`) allowed in a password: \n* `4` through `8` — The maximum consecutive characters length. The length is `n` minus `1`, where `n` is the provided value. For example, if you provide the `4` value, there can only be a maximum of `3` consecutive characters in a password (for example, `abc1x@8fdh`). \n* `0` — Do not apply a consecutive character restriction.",
                                "enum": [
                                  0,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8
                                ],
                                "type": "integer",
                                "example": 8
                              },
                              "have_letter": {
                                "description": "Whether the password must contain at least one letter character.",
                                "type": "boolean",
                                "example": true
                              },
                              "have_number": {
                                "description": "Whether the password must contain at least one numeric character.",
                                "type": "boolean",
                                "example": true
                              },
                              "have_special_character": {
                                "description": "Whether the password must contain at least one special character. For example, `!`, `@`, and/or `#` characters.",
                                "type": "boolean",
                                "example": true
                              },
                              "have_upper_and_lower_characters": {
                                "description": "Whether the password must include uppercase and lowercase characters.",
                                "type": "boolean",
                                "example": true
                              },
                              "length": {
                                "description": "The password's minimum length.",
                                "type": "integer",
                                "example": 10
                              },
                              "only_allow_numeric": {
                                "description": "Whether the password must contain **only** numeric characters.",
                                "type": "boolean",
                                "example": true
                              },
                              "weak_enhance_detection": {
                                "description": "Whether users will be informed when the provided password is weak.",
                                "type": "boolean",
                                "example": true
                              }
                            },
                            "type": "object"
                          },
                          "only_authenticated_can_join_from_webclient": {
                            "description": "Whether to specify that only authenticated users can join the meeting from the web client.",
                            "type": "boolean",
                            "example": true
                          },
                          "phone_password": {
                            "description": "Whether to require a password for participants joining by phone. \n\n If enabled and the meeting is password-protected, a numeric password is required for participants to join by phone. For meetings with alphanumeric passwords, a numeric password will be generated.",
                            "type": "boolean",
                            "example": true
                          },
                          "pmi_password": {
                            "description": "Whether all Personal Meeting ID (PMI) meetings that users can join via client or Zoom Rooms systems are password-protected.",
                            "type": "boolean",
                            "example": true
                          },
                          "require_password_for_scheduled_meeting": {
                            "description": "Whether to require a password for meetings that have already been scheduled.",
                            "type": "boolean",
                            "example": true
                          },
                          "require_password_for_scheduled_webinar": {
                            "description": "Whether to require a password for webinars that have already been scheduled.",
                            "type": "boolean",
                            "example": true
                          },
                          "waiting_room": {
                            "description": "Whether participants are placed in the [**Waiting Room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) when they join a meeting. \n\n If the **Waiting Room** feature is enabled, the [**Allow participants to join before host**](https://support.zoom.us/hc/en-us/articles/202828525-Allow-participants-to-join-before-host) setting is automatically disabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "waiting_room_settings": {
                            "description": "Information about the Waiting Room settings.",
                            "properties": {
                              "participants_to_place_in_waiting_room": {
                                "description": "The type of participants to be admitted to the Waiting Room: \n* `0` — All attendees. \n* `1` — Users who are not in your account. \n* `2` — Users who are not in your account and are not part of your [allowed domains list](https://support.zoom.us/hc/en-us/articles/360037117472-Configuring-authentication-profiles#h_e3cf0d5f-eec7-4c2a-ad29-ef2a5079a7da).",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ],
                                "type": "integer",
                                "example": 1
                              },
                              "users_who_can_admit_participants_from_waiting_room": {
                                "description": "The users who can admit participants from the Waiting Room: \n* `0` — Host and co-hosts only. \n* `1` — Host, co-hosts, and anyone who bypassed the Waiting Room if the host and co-hosts are not present.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "type": "integer",
                                "example": 1
                              },
                              "whitelisted_domains_for_waiting_room": {
                                "description": "If the `participants_to_place_in_waiting_room` field is `2`, a comma-separated list of the domains that can bypass the Waiting Room (`\"example.com,example2.com\"`).",
                                "type": "string",
                                "example": "example.com"
                              }
                            },
                            "type": "object"
                          },
                          "webinar_password": {
                            "description": "Whether to generate a password when scheduling webinars. Participants must use the generated password to join the scheduled webinar.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "Meeting/Webinar Security Group Settings",
                    "type": "object"
                  }
                ]
              }
            }
          }
        },
        "summary": "Update a group's settings"
      }
    },
    "/groups/{groupId}/settings/virtual_backgrounds": {
      "delete": {
        "parameters": [
          {
            "description": "The group ID. To get a group's ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API.",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "type": "string",
              "example": ""
            }
          },
          {
            "description": "A comma-separated list of the file IDs to delete.",
            "in": "query",
            "name": "file_ids",
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\n* No content. \n* Deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n* Invalid parameter: {file_ids} \n* Group member not found."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `4130` <br>\n A group with this {groupId} does not exist."
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Use this API to delete a group's [Virtual Background files](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_01EJF3YFEWGT8YA0ZJ079JEDQE). \n\n **Scope:** `group:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* The [Virtual Background feature](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) must be enabled on the account.",
        "operationId": "delGroupVB",
        "summary": "Delete Virtual Background files"
      },
      "post": {
        "parameters": [
          {
            "description": "The group ID. To get a group's ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API.",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Information about the Virtual Background file.",
                  "properties": {
                    "id": {
                      "description": "The file's ID.",
                      "type": "string",
                      "example": ""
                    },
                    "is_default": {
                      "description": "Whether the file is the default Virtual Background file.",
                      "type": "boolean",
                      "example": ""
                    },
                    "name": {
                      "description": "The file's name.",
                      "type": "string",
                      "example": ""
                    },
                    "size": {
                      "description": "The file's size, in bytes.",
                      "type": "string",
                      "example": ""
                    },
                    "type": {
                      "description": "The file type.",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` <br>\n Created"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `120`<br>\nNo file uploaded, verify that a file has been uploaded.<br>\nFile size cannot exceed 15M.<br>\nA maximum of 10 files are allowed for a user.<br>\nOnly jpg/jpeg or png image file can be uploaded.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `1001`<br>\nUser not exist.<br>\nUser {email} not exist or not belong to this account."
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Use this API to [upload Virtual Background files](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_01EJF3YFEWGT8YA0ZJ079JEDQE) for all users in a group to use. \n\n **Scopes:** `group:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \n\n**Prerequisites:** \n* The [Virtual Background feature](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) must be enabled on the account.",
        "operationId": "uploadGroupVB",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "The Virtual Background file's path.",
                    "type": "string",
                    "example": ""
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Upload Virtual Background files"
      }
    },
    "/h323/devices": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nList of H.323/SIP devices returned.<br>\n**Error Code:** `200`<br>\nNo permission."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Devices"
        ],
        "description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to list all H.323/SIP Devices on a Zoom account.<br><br>\n**Scopes:** `h323:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>",
        "operationId": "deviceList",
        "summary": "List H.323/SIP devices"
      },
      "post": {
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nNo permission."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "Device ID.",
                          "type": "string",
                          "example": "abceHewahkrehwiK"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/Device"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `201`<br>\nH.323/SIP device created."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2020`<br>\nH.323 device's display name:{displayName} is already in use.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Devices"
        ],
        "description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to add a H.323/SIP device to your Zoom account<br><br>\n**Scopes:** `h323:write:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` <br>",
        "operationId": "deviceCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          },
          "description": "H.323/SIP device.",
          "required": true
        },
        "summary": "Create a H.323/SIP device"
      }
    },
    "/h323/devices/{deviceId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/DeviceId"
          }
        ],
        "responses": {
          "200": {
            "description": "You do not have the permission to delete this device."
          },
          "204": {
            "description": "H.323/SIP device deleted."
          },
          "300": {
            "description": "H.323 device does not exist: {deviceId}."
          },
          "404": {
            "description": "H.323/SIP device not found."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to delete a H.323/SIP device from your Zoom account.<br><br>\n**Scopes:** `h323:write:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>",
        "operationId": "deviceDelete",
        "summary": "Delete a H.323/SIP device"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/DeviceId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nH.323/SIP device updated."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nH.323 Device does not exist: {deviceId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2020`<br>\nH.323 device's display name:{displayName} is already in use.\n"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to edit information of a H.323/SIP device from your Zoom account.<br><br>\n**Scopes:** `h323:write:admin`<br>\n <br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deviceUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          },
          "required": true
        },
        "summary": "Update a H.323/SIP device"
      }
    },
    "/im/groups": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IMGroupList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\nList of groups returned.\n**Error Code:** `200` <br>\nList of IM groups returned.<br>\nOnly available for paid account:{accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}."
          }
        },
        "tags": [
          "IM Groups"
        ],
        "description": "List [IM directory groups](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management).<br><br>\n**Scopes**: `imgroup:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "imGroups",
        "summary": "List IM directory groups"
      },
      "post": {
        "responses": {
          "200": {
            "description": "**Error Code:** `200` <br>\nOnly available for paid account:{accountId}."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Group ID.",
                      "type": "string",
                      "example": ""
                    },
                    "name": {
                      "description": "Group name.",
                      "type": "string",
                      "example": ""
                    },
                    "search_by_account": {
                      "description": "Members can search for others under same account.",
                      "type": "boolean",
                      "example": ""
                    },
                    "search_by_domain": {
                      "description": "Members can search for others in the same email domain.",
                      "type": "boolean",
                      "example": ""
                    },
                    "search_by_ma_account": {
                      "description": "Members can search for others under same master account, including all sub accounts.",
                      "type": "boolean",
                      "example": ""
                    },
                    "total_members": {
                      "description": "Group member count.",
                      "type": "integer",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              },
              "new": {}
            },
            "description": "**HTTP Status Code:** `201`<br>\nIM Group created."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}."
          },
          "409": {
            "description": "**HTTP Status Code:** `409` <br>\n**Error Code:** `4132` <br>\nGroup name {groupName} is already in use."
          }
        },
        "tags": [
          "IM Groups"
        ],
        "description": "Create an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under your account.<br><br>\n**Scopes**: `imgroup:write:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "imGroupCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Group name: must be unique to one account.",
                    "maxLength": 128,
                    "type": "string",
                    "example": ""
                  },
                  "search_by_account": {
                    "description": "Members can search for others under same account.",
                    "type": "boolean",
                    "example": ""
                  },
                  "search_by_domain": {
                    "description": "Members can search for others in the same email domain.",
                    "type": "boolean",
                    "example": ""
                  },
                  "search_by_ma_account": {
                    "description": "Members can search for others under same master account, including all sub accounts.",
                    "type": "boolean",
                    "example": ""
                  },
                  "type": {
                    "default": "normal",
                    "description": "IM Group types:<br>`normal` - Only members can see automatically see the other members of this group. Other people can search for members within this group. <br>`shared` - Everyone under an account can see the group members automatically.<br>`restricted` - Nobody can see the group or search for members except the members in the group.",
                    "enum": [
                      "normal",
                      "shared",
                      "restricted"
                    ],
                    "type": "string",
                    "x-enum-descriptions": [
                      "Only members can see the group automatically. Other people can search members in the group.",
                      "All people in the account can see the group and members automatically",
                      "Nobody can see the group or search members except the members in the group"
                    ],
                    "example": ""
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Create an IM directory group"
      }
    },
    "/im/groups/{groupId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nIM group deleted.\n\n"
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing field: name."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nIM Group not found.\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}."
          }
        },
        "tags": [
          "IM Groups"
        ],
        "description": "Delete an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under your account.<br><br>\nScopes: `imgroup:write:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "imGroupDelete",
        "summary": "Delete an IM directory group"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "Group ID.",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/IMGroup"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\nIM group object returned.<br>\n**Error Code:** `200` <br>\nOnly available for paid account:{accountId}."
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing field: name."
          },
          "404": {
            "description": "**HTTP Status Code:** <br>\nIM Group not found.<br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}."
          }
        },
        "tags": [
          "IM Groups"
        ],
        "description": "Retrieve an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under your account.<br><br>\nScopes: `imgroup:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` ",
        "operationId": "imGroup",
        "summary": "Retrieve an IM directory group"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nIM group updated."
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing field: name"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nIM Group not found.\n**Error Code:** `4130`<br>\nGroup does not exist:{groupId}."
          }
        },
        "tags": [
          "IM Groups"
        ],
        "description": "Update an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under your account.<br><br>\n**Scopes**: `imgroup:write:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "imGroupUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Group name: must be unique to one account.",
                    "maxLength": 128,
                    "type": "string",
                    "example": ""
                  },
                  "search_by_account": {
                    "description": "Members can search for others under same account.",
                    "type": "boolean",
                    "example": ""
                  },
                  "search_by_domain": {
                    "description": "Members can search for others in the same email domain.",
                    "type": "boolean",
                    "example": ""
                  },
                  "search_by_ma_account": {
                    "description": "Members can search for others under same master account, including all sub accounts.",
                    "type": "boolean",
                    "example": ""
                  },
                  "type": {
                    "description": "IM Group types:<br>`normal` - Only group members can automatically see others in their group. Other people can search for members in the group.<br>`shared` - Everyone under the account can see the group and members automatically.<br>`restricted` - Nobody can see the group or search for members except for the members in the group.",
                    "enum": [
                      "normal",
                      "shared",
                      "restricted"
                    ],
                    "type": "string",
                    "x-enum-descriptions": [
                      "Only members can see the group automatically. Other people can search members in the group.",
                      "All people in the account can see the group and members automatically",
                      "Nobody can see the group or search members except the members in the group"
                    ],
                    "example": ""
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Update an IM directory group"
      }
    },
    "/im/groups/{groupId}/members": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMemberList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\nIM group member list returned.<br>\n**Error Code:** `200` <br> \nOnly available for paid account:{accountId}."
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing field: name."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nIM Group not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "IM Groups"
        ],
        "description": "List the members of an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management).<br><br>\n**Scope:** `imgroup:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "imGroupMembers",
        "summary": "List IM directory group members"
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200` <br>\nOnly available for paid account:{accountId}."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "added_at": {
                      "format": "date-time",
                      "type": "string",
                      "example": ""
                    },
                    "ids": {
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` <br>\nMember added."
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing field: name."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nIM Group not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "IM Groups"
        ],
        "description": "Add members to an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under an account.<br><br>\n**Scope:** `imgroup:write:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "imGroupMembersCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "members": {
                    "description": "List of IM group members.",
                    "items": {
                      "properties": {
                        "email": {
                          "description": "User email. If the user ID is given then ignore the user email. ",
                          "type": "string",
                          "example": ""
                        },
                        "id": {
                          "description": "User ID.",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    "maximum": 10,
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Add IM directory group members"
      }
    },
    "/im/groups/{groupId}/members/{memberId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupId"
          },
          {
            "$ref": "#/components/parameters/MemberId"
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200` <br>\nOnly available for paid account, {accountId}."
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nIM group member deleted."
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing field: name.<br>\nCan not delete account from default group:{groupId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nIM Group or IM Group member not found.<br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "IM Groups"
        ],
        "description": "Delete a member from an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under an account.<br><br>\nScopes: `imgroup:write:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "imGroupMembersDelete",
        "summary": "Delete IM directory group member"
      }
    },
    "/users/{userId}/meetings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/MeetingType"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "The page number of the current page in the returned records.",
            "in": "query",
            "name": "page_number",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "description": "Pagination Object.",
                      "properties": {
                        "next_page_token": {
                          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                          "type": "string",
                          "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3"
                        },
                        "page_count": {
                          "description": "The number of pages returned for the request made.",
                          "type": "integer",
                          "example": 1
                        },
                        "page_number": {
                          "default": 1,
                          "description": "The page number of the current results.",
                          "type": "integer",
                          "example": 1
                        },
                        "page_size": {
                          "default": 30,
                          "description": "The number of records returned with a single API call.",
                          "maximum": 300,
                          "type": "integer",
                          "example": 30
                        },
                        "total_records": {
                          "description": "The total number of all the records available across pages.",
                          "type": "integer",
                          "example": 1
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "meetings": {
                          "description": "List of Meeting objects.",
                          "items": {
                            "allOf": [
                              {
                                "properties": {
                                  "agenda": {
                                    "description": "Meeting description. The length of agenda gets truncated to 250 characters when you list all meetings for a user. To view the complete agenda of a meeting, retrieve details for a single meeting, use the [**Get a meeting**](/api-reference/zoom-api/methods#operation/meeting) API.",
                                    "type": "string",
                                    "example": "My Meeting"
                                  },
                                  "created_at": {
                                    "description": "Time of creation. ",
                                    "format": "date-time",
                                    "type": "string",
                                    "example": "2022-03-23T05:31:16Z"
                                  },
                                  "duration": {
                                    "description": "Meeting duration.",
                                    "type": "integer",
                                    "example": 60
                                  },
                                  "host_id": {
                                    "description": "ID of the user who is set as the host of the meeting.",
                                    "type": "string",
                                    "example": "30R7kT7bTIKSNUFEuH_Qlg"
                                  },
                                  "id": {
                                    "description": "Meeting ID - also known as the meeting number in long (int64) format.",
                                    "format": "int64",
                                    "type": "integer",
                                    "example": 97763643886
                                  },
                                  "join_url": {
                                    "description": "URL using which participants can join a meeting.",
                                    "type": "string",
                                    "example": "https://example.com/j/11111"
                                  },
                                  "pmi": {
                                    "description": "[Personal meeting ID](https://support.zoom.us/hc/en-us/articles/201362843-What-is-Personal-Meeting-ID-PMI-and-Personal-Link-). This field is only returned if PMI was used to schedule the meeting.",
                                    "type": "string",
                                    "example": "97891943927"
                                  },
                                  "start_time": {
                                    "description": "Meeting start time.",
                                    "format": "date-time",
                                    "type": "string",
                                    "example": "2022-03-23T06:00:00Z"
                                  },
                                  "timezone": {
                                    "description": "Timezone to format the meeting start time. ",
                                    "type": "string",
                                    "example": "America/Los_Angeles"
                                  },
                                  "topic": {
                                    "description": "Meeting topic.",
                                    "type": "string",
                                    "example": "My Meeting"
                                  },
                                  "type": {
                                    "description": "Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.",
                                    "enum": [
                                      1,
                                      2,
                                      3,
                                      8
                                    ],
                                    "type": "integer",
                                    "x-enum-descriptions": [
                                      "Instant Meeting",
                                      "Scheduled Meeting",
                                      "Recurring Meeting with no fixed time",
                                      "Recurring Meeting with fixed time"
                                    ],
                                    "example": 2
                                  },
                                  "uuid": {
                                    "description": "Unique Meeting ID. Each meeting instance will generate its own Meeting UUID.",
                                    "type": "string",
                                    "example": "aDYlohsHRtCd4ii1uC2+hA=="
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "List of meetings.",
                  "title": "Group List",
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nList of meeting objects returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nUser ID not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Use this API to list a user's (meeting host) scheduled meetings. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. \n\n**Note:** \n* This API **only** supports scheduled meetings. This API does not return information about instant meetings. \n* This API only returns a user's [unexpired meetings](https://support.zoom.us/hc/en-us/articles/201362373-Meeting-ID#h_c73f9b08-c1c0-4a1a-b538-e01ebb98e844). \n\n **Scopes:** `meeting:read:admin`, `meeting:read` </br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "meetings",
        "summary": "List meetings"
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "assistant_id": {
                          "description": "The ID of the user who scheduled this meeting on behalf of the host.",
                          "type": "string",
                          "example": "kFFvsJc-Q1OSxaJQLvaa_A"
                        },
                        "host_email": {
                          "description": "Email address of the meeting host.",
                          "format": "email",
                          "type": "string",
                          "example": "jchill@example.com"
                        },
                        "id": {
                          "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in \"**long**\" format(represented as int64 data type in JSON), also known as the meeting number.",
                          "format": "int64",
                          "type": "integer",
                          "example": 92674392836
                        },
                        "registration_url": {
                          "description": "URL using which registrants can register for a meeting. This field is only returned for meetings that have enabled registration.",
                          "type": "string",
                          "example": "https://example.com/meeting/register/7ksAkRCoEpt1Jm0wa-E6lICLur9e7Lde5oW6"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/MeetingInfo"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `201`<br>\nMeeting created."
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>\nInvalid enforce_login_domains, separate multiple domains by semicolon.<br>\nA maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `3000`<br> \n* Instant meetings do not support the schedule_for parameter; you cannot schedule an instant meeting for another user.<br>\n* Users in '{0}' have been blocked from joining meetings and webinars. To unblock them, go to the Settings page in the Zoom web portal and update 'Block users in specific domains from joining meetings and webinars'.<br> \n* You cannot schedule a meeting for {0}. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\nUser not found.<br>\n\n**Error Code:** `1001`<br> User {userId} not exist or not belong to this account.\n"
          }
        },
        "tags": [
          "Meetings"
        ],
        "description": "Use this API to [create a meeting](https://support.zoom.us/hc/en-us/articles/201362413-Scheduling-meetings) for a user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n* A meeting's `start_url` value is the URL a host or an alternative host can use to start a meeting. The expiration time for the `start_url` value is **two hours** for all regular users.\n* For `custCreate` meeting hosts (users created with the `custCreate` parameter via the [**Create users**](/api-reference/zoom-api/methods#operation/userCreate) API), the expiration time of the `start_url` parameter is **90 days** from the generation of the `start_url`.\n\n**Note:** \n\nFor security reasons, the recommended way to programmatically (after expiry) get the updated `start_url` value is to call the [**Get a meeting**](/api-reference/zoom-api/methods#operation/meeting) API. Refer to the `start_url` value in the response. \n\n **Scopes:** `meeting:write:admin`, `meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` <br>\n* This API has a daily rate limit of **100 requests per day**. The rate limit is applied against the `userId` of the **meeting host** used to make the request.",
        "operationId": "meetingCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingCreate",
                "properties": {
                  "schedule_for": {
                    "description": "The email address or user ID of the user to schedule a meeting for.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Meeting object.",
          "required": true
        },
        "summary": "Create a meeting"
      }
    },
    "/meetings/{meetingId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          },
          {
            "$ref": "#/components/parameters/OccurrenceId"
          },
          {
            "description": "`true`: Notify host and alternative host about the meeting cancellation via email.\n`false`: Do not send any email notification.",
            "in": "query",
            "name": "schedule_for_reminder",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "description": "`true`: Notify registrants about the meeting cancellation via email. \n\n`false`: Do not send any email notification to meeting registrants. \n\nThe default value of this field is `false`.",
            "in": "query",
            "name": "cancel_meeting_reminder",
            "schema": {
              "type": "string",
              "example": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code**: `204` <br>\nMeeting deleted."
          },
          "400": {
            "description": "**HTTP Status Code**: `400` <br>\n**Error Code**: `1010` <br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code**: `3000` <br>Cannot access meeting information.<br>Invalid occurrence_id.<br>\n**Error Code**: `3002` <br>\nSorry, you cannot delete this meeting since it is in progress.<br>**Error Code**: `3003` <br>You are not the meeting host.<br>\n**Error Code**: `3007` <br>Sorry, you cannot delete this meeting since it has ended.<br>**Error Code**: `3018` <br>\nNot allowed to delete PMI.<br>**Error Code**: `3037` <br>Not allowed to delete PAC. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code**: `404` <br>\nMeeting not found.\n**Error Code**: `1001` <br>\nUser does not exist: {userId}.<br>\n**Error Code**: `3001` <br>\nMeeting with this {meetingId} is not found or has expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Delete a meeting.<br><br>\n**Scopes:** `meeting:write:admin` `meeting:write`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n",
        "operationId": "meetingDelete",
        "summary": "Delete a meeting"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          },
          {
            "description": "Meeting Occurrence ID. Provide this field to view meeting details of a particular occurrence of the [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings).",
            "in": "query",
            "name": "occurrence_id",
            "schema": {
              "type": "string",
              "example": "1648194360000"
            }
          },
          {
            "description": "Set the value of this field to `true` if you would like to view meeting details of all previous occurrences of a [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings). ",
            "in": "query",
            "name": "show_previous_occurrences",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "assistant_id": {
                          "description": "The ID of the user who scheduled this meeting on behalf of the host.",
                          "type": "string",
                          "example": "kFFvsJc-Q1OSxaJQLvaa_A"
                        },
                        "host_email": {
                          "description": "Email address of the meeting host.",
                          "format": "email",
                          "type": "string",
                          "example": "jchill@example.com"
                        },
                        "host_id": {
                          "description": "ID of the user who is set as host of meeting.",
                          "type": "string",
                          "example": "30R7kT7bTIKSNUFEuH_Qlg"
                        },
                        "id": {
                          "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in \"**long**\" format(represented as int64 data type in JSON), also known as the meeting number.",
                          "format": "int64",
                          "type": "integer",
                          "example": 97763643886
                        },
                        "uuid": {
                          "description": "Unique meeting ID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). You can retrieve a list of UUIDs from past meeting instances using the [**List past meeting instances**](/api-reference/zoom-api/methods#operation/pastMeetings) API. Please double encode your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it.\n",
                          "type": "string",
                          "example": "aDYlohsHRtCd4ii1uC2+hA=="
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/MeetingInfoGet"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeeting object returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.<br>**Error Code:** `3000`<br>\nCannot access webinar info. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nUser not exist: {userId}.<br>**Error Code:** `3001`<br>\nMeeting {meetingId} is not found or has expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Retrieve the details of a meeting.<br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n",
        "operationId": "meeting",
        "summary": "Get a meeting"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          },
          {
            "description": "Meeting occurrence id. Support change of agenda, start_time, duration, settings: {host_video, participant_video, join_before_host, mute_upon_entry, waiting_room, watermark, auto_recording}",
            "in": "query",
            "name": "occurrence_id",
            "schema": {
              "type": "string",
              "example": "1648194360000"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nMeeting updated."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nInvalid enforce_login_domains, separate multiple domains by semicolon.<br>\nA maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.<br>\n**Error Code:** `3000`<br>\nCannot access meeting information.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3000`<br>\nInstant meetings do not support the schedule_for parameter; you cannot schedule an instant meeting for another user.<br>\n* Users in '{0}' have been blocked from joining meetings and webinars. To unblock them, go to the Settings page in the Zoom web portal and update 'Block users in specific domains from joining meetings and webinars'.<br>\n* Prescheduling is only available for scheduled meetings (type 2) and recurring meetings with no fixed time (type 3). <br> \n* You cannot schedule a meeting for {0}. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n**Error Code:** `3001`<br>\nA meeting with this {meetingId} is not found or has expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Use this API to update a meeting's details.\n\n**Note:** \n* This API has a rate limit of **100 requests per day**. Because of this, a meeting can only be updated for a maximum of **100 times within a 24-hour period**. \n* The `start_time` value **must** be a future date. If the value is omitted or a date in the past, the API ignores this value and will **not** update any recurring meetings. \n* If the `start_time` value is a future date, the `recurrence` object is **required**.\n\n**Scopes:** `meeting:write:admin`, `meeting:write`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "meetingUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "schedule_for": {
                        "description": "The email address or `userId` of the user to schedule a meeting for.",
                        "type": "string",
                        "example": "jchill@example.com"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "$ref": "#/components/schemas/MeetingUpdate"
                  }
                ]
              }
            }
          },
          "description": "Meeting",
          "required": true
        },
        "summary": "Update a meeting"
      }
    },
    "/meetings/{meetingId}/status": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nMeeting updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.\n**Error Code:** `3000`<br>\nCannot access meeting info.\n**Error Code:** `3003`<br>\nYou're not the meeting host.\n**Error Code:** `3063`<br>\nCan not end on-premise user's meeting: {meetingId}. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}.\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Update the status of a meeting.<br><br>\n**Scopes:** `meeting:write:admin` `meeting:write`\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "meetingStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "description": "`end` - End a meeting.<br>\n`recover` - [Recover](https://support.zoom.us/hc/en-us/articles/360038297111-Recover-a-deleted-meeting) a deleted meeting.\n",
                    "enum": [
                      "end",
                      "recover"
                    ],
                    "type": "string",
                    "example": "recover"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Update meeting status"
      }
    },
    "/meetings/{meetingId}/invite_links": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InviteLinkResponse"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `201` <br>\nMeeting Invite Links Created"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\n* Meeting id does not exist.<br>\n* Invalid meeting id.<br>\n**Error Code:** `3000` Cannot access webinar info.<br>\n**Error Code:** `3001` Meeting does not exist: {meetingId}. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Use this API to create a batch of invitation links for a meeting.\n\n**Scopes**: `meeting:write:admin`, `meeting:write`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "meetingInviteLinksCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InviteLink"
                  }
                ]
              }
            }
          },
          "description": "Meeting invite link object",
          "required": true
        },
        "summary": "Create meeting's invite links"
      }
    },
    "/meetings/{meetingId}/invitation": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingInvitation"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeeting invitation returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Retrieve the meeting invite note that was sent for a specific meeting.<br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "meetingInvitation",
        "summary": "Get meeting invitation"
      }
    },
    "/meetings/{meetingId}/registrants": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          },
          {
            "$ref": "#/components/parameters/OccurrenceId"
          },
          {
            "$ref": "#/components/parameters/RegistrantStatus"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingRegistrantList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nSuccessfully listed meeting registrants."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nMeeting {meetingId} is not found or has expired.<br>\nThis meeting has not set registration as required: {meetingId}.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3000`<br>\nCannot access meeting info. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "A host or a user with admin permission can require [registration for a Zoom meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings). Use this API to list users that have registered for a meeting.<br><br>\n**Scopes**: `meeting:read:admin` `meeting:read`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "meetingRegistrants",
        "summary": "List meeting registrants"
      },
      "post": {
        "summary": "Add a meeting registrant",
        "description": "Use this API to create and submit a user's registration to a meeting. Note that there is a maximum limit of 4,999 registrants per meeting and users will see an error if the meeting's capacity is reached. \n\n **Scopes:** `meeting:write:admin`, `meeting:write` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* The host must be a **Licensed** user type.",
        "operationId": "meetingRegistrantCreate",
        "tags": [
          "Meetings"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          },
          {
            "name": "occurrence_ids",
            "in": "query",
            "description": "A comma-separated list of meeting occurrence IDs. You can get this value with the [Get a meeting](/api-reference/zoom-api/methods#operation/meeting) API.",
            "schema": {
              "type": "string",
              "example": "1648194360000,1648367160000"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Information about the meeting registrant.",
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RegistrantPost"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string",
                        "description": "The registrant's language preference for confirmation emails: \n* `en-US` — English (US) \n* `de-DE` — German (Germany) \n* `es-ES` — Spanish (Spain) \n* `fr-FR` — French (France) \n* `jp-JP` — Japanese \n* `pt-PT` — Portuguese (Portugal) \n* `ru-RU` — Russian \n* `zh-CN` — Chinese (PRC) \n* `zh-TW` — Chinese (Taiwan) \n* `ko-KO` — Korean \n* `it-IT` — Italian (Italy) \n* `vi-VN` — Vietnamese \n* `pl-PL` — Polish \n* `Tr-TR` — Turkish",
                        "enum": [
                          "en-US",
                          "de-DE",
                          "es-ES",
                          "fr-FR",
                          "jp-JP",
                          "pt-PT",
                          "ru-RU",
                          "zh-CN",
                          "zh-TW",
                          "ko-KO",
                          "it-IT",
                          "vi-VN",
                          "pl-PL",
                          "Tr-TR"
                        ],
                        "example": "en-US"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "auto_approve": {
                        "type": "boolean",
                        "description": "If a meeting was scheduled with the `approval_type` field value of `1` (manual approval) but you want to automatically approve meeting registrants, set the value of this field to `true`. \n\n**Note:** You cannot use this field to change approval setting for a meeting originally scheduled with the `approval_type` field value of `0` (automatic approval).",
                        "example": true
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The meeting ID.",
                      "example": 85746065
                    },
                    "join_url": {
                      "type": "string",
                      "description": "The URL the registrant can use to join the meeting. \n\nThe API will not return this field if the meeting was [created](/api-reference/zoom-api/methods#operation/meetingCreate) with the `approval_type` field value of `1` (manual approval).",
                      "example": "https://example.com/j/11111"
                    },
                    "registrant_id": {
                      "type": "string",
                      "description": "The registrant's ID.",
                      "example": "fdgsfh2ey82fuh"
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The meeting's start time.",
                      "example": "2021-07-13T21:44:51Z"
                    },
                    "topic": {
                      "type": "string",
                      "maxLength": 200,
                      "description": "The meeting's topic.",
                      "example": "My Meeting"
                    },
                    "occurrences": {
                      "$ref": "#/components/schemas/Occurrences"
                    }
                  }
                }
              }
            },
            "description": "**HTTP Status Code:** `201` <br>\nMeeting registration created."
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMeeting \"{meetingId}\" not found or has expired."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId} \n\n**Error Code:** `3003` <br>\nYou are not the meeting host. \n\n**Error Code:** `3043` <br>\nMeeting has reached maximum attendee capacity. \n\n**Error Code:** `3000` <br>\nCannot access meeting info. \n\n**Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n* Meeting not found. \n*Registration has not been enabled for this meeting: {meetingId} \n\n**Error Code:** `1001` <br>\n Meeting host does not exist: {userId}"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n You have exceeded the daily rate limit of \"{0}\" for **Add meeting registrant** API requests for the registrant \"{1}\". You can resume these API requests at GMT 00:00:00."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/batch_registrants": {
      "post": {
        "parameters": [
          {
            "description": "Unique identifier of the meeting (Meeting Number).",
            "in": "path",
            "name": "meetingId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "91498058927"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "registrants": {
                      "items": {
                        "properties": {
                          "email": {
                            "description": "Email address of the registrant.",
                            "type": "string",
                            "example": "jchill@example.com"
                          },
                          "join_url": {
                            "description": "Unique URL using which registrant can join the meeting.",
                            "type": "string",
                            "example": "https://example.com/j/11111"
                          },
                          "registrant_id": {
                            "description": "Unique identifier of the registrant.",
                            "type": "string",
                            "example": "9tboDiHUQAeOnbmudzWa5g"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK** <br>\nRegistrants added."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `3038`<br>\nMeeting is over, you can not register now. If you have any questions, please contact the Meeting host.<br><br>\n**Error Code:** `303`<br> \nThis API can only be used for scheduled meeting(meeting type: 2). Batch registration is not supported for other meeting types. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `3001`<br>\nMeeting does not exist: {meetingId}.<br>\n**Error Code:** `3043`<br>\nMeeting has reached maximum attendee capacity.<br>\n**Error Code:** `404`<br>\nRegistration has not been enabled for this meeting: {meetingId}.\n\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429`<br>\nYou have exceeded the daily rate limit of \"{0}\" for meeting **Perform batch registration** API requests for the registrant \"{1}\". You can resume these API requests at GMT 00:00:00."
          }
        },
        "security": [
          {
            "OAuth": []
          },
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Register up to 30 registrants at once for a meeting that requires [registration](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings). <br>\n\n**Prerequisites:**<br>\n* The meeting host must be a Licensed user.\n* The meeting must require registration and should be of type `2`, i.e., they should be scheduled meetings. Instant meetings and Recurring meetings are not supported by this API.<br><br>\n**Scope:** `meeting:write`, `meeting:write:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n\n\n\n\n\n\n\n",
        "operationId": "addBatchRegistrants",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "auto_approve": {
                    "description": "If a meeting was scheduled with approval_type `1` (manual approval), but you would like to automatically approve the registrants that are added via this API, you can set the value of this field to `true`. \n\nYou **cannot** use this field to change approval setting for a meeting  that was originally scheduled with approval_type `0` (automatic approval).",
                    "type": "boolean",
                    "example": true
                  },
                  "registrants": {
                    "items": {
                      "properties": {
                        "email": {
                          "description": "Email address of the registrant.",
                          "format": "email",
                          "type": "string",
                          "example": "jchill@example.com"
                        },
                        "first_name": {
                          "description": "First name of the registrant.",
                          "type": "string",
                          "example": "Jill"
                        },
                        "last_name": {
                          "description": "Last name of the registrant.",
                          "type": "string",
                          "example": "Chill"
                        }
                      },
                      "required": [
                        "first_name",
                        "email"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Perform batch registration"
      }
    },
    "/meetings/{meetingId}/registrants/{registrantId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          },
          {
            "$ref": "#/components/parameters/RegistrantId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "9tboDiHUQAeOnbmudzWa5g"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/MeetingRegistrant"
                    },
                    {
                      "properties": {
                        "create_time": {
                          "description": "The registrant's registration date and time.",
                          "format": "date-time",
                          "type": "string",
                          "example": "2022-03-22T05:58:44Z"
                        },
                        "join_url": {
                          "description": "The URL with which the approved registrant can join the meeting.",
                          "format": "url",
                          "type": "string",
                          "example": "https://example.com/j/11111"
                        },
                        "status": {
                          "description": "The registrant's registration status:\n* `approved` — The registrant is approved to join the meeting. \n* `pending` — The registrant's registration is pending.\n* `denied` — The registrant was declined to join the meeting.",
                          "enum": [
                            "approved",
                            "pending",
                            "denied"
                          ],
                          "type": "string",
                          "example": "approved"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "title": "Meeting Registrant",
                  "type": "object"
                }
              }
            },
            "description": "Success."
          },
          "300": {
            "description": "**Error Code:** `300`<br>Meeting \"{meetingId}\" is not valid or has expired.\nThis meeting has not set required registration: \"{meetingId}\""
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>**Error Code:** `1010`\nUser does not belong to this account: \"{accountId}\"<br>**Error Code:** `3003`\nYou are not the meeting host.<br>**Error Code:** `3000`>\nCannot access meeting info. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`\nMeeting not found.<br>**Error Code:** `1001`<br>\nMeeting host does not exist: \"{userId}\""
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Use this API to get details on a specific user who has registered for the meeting. A host or a user with administrative permissions can require [registration for Zoom meetings](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).\n\n**Scopes:** `meeting:read:admin`, `meeting:read`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* The account must have a Meeting plan",
        "operationId": "meetingRegistrantGet",
        "summary": "Get a meeting registrant"
      },
      "delete": {
        "parameters": [
          {
            "description": "The meeting occurrence ID.",
            "in": "query",
            "name": "occurrence_id",
            "schema": {
              "type": "string",
              "example": "approved"
            }
          },
          {
            "description": "The meeting ID.",
            "in": "path",
            "name": "meetingId",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 91498058927
            }
          },
          {
            "description": "The meeting registrant ID.",
            "in": "path",
            "name": "registrantId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "9tboDiHUQAeOnbmudzWa5g"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP status code:** `204` <br>\nOK"
          },
          "400": {
            "description": "**HTTP status code:** `400` <br>\nBad Request<br>\n\n**Error code:** `200`<br>\nOnly available for paid users: {0}.<br>\n\n**Error code:** `300`<br>\nThe value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.<br>\n\n**Error code:** `404` <br>\nRegistration has not been enabled for this meeting: {0}.<br>\n\n**Error code:** `1001` <br>\nUser {userId} does not exist or does not belong to this account.<br>\n\n**Error code:** `3000` <br>\nCannot access webinar info. ***Note:** Zoom throws this error when the meetingId is a webinarId.*<br>\nRegistrant {0} was not found.\n\n**Error code:** `3001` <br>\nMeeting does not exist: {0}. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          }
        },
        "tags": [
          "Meetings"
        ],
        "description": "Delete a meeting registrant.<br><br>\n**Scopes**: `meeting:write:admin` `meeting:write`<br>\n <br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "meetingregistrantdelete",
        "summary": "Delete a meeting registrant"
      }
    },
    "/meetings/{meetingId}/registrants/status": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          },
          {
            "$ref": "#/components/parameters/OccurrenceId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nRegistrant status updated."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nThis meeting has not set registration as required:{meetingId}."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3000`<br>\nCannot access meeting information.<br>\n**Error Code:** `3003`<br>\nYou're not the meeting host. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting or registrant not found.\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429`<br>\nYou have exceeded the daily rate limit of \"{0}\" for meeting **Update registrant's status** API requests for the registrant \"{1}\". You can resume these API requests at GMT 00:00:00."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Update a meeting registrant's status by either approving, cancelling or denying a registrant from joining the meeting.<br><br>\n**Scopes:** `meeting:write:admin` `meeting:write`\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "meetingRegistrantStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrantStatus"
              }
            }
          },
          "required": true
        },
        "summary": "Update registrant's status"
      }
    },
    "/meetings/{meetingId}/registrants/questions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MeetingRegistrantQuestions"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeeting Registrant Question object returned"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "List registration questions that will be displayed to users while [registering for a meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).<br>\n\n**Scopes:** `meeting:read`, `meeting:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "meetingRegistrantsQuestionsGet",
        "summary": "List registration questions "
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nMeeting Registrant Questions Updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Update registration questions that will be displayed to users while [registering for a meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).<br><br>\n**Scopes:** `meeting:write`, `meeting:write:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n \n\n",
        "operationId": "meetingRegistrantQuestionUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeetingRegistrantQuestions"
                  }
                ]
              }
            }
          },
          "description": "Meeting Registrant Questions",
          "required": true
        },
        "summary": "Update registration questions"
      }
    },
    "/meetings/{meetingId}/polls": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          },
          {
            "description": "Whether to query for polls with the **Anonymous** option enabled: \n* `true` — Query for polls with the **Anonymous** option enabled. \n* `false` — Do not query for polls with the **Anonymous** option enabled.",
            "in": "query",
            "name": "anonymous",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PollList"
                }
              }
            },
            "description": "**HTTP Status Code:** <br>\nList polls of a Meeting  returned"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br>\n **Error Code:** `4400` <br> Meeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**Error Code:** `404`\nMeeting Poll not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Polls allow the meeting host to survey attendees. Use this API to list [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) of a meeting.<br><br>\n\n**Scopes**: `meeting:read:admin` `meeting:read`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites**:<br>\n* Host user type must be **Pro** or higher plan.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.",
        "operationId": "meetingPolls",
        "summary": "List meeting polls"
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "Meeting Poll ID",
                          "type": "string",
                          "example": "QalIoKWLTJehBJ8e1xRrbQ"
                        },
                        "status": {
                          "description": "Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results",
                          "enum": [
                            "notstart",
                            "started",
                            "ended",
                            "sharing"
                          ],
                          "type": "string",
                          "x-enum-descriptions": [
                            "Poll not start",
                            "Poll started",
                            "Poll ended",
                            "Poll is sharing"
                          ],
                          "example": "notstart"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/Poll"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `201` <br>\nMeeting Poll Created"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br>\n **Error Code:** `4400` <br>\n* Meeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n* Advanced meeting polls disabled. To enable this feature, enable the \"Allow host to create advanced polls and quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**Error Code:** `404` <br>\nMeeting not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Polls allow the meeting host to survey attendees. Use this API to create a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) for a meeting.<br><br>\n\n**Scopes**: `meeting:write:admin` `meeting:write`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites**:<br>\n* Host user type must be **Pro** or higher plan.\n* Polling feature must be enabled in the host's account.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.",
        "operationId": "meetingPollCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Poll"
                  }
                ]
              }
            }
          },
          "description": "Meeting poll object",
          "required": true
        },
        "summary": "Create a meeting poll"
      }
    },
    "/meetings/{meetingId}/batch_polls": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "93398114182"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "polls": {
                      "items": {
                        "properties": {
                          "anonymous": {
                            "description": "Whether to allow meeting participants to answer poll questions anonymously: \n* `true` — Anonymous polls enabled. \n* `false` — Participants cannot answer poll questions anonymously.",
                            "type": "boolean",
                            "example": true
                          },
                          "id": {
                            "description": "Meeting Poll ID",
                            "type": "string",
                            "example": "QalIoKWLTJehBJ8e1xRrbQ"
                          },
                          "poll_type": {
                            "description": "The type of poll: \n* `1` — Poll. \n* `2` — Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` — Quiz. This feature must be enabled in your Zoom account.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer",
                            "example": 2
                          },
                          "questions": {
                            "description": "Information about the poll's questions.",
                            "items": {
                              "properties": {
                                "answer_max_character": {
                                  "description": "The allowed maximum number of characters. This field only returns for `short_answer` and `long_answer` polls.",
                                  "type": "integer",
                                  "example": 200
                                },
                                "answer_min_character": {
                                  "description": "The allowed minimum number of characters. This field only returns for `short_answer` and `long_answer` polls.",
                                  "type": "integer",
                                  "example": 1
                                },
                                "answer_required": {
                                  "description": "Whether participants must answer the question: \n* `true` — The participant must answer the question. \n* `false` — The participant does not need to answer the question.",
                                  "type": "boolean",
                                  "example": false
                                },
                                "answers": {
                                  "description": "The poll question's available answers.",
                                  "items": {
                                    "type": "string",
                                    "example": "Extremely useful"
                                  },
                                  "type": "array"
                                },
                                "case_sensitive": {
                                  "default": false,
                                  "description": "Whether the correct answer is case sensitive. This field only returns for `fill_in_the_blank` polls: \n* `true` — The answer is case-sensitive. \n* `false` — The answer is not case-sensitive.",
                                  "type": "boolean",
                                  "example": false
                                },
                                "name": {
                                  "description": "The poll question's title. For `fill_in_the_blank` polls, this field is the poll's question.",
                                  "type": "string",
                                  "example": "How useful was this meeting?"
                                },
                                "prompts": {
                                  "description": "Information about the prompt questions. This object only returns for `matching` and `rank_order` polls.",
                                  "items": {
                                    "properties": {
                                      "prompt_question": {
                                        "description": "The question prompt's title.",
                                        "type": "string",
                                        "example": "How are you?"
                                      },
                                      "prompt_right_answers": {
                                        "description": "The question prompt's correct answers.",
                                        "items": {
                                          "type": "string",
                                          "example": "Good"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "rating_max_label": {
                                  "description": "The high score label used for the `rating_max_value` field. This field only returns for `rating_scale` polls.",
                                  "type": "string",
                                  "example": "Extremely Likely"
                                },
                                "rating_max_value": {
                                  "description": "The rating scale's maximum value. This field only returns for `rating_scale` polls.",
                                  "maximum": 10,
                                  "type": "integer",
                                  "example": 4
                                },
                                "rating_min_label": {
                                  "description": "The low score label used for the `rating_min_value` field. This field only returns for `rating_scale` polls.",
                                  "type": "string",
                                  "example": "Not likely"
                                },
                                "rating_min_value": {
                                  "description": "The rating scale's minimum value. This field only returns for `rating_scale` polls.",
                                  "type": "integer",
                                  "example": 0
                                },
                                "right_answers": {
                                  "description": "The poll question's correct answer(s).",
                                  "items": {
                                    "type": "string",
                                    "example": "Good"
                                  },
                                  "type": "array"
                                },
                                "show_as_dropdown": {
                                  "description": "Whether to display the radio selection as a drop-down box: \n* `true` — Show as a drop-down box. \n* `false` — Do not show as a drop-down box.",
                                  "type": "boolean",
                                  "example": false
                                },
                                "type": {
                                  "description": "The poll's question and answer type: \n* `single` — Single choice. \n* `multiple` — Multiple choice. \n* `matching` — Matching. \n* `rank_order` — Rank order. \n* `short_answer` — Short answer. \n* `long_answer` — Long answer. \n* `fill_in_the_blank` — Fill in the blank. \n* `rating_scale` — Rating scale.",
                                  "enum": [
                                    "single",
                                    "multiple",
                                    "matching",
                                    "rank_order",
                                    "short_answer",
                                    "long_answer",
                                    "fill_in_the_blank",
                                    "rating_scale"
                                  ],
                                  "type": "string",
                                  "x-enum-descriptions": [
                                    "Single choice",
                                    "Multiple choice",
                                    "Matching",
                                    "Rank order",
                                    "Short answer",
                                    "Long answer",
                                    "Fill in the blank",
                                    "Rating scale"
                                  ],
                                  "example": "single"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "status": {
                            "description": "Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results",
                            "enum": [
                              "notstart",
                              "started",
                              "ended",
                              "sharing"
                            ],
                            "type": "string",
                            "x-enum-descriptions": [
                              "Poll not start",
                              "Poll started",
                              "Poll ended",
                              "Poll is sharing"
                            ],
                            "example": "notstart"
                          },
                          "title": {
                            "description": "Title for the Poll",
                            "type": "string",
                            "example": "Learn something new"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` <br>\nMeeting Poll Created"
          },
          "400": {
            "description": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `300` <br>\nInvalid Meeting ID.\n**Error Code:** `300` <br>\nMeeting id does not exist.\n**Error Code:** `3000` <br>\nCannot access meeting information.\n**Error Code:** `3001`<br>\nMeeting does not exist: {meetingId}.<br>\n**Error Code:** `4400` <br>\n* You can only add a maximum of 50 polls. \n* Meeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n* Advanced meeting polls disabled. To enable this feature, enable the \"Allow host to create advanced polls and quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          }
        },
        "tags": [
          "Meetings"
        ],
        "description": "Polls allow the meeting host to survey attendees. Use this API to create batch [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) for a meeting.<br><br>\n\n**Scopes**: `meeting:write:admin` `meeting:write`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites**:<br>\n* Host user type must be **Pro** or higher plan.\n* Polling feature must be enabled in the host's account.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.",
        "operationId": "createBatchPolls",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "polls": {
                    "description": "Information about the meeting's polls.",
                    "items": {
                      "properties": {
                        "anonymous": {
                          "default": false,
                          "description": "Whether to allow meeting participants to answer poll questions anonymously: \n* `true` — Anonymous polls enabled. \n* `false` — Participants cannot answer poll questions anonymously. \n\nThis value defaults to `false`.",
                          "type": "boolean",
                          "example": false
                        },
                        "poll_type": {
                          "default": 1,
                          "description": "The type of poll: \n* `1` — Poll. \n* `2` — Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` — Quiz. This feature must be enabled in your Zoom account. \n\n This value defaults to `1`.",
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "type": "integer",
                          "example": 2
                        },
                        "questions": {
                          "description": "Information about the poll's questions.",
                          "items": {
                            "properties": {
                              "answer_max_character": {
                                "description": "The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls: \n* For `short_answer` polls, a maximum of 500 characters. \n* For `long_answer` polls, a maximum of 2,000 characters.",
                                "type": "integer",
                                "example": 200
                              },
                              "answer_min_character": {
                                "description": "The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a **one** character minimum value.",
                                "minimum": 1,
                                "type": "integer",
                                "example": 1
                              },
                              "answer_required": {
                                "default": false,
                                "description": "Whether participants must answer the question: \n* `true` — The participant must answer the question. \n* `false` — The participant does not need to answer the question. \n\n**Note:** \n* When the poll's `type` value is `1` (Poll), this value defaults to `true`. \n* When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`.",
                                "type": "boolean",
                                "example": false
                              },
                              "answers": {
                                "description": "The poll question's available answers. This field requires a **minimum** of two answers. \n\n* For `single` and `multiple` polls, you can only provide a maximum of 10 answers. \n* For `matching` polls, you can only provide a maximum of 16 answers. \n* For `rank_order` polls, you can only provide a maximum of seven answers.",
                                "items": {
                                  "type": "string",
                                  "example": "Extremely useful"
                                },
                                "minItems": 2,
                                "type": "array"
                              },
                              "case_sensitive": {
                                "default": false,
                                "description": "Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls: \n* `true` — The answer is case-sensitive. \n* `false` — The answer is not case-sensitive. \n\nThis value defaults to `false`.",
                                "type": "boolean",
                                "example": false
                              },
                              "name": {
                                "description": "The poll question's title, up to 255 characters. \n\nFor `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values.",
                                "maxLength": 255,
                                "type": "string",
                                "example": "How useful was this meeting?"
                              },
                              "prompts": {
                                "description": "Information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts.",
                                "items": {
                                  "properties": {
                                    "prompt_question": {
                                      "description": "The question prompt's title.",
                                      "type": "string",
                                      "example": "How are you?"
                                    },
                                    "prompt_right_answers": {
                                      "description": "The question prompt's correct answers: \n* For `matching` polls, you must provide a minimum of two correct answers, up to a maximum of 10 correct answers. \n* For `rank_order` polls, you can only provide one correct answer.",
                                      "items": {
                                        "type": "string",
                                        "example": "Good"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "rating_max_label": {
                                "description": "The high score label used for the `rating_max_value` field. \n\nThis field only applies to the `rating_scale` poll.",
                                "type": "string",
                                "example": "Extremely Likely"
                              },
                              "rating_max_value": {
                                "description": "The rating scale's maximum value, up to a maximum value of 10. \n\nThis field only applies to the `rating_scale` poll.",
                                "maximum": 10,
                                "type": "integer",
                                "example": 4
                              },
                              "rating_min_label": {
                                "description": "The low score label used for the `rating_min_value` field. \n\nThis field only applies to the `rating_scale` poll.",
                                "type": "string",
                                "example": "Not likely"
                              },
                              "rating_min_value": {
                                "description": "The rating scale's minimum value. This value cannot be less than zero. \n\nThis field only applies to the `rating_scale` poll.",
                                "minimum": 1,
                                "type": "integer",
                                "example": 1
                              },
                              "right_answers": {
                                "description": "The poll question's correct answer(s). This field is **required** if the poll's `type` value is `3` (Quiz). \n\n For `single` and `matching` polls, this field only accepts one answer.",
                                "items": {
                                  "type": "string",
                                  "example": "Good"
                                },
                                "minItems": 1,
                                "type": "array"
                              },
                              "show_as_dropdown": {
                                "default": false,
                                "description": "Whether to display the radio selection as a drop-down box: \n* `true` — Show as a drop-down box. \n* `false` — Do not show as a drop-down box. \n\nThis value defaults to `false`.",
                                "type": "boolean",
                                "example": false
                              },
                              "type": {
                                "description": "The poll's question and answer type: \n* `single` — Single choice. \n* `multiple` — Multiple choice. \n* `matching` — Matching. \n* `rank_order` — Rank order. \n* `short_answer` — Short answer. \n* `long_answer` — Long answer. \n* `fill_in_the_blank` — Fill in the blank. \n* `rating_scale` — Rating scale.",
                                "enum": [
                                  "single",
                                  "multiple",
                                  "matching",
                                  "rank_order",
                                  "short_answer",
                                  "long_answer",
                                  "fill_in_the_blank",
                                  "rating_scale"
                                ],
                                "type": "string",
                                "x-enum-descriptions": [
                                  "Single choice",
                                  "Multiple choice",
                                  "Matching",
                                  "Rank order",
                                  "Short answer",
                                  "Long answer",
                                  "Fill in the blank",
                                  "Rating scale"
                                ],
                                "example": "single"
                              }
                            },
                            "type": "object"
                          },
                          "minLength": 1,
                          "required": [
                            "name",
                            "type"
                          ],
                          "type": "array"
                        },
                        "title": {
                          "description": "The poll's title, up to 64 characters.",
                          "maxLength": 64,
                          "type": "string",
                          "example": "Learn something new"
                        }
                      },
                      "type": "object"
                    },
                    "maxItems": 25,
                    "minItems": 1,
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Batch Meeting poll object"
        },
        "summary": "Perform batch poll creation"
      }
    },
    "/meetings/{meetingId}/polls/{pollId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          },
          {
            "description": "The poll ID",
            "in": "path",
            "name": "pollId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "QalIoKWLTJehBJ8e1xRrbQ"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "Meeting Poll ID",
                          "type": "string",
                          "example": "QalIoKWLTJehBJ8e1xRrbQ"
                        },
                        "status": {
                          "description": "Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results",
                          "enum": [
                            "notstart",
                            "started",
                            "ended",
                            "sharing"
                          ],
                          "type": "string",
                          "x-enum-descriptions": [
                            "Poll not start",
                            "Poll started",
                            "Poll ended",
                            "Poll is sharing"
                          ],
                          "example": "notstart"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/Poll"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\nMeeting Poll object returned"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br>\n **Error Code:** `4400` <br> Meeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**Error Code:** `404` <br>\nMeeting Poll not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Polls allow the meeting host to survey attendees. Use this API to get information about a specific meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).<br><br>\n**Scopes**: `meeting:read:admin` `meeting:read`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n\n",
        "operationId": "meetingPollGet",
        "summary": "Get a meeting poll"
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          },
          {
            "description": "The poll ID",
            "in": "path",
            "name": "pollId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "QalIoKWLTJehBJ8e1xRrbQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nMeeting Poll Updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br>\n **Error Code:** `4400` <br>\n* Meeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n* Advanced meeting polls disabled. To enable this feature, enable the \"Allow host to create advanced polls and quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**Error Code:** `404` <br>\nMeeting Poll not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Polls allow the meeting host to survey attendees. Use this API to update information of a specific meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)<br><br>\n**Scopes**: `meeting:write:admin` `meeting:write`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n",
        "operationId": "meetingPollUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Poll"
                  }
                ]
              }
            }
          },
          "description": "Meeting Poll",
          "required": true
        },
        "summary": "Update a meeting poll"
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          },
          {
            "description": "The poll ID",
            "in": "path",
            "name": "pollId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "QalIoKWLTJehBJ8e1xRrbQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nMeeting Poll deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br>\n **Error Code:** `4400` <br> Meeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**Error Code:** `404`\nMeeting Poll not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Polls allow the meeting host to survey attendees. Use this API to delete a meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).<br>\n**Scopes**: `meeting:write:admin` `meeting:write`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` <br>\n**Prerequisites**:<br>\n* Host user type must be **Pro**.\n* Polling feature should be enabled in the host's account.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.",
        "operationId": "meetingPollDelete",
        "summary": "Delete a meeting poll"
      }
    },
    "/meetings/{meetingId}/survey": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MeetingSurvey"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\n Meeting survey object returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br> Bad Request \n\n **Error Code:** `300` <br>\n Invalid meeting ID. \n\n **Error Code:** `3000` <br>\n * Cannot access Webinar information. <br>\n * Meeting survey disabled. To enable this feature, enable the \"Meeting Survey\" setting in the Zoom web portal's \"Settings\" interface. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br> Not Found \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Use this API to return information about a [meeting survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). \n\n **Scopes:** `meeting:read`, `meeting:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* The host must be a **Pro** user type. \n* The [**Meeting Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys) feature enabled in the host's account. \n* The meeting must be a scheduled meeting. Instant meetings do not have survey features enabled.",
        "operationId": "meetingSurveyGet",
        "summary": "Get a meeting survey"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\n Meeting survey updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br> Bad Request \n\n **Error Code:** `300` <br>\n * Invalid meeting ID. <br>\n * Invalid third party survey: {third_party_survey}. \n\n **Error Code:** `3000` <br>\n * Cannot access Webinar information. <br>\n * Meeting survey disabled. To enable this feature, enable the \"Meeting Survey\" setting in the Zoom web portal's \"Settings\" interface. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br> Not Found \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Use this API to update a [meeting survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). \n\n **Scopes:** `meeting:write`, `meeting:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* The host must be a **Pro** user type. \n* The [**Meeting Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys) feature enabled in the host's account. \n* The meeting must be a scheduled meeting. Instant meetings do not have survey features enabled.",
        "operationId": "meetingSurveyUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeetingSurvey"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "summary": "Update a meeting survey"
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\n Meeting survey deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br> Bad Request \n\n **Error Code:** `300` <br>\n Invalid meeting ID. \n\n **Error Code:** `3000` <br>\n * Cannot access Webinar information. <br>\n * Meeting survey disabled. To enable this feature, enable the \"Meeting Survey\" setting in the Zoom web portal's \"Settings\" interface. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br> Not Found \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Use this API to delete a [meeting survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). \n\n **Scopes:** `meeting:write`, `meeting:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* The host must be a **Pro** user type. \n* The [**Meeting Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys) feature enabled in the host's account. \n* The meeting must be a scheduled meeting. Instant meetings do not have survey features enabled.",
        "operationId": "meetingSurveyDelete",
        "summary": "Delete a meeting survey"
      }
    },
    "/users/{userId}/meeting_templates": {
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the user. Retrieve the value of this field by calling the [**List users**](/api-reference/zoom-api/methods#operation/users) API.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "30R7kT7bTIKSNUFEuH_Qlg"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "templates": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Unique identifier of the template.",
                            "type": "string",
                            "example": "AdxbhxCzKgSiWAw"
                          },
                          "name": {
                            "description": "Name of the template.",
                            "type": "string",
                            "example": "My meeting template"
                          },
                          "type": {
                            "description": "Type of the template. The value of this field can be one of the following:<br>\n`1`: meeting template <br>\n`2`: admin meeting template",
                            "type": "integer",
                            "example": 1
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_records": {
                      "description": "Total records found for this request.",
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK** <br>"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `1001`<br> User not exist: {userId}.<br>\nUser {userId} does not exist or does not belong to this account."
          }
        },
        "tags": [
          "Meetings"
        ],
        "description": "Use this API to list [meeting templates](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates) that are available to be used by a user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `meeting:read` or `meeting:read:admin`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n",
        "operationId": "listMeetingTemplates",
        "summary": "List meeting templates"
      }
    },
    "/meetings/{meetingId}/livestream": {
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the meeting.",
            "in": "path",
            "name": "meetingId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "93398114182"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "page_url": {
                      "description": "Live streaming page URL. This is the URL using which anyone can view the livestream of the meeting.",
                      "type": "string",
                      "example": "https://example.com/livestream/123"
                    },
                    "stream_key": {
                      "description": "Stream Key.",
                      "type": "string",
                      "example": "contact-ic@example.com"
                    },
                    "stream_url": {
                      "description": "Stream URL.",
                      "type": "string",
                      "example": "https://example.com/livestream"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nLive Stream details returned.\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nMissing meetingId<br>\nInvalid meetingId<br><br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId} \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist.\n\n"
          }
        },
        "tags": [
          "Meetings"
        ],
        "description": "Zoom allows users to [livestream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Use this API to get a meeting's livestream configuration details such as Stream URL, Stream Key and Page URL.<br><br>\n**Prerequisites:**<br>\n* Meeting host must be a licensed user with a Pro or higher plan.<br>\n* Live streaming details must have been [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the meeting.<br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n\n\n",
        "operationId": "getMeetingLiveStreamDetails",
        "summary": "Get livestream details"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nMeeting livestream updated."
          },
          "300": {
            "description": "**Error Code:** `300` <br>Missing meetingId <br> Invalid meetingId."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>**Error Code:** `1010` <br>\n User does not belong to this account: {accountId}.<br>\n **Error Code:** `3000` Cannot access webinar info. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>**Error Code:** `1001` <br>User {userId} does not exist.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Use this API to update a meeting's livestream information. Zoom allows users to [livestream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform.\n\n**Scopes:** `meeting:write:admin`, `meeting:write`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Meeting host must have a Pro license.",
        "operationId": "meetingLiveStreamUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingLiveStream"
              }
            }
          },
          "description": "Meeting",
          "required": true
        },
        "summary": "Update a livestream"
      }
    },
    "/meetings/{meetingId}/livestream/status": {
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nMeeting livestream updated.\n\n"
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing meetingId.<br>\nInvalid meetingId"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n**Error Code:**`3000`<br>\nCannot access webinar info.<br>\n**Error Code:**`1010`<br>User does not belong to this account: {accountId}. \n\n **Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error Code:**`1001`<br>\nUser {userId} does not exist.<br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429`<br>Too many requests submitted to start the livestream of this meeting: {meetingId}. If the livestream has not already started, retry making a new request after 30 seconds."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Zoom allows users to [livestream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Use this API to update the status of a meeting's livestream.<br><br>\n**Prerequisites:**<br>\n* Meeting host must have a Pro license.<br>\n**Scopes:** `meeting:write:admin` `meeting:write`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n",
        "operationId": "meetingLiveStreamStatusUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingLiveStreamStatus"
              }
            }
          },
          "description": "Meeting",
          "required": true
        },
        "summary": "Update Live Stream Status"
      }
    },
    "/past_meetings/{meetingId}/instances": {
      "get": {
        "parameters": [
          {
            "description": "The past meeting's ID. The meeting ID must be from within the last 30 days. Past meeting IDs expire after 30 days.",
            "in": "path",
            "name": "meetingId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer",
              "example": 93398114182
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingInstances"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\n List of ended meeting instances returned."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Meeting not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Use this API to return a list of past meeting instances. \n\n **Scopes:** `meeting:read:admin`, `meeting:read` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "pastMeetings",
        "summary": "List past meeting instances"
      }
    },
    "/past_meetings/{meetingId}/polls": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in \"**long**\" format(represented as int64 data type in JSON), also known as the meeting number.",
                      "format": "int64",
                      "type": "integer",
                      "example": 93398114182
                    },
                    "questions": {
                      "items": {
                        "properties": {
                          "email": {
                            "description": "Email address of the user who submitted answers to the poll. If the user is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.",
                            "type": "string",
                            "example": "jchill@example.com"
                          },
                          "name": {
                            "description": "Name of the user who submitted answers to the poll. If \"anonymous\" option is enabled for a poll, the participant's polling information will be kept anonymous and the value of `name` field will be \"Anonymous Attendee\".",
                            "type": "string",
                            "example": "Jill Chill"
                          },
                          "question_details": {
                            "items": {
                              "properties": {
                                "answer": {
                                  "description": "Answer submitted by the user.",
                                  "type": "string",
                                  "example": "Good"
                                },
                                "date_time": {
                                  "description": "Date and time at which the answer to the poll was submitted.",
                                  "format": "date-time",
                                  "type": "string",
                                  "example": "2022-03-26T05:37:59Z"
                                },
                                "polling_id": {
                                  "description": "Unique identifier of the poll.",
                                  "type": "string",
                                  "example": "QalIoKWLTJehBJ8e1xRrbQ"
                                },
                                "question": {
                                  "description": "Question asked during the poll.",
                                  "type": "string",
                                  "example": "How are you?"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "start_time": {
                      "description": "The start time of the meeting.",
                      "format": "date-time",
                      "type": "string",
                      "example": "2022-03-26T05:37:59Z"
                    },
                    "uuid": {
                      "description": "Meeting UUID.",
                      "type": "string",
                      "example": "Vg8IdgluR5WDeWIkpJlElQ=="
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nPolls returned successfully."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "[Polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) allow the meeting host to survey attendees. Use this API to list poll results of a meeting.<br><br>\n\n**Scopes**: `meeting:read:admin`, `meeting:read`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` <br>\n**Prerequisites**:<br>\n* Host user type must be **Pro**.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.",
        "operationId": "listPastMeetingPolls",
        "summary": "List past meeting's poll results"
      }
    },
    "/past_meetings/{meetingId}": {
      "get": {
        "summary": "Get past meeting details",
        "description": "Use this API to get information about a past meeting. \n\n **Scopes:** `meeting:read:admin`, `meeting:read` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "pastMeetingDetails",
        "tags": [
          "Meetings"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID).",
                      "example": 5638296721
                    },
                    "uuid": {
                      "type": "string",
                      "description": "The meeting's UUID. You **must** double encode this value if the meeting UUID begins with a `/` character or contains the `//` character.",
                      "example": "4444AAAiAAAAAiAiAiiAii=="
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The meeting's duration, in minutes.",
                      "example": 60
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The meeting's start date and time.",
                      "example": "2021-07-13T21:44:51Z"
                    },
                    "end_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The meeting's end date and time.",
                      "example": "2021-07-13T23:00:51Z"
                    },
                    "host_id": {
                      "type": "string",
                      "description": "The host's ID.",
                      "example": "x1yCzABCDEfg23HiJKl4mN"
                    },
                    "dept": {
                      "type": "string",
                      "description": "The meeting host's department.",
                      "example": "Developers"
                    },
                    "participants_count": {
                      "type": "integer",
                      "description": "The number of meeting participants.",
                      "example": 2
                    },
                    "source": {
                      "type": "string",
                      "description": "Whether the meeting was created directly through Zoom or via an API request: \n* If the meeting was created via an OAuth app, this field returns the OAuth app's name. \n* If the meeting was created via JWT or the Zoom Web Portal, this returns the `Zoom` value.",
                      "example": "Zoom"
                    },
                    "topic": {
                      "type": "string",
                      "description": "The meeting's topic.",
                      "example": "My Meeting"
                    },
                    "total_minutes": {
                      "type": "integer",
                      "description": "The total number of minutes attended by the meeting's host and participants.",
                      "example": 55
                    },
                    "type": {
                      "type": "integer",
                      "description": "The meeting type: \n* `0` — A prescheduled meeting. \n* `1` — An instant meeting. \n* `2` — A scheduled meeting. \n* `3` — A recurring meeting with no fixed time. \n* `4` — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* `7` — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* `8` — A recurring meeting with a fixed time.",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        7,
                        8
                      ],
                      "example": 1
                    },
                    "user_email": {
                      "type": "string",
                      "format": "email",
                      "description": "The user's email address.",
                      "example": "jchill@example.com"
                    },
                    "user_name": {
                      "type": "string",
                      "description": "The user's display name.",
                      "example": "Jill Chill"
                    }
                  }
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\nMeeting information returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\nMeeting not found. \n\n**Error Code:** `1010` \n* User does not exist: {userId} \n* User \"{userId}\" does not exist or does not belong to this account. \n\n**Error Code:** `300` <br>\nCannot access meeting information. \n\n**Error Code:** `200` <br>\nOnly available for paid account: {accountId}"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting not found. \n\n**Error Code:** `3001` \n* This meeting is not available or the meeting ID is invalid. \n* The meeting ID is invalid or the meeting has not ended."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/past_meetings/{meetingUUID}/participants": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingUUID"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationToken"
                    },
                    {
                      "properties": {
                        "participants": {
                          "description": "Array of meeting participant objects.",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.",
                                "format": "uuid",
                                "type": "string",
                                "example": "30R7kT7bTIKSNUFEuH_Qlg"
                              },
                              "name": {
                                "description": "Participant display name.",
                                "type": "string",
                                "example": "Jill Chill"
                              },
                              "user_email": {
                                "description": "Email address of the user. If the user is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.",
                                "type": "string",
                                "example": "jchill@example.com"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeeting participants' report returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser {userId} not exist or not belong to this account.<br><br>\n**Error Code:** `300`<br>\nCannot access meeting information.<br><br>\n**Error Code:** `200`<br>\nOnly available for paid account: {accountId}\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>\nUser not exist: {userId}<br><br>\n**Error Code:** `3001`<br>\nThis meeting is not available or ID is not valid.<br>\nMeeting ID is invalid or not end."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Meetings"
        ],
        "description": "Retrieve information on participants from a past meeting. <br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n**Prerequisites:**<br>\n* Paid account on a Pro or higher plan.\n\n<br> <br>  **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.\n",
        "operationId": "pastMeetingParticipants",
        "summary": "Get past meeting participants"
      }
    },
    "/live_meetings/{meetingId}/events": {
      "patch": {
        "parameters": [
          {
            "description": "The live meeting's ID.",
            "in": "path",
            "name": "meetingId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "93398114182"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "**HTTP Status:** `202` **Accepted**\nRequest processed successfully."
          },
          "400": {
            "description": "**HTTP Status:** `400` **Bad Request** <br><br>\n**Error Code:** `300`<br>\n* Meeting id does not exist.<br>\n* Invalid meeting id.<br>\n* Meeting does not exist.<br>\n* No permission.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001` <br> Meeting {meetingId} is not found or has expired."
          }
        },
        "tags": [
          "Meetings"
        ],
        "description": "Use this API to control [in-meeting](https://support.zoom.us/hc/en-us/articles/360021921032-In-Meeting-Controls) cloud recording features. In-meeting controls include starting and stopping a recording, pausing and resuming a recording, and inviting participants. \n\n**Note:** This API only works for cloud recordings. It does **not** work for local recordings. \n\n**Scopes:** `meeting:write`, `meeting:write:admin`, `meeting:master` \n\n**Prerequisites:**\n* The meeting **must** be a live meeting. \n* [Cloud recording](https://support.zoom.us/hc/en-us/articles/360060231472-Enabling-cloud-recording) must be enabled on the account. \n* The user calling this API must be the host or an alternative meeting host.\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "inMeetingRecordingControl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "method": {
                    "description": "The in-meeting recording method to control: \n* `recording.start` — Start the recording. \n* `recording.stop` — Stop the recording. \n* `recording.pause` — Pause the recording. \n* `recording.resume` — Resume a paused recording. \n* `participant.invite` — Invite a participant to the meeting.",
                    "type": "string",
                    "example": "recording.start"
                  },
                  "params": {
                    "description": "The in-meeting parameters.",
                    "properties": {
                      "contacts": {
                        "description": "The user's email address or the user ID, up to a maximum of 10 contacts. The account must be a part of the meeting host's account.",
                        "items": {
                          "properties": {
                            "email": {
                              "description": "The user's email address. Use this value if you do not have the user's ID. \n\nIf you pass the `id` value, the API ignores this query parameter.",
                              "type": "string",
                              "example": "jchill@example.com"
                            },
                            "id": {
                              "description": "The user's ID.",
                              "type": "string",
                              "example": "30R7kT7bTIKSNUFEuH_Qlg"
                            }
                          },
                          "type": "object"
                        },
                        "maximum": 10,
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Use in-meeting cloud recording controls"
      }
    },
    "/meetings/{meetingId}/token": {
      "get": {
        "summary": "Get meeting's token",
        "description": "Use this API to get a meeting's [closed caption token (caption URL)](https://support.zoom.us/hc/en-us/articles/115002212983-Using-a-third-party-closed-captioning-service). This token lets you use a third-party service to stream text to their closed captioning software to the Zoom meeting. \n\n**Scopes:** `meeting:read`, `meeting:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n**Prerequisites:** \n* The **Closed captioning** setting enabled in the Zoom web portal. \n* The **Allow use of caption API Token to integrate with 3rd-party Closed Captioning services** setting enabled.",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The meeting token type: \n* `closed_caption_token` — The third-party closed caption API token. \n\nThis defaults to `closed_caption_token`.",
            "schema": {
              "type": "string",
              "default": "closed_caption_token",
              "enum": [
                "closed_caption_token"
              ],
              "example": "closed_caption_token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nMeeting token returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Information about the meeting token.",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The generated meeting token.",
                      "example": "https://example.com/closedcaption?id=200610693&ns=GZHkEA==&expire=86400&spparams=id%2Cns%2Cexpire&signature=nYtXJqRKCW"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\nBad Request \n\n**Error Code:** `300` <br>\nInvalid meeting ID. \n\n**Error Code:** `3000` <br>\n* Cannot access Webinar information. <br>\n* Meeting survey disabled. To enable this feature, enable the \"Meeting Survey\" setting in the Zoom web portal's \"Settings\" interface. \n\n**Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nNot Found \n\n**Error Code:** `300` <br>\nMeeting ID does not exist. \n\n**Error Code:** `3001` <br>\nMeeting does not exist: {meetingId}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/recordings": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Recording"
          },
          {
            "$ref": "#/components/parameters/RecordingDeleteAction"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nRecordings deleted. \n\n**Error Code:** `200` <br>\nYou do not have the right permission."
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nMeeting recording deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting recording not found\n**Error Code:** `1001` <br> User {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301`<br>There is no recording for this meeting.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Cloud Recording"
        ],
        "description": "Delete all recording files of a meeting.<br><br>\n\n**Scopes:** `recording:write:admin` `recording:write`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites**:\n* Cloud Recording should be enabled on the user's account.<br>\n",
        "operationId": "recordingDelete",
        "summary": "Delete meeting recordings"
      },
      "get": {
        "summary": "Get meeting recordings",
        "description": "Use this API to return all of a meeting's [recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_7420acb5-1897-4061-87b4-5b76e99c03b4). The recording files can be downloaded via the `download_url` property listed in the response. \n\n To access a password-protected cloud recording, add an `access_token` parameter to the download URL and provide OAuth access token or [JWT](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app) as the `access_token` value. \n\n **Scopes:** `recording:read:admin`, `recording:read` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "recordingGet",
        "tags": [
          "Cloud Recording"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Recording"
          },
          {
            "name": "include_fields",
            "in": "query",
            "description": "The `download_access_token` value for downloading the meeting's recordings.",
            "schema": {
              "type": "string",
              "example": "a2f19f96-9294-4f51-8134-6f0eea108eb2"
            }
          },
          {
            "name": "ttl",
            "in": "query",
            "description": "The `download_access_token` Time to Live (TTL) value. This parameter is only valid if the `include_fields` query parameter contains the `download_access_token` value.",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 604800,
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nRecording object returned. \n\n**Error Code:** `200` <br>\nYou do not have the right permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordingMeeting"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "download_access_token": {
                          "type": "string",
                          "description": "The JWT token to download the meeting's recording. This response only returns if the `download_access_token` is included in the `include_fields` query parameter.",
                          "example": "abJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJodHRwczovL2V2ZW50Lnpvb20udXMiLCJhY2NvdW50SWQiOiJNdDZzdjR1MFRBeVBrd2dzTDJseGlBIiwiYXVkIjoiaHR0cHM6Ly9vYXV0aC56b29tLnVzIiwibWlkIjoieFp3SEc0c3BRU2VuekdZWG16dnpiUT09IiwiZXhwIjoxNjI2MTM5NTA3LCJ1c2VySWQiOiJEWUhyZHBqclMzdWFPZjdkUGtrZzh3In0.a6KetiC6BlkDhf1dP4KBGUE1bb2brMeraoD45yhFx0eSSSTFdkHQnsKmlJQ-hdo9Zy-4vQw3rOxlyoHv583JyZ"
                        },
                        "password": {
                          "type": "string",
                          "description": "The cloud recording's password.",
                          "example": "981651"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/RecordingSeparateAudioList"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\nBad Request \n\n**Error Code:** `1010` <br>\nUser not found on this account: {accountId}"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting recording not found. \n\n**Error Code:** `1001` <br>\nUser \"{userId}\" does not exist or does not belong to this account. \n\n**Error Code:** `3301` <br>\nThere is no recording for this meeting."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/recordings/registrants": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          },
          {
            "$ref": "#/components/parameters/RegistrantStatus"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingRecordingRegistrantList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\n Registrants returned."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Meeting recording not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Cloud Recording"
        ],
        "description": "Use this API to list registrants of a past meeting's [on-demand cloud recordings](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-recordings). Users must [register](/api-reference/zoom-api/methods#operation/meetingRecordingRegistrantCreate) to view the recordings. \n\n **Scopes:** `recording:read:admin`, `recording:read` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "meetingRecordingRegistrants",
        "summary": "List recording registrants"
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in \"**long**\" format(represented as int64 data type in JSON), also known as the meeting number.",
                      "format": "int64",
                      "type": "integer",
                      "example": 6840331990
                    },
                    "registrant_id": {
                      "description": "Registrant ID",
                      "type": "string",
                      "example": "3Z7sEm0TQQieLav3c3OD_g"
                    },
                    "share_url": {
                      "description": "Share URL for the on-demand recording. This includes the “tk” token for the registrant. This is similar to the token that Zoom returns in the URL response to join a registered meeting, for example: `url?tk=xxxx`. Except while the meeting registration token can be used to join the meeting, this token can only be used to watch the recording.",
                      "type": "string",
                      "example": "https://example.com/recording/share/Qg75t7xZBtEbAkjdlgbfdngBBBB"
                    },
                    "topic": {
                      "description": "Meeting Topic",
                      "type": "string",
                      "example": "My Personal Meeting Room"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` <br>\nRegistration submitted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting recording not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Cloud Recording"
        ],
        "description": "Cloud Recordings of past Zoom Meetings can be made [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings). Users should be [registered](/api-reference/zoom-api/methods#operation/meetingRecordingRegistrantCreate) to view these recordings.\n\nUse this API to register a user to gain access to **On-demand Cloud Recordings** of a past meeting.<br>\n**Scopes:** `recording:write:admin`, `recording:write`.<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "meetingRecordingRegistrantCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingRegistrant"
              }
            }
          },
          "required": true
        },
        "summary": "Create a recording registrant"
      }
    },
    "/meetings/{meetingId}/recordings/registrants/questions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Recording"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordingRegistrantQuestions"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nRecording Registrant Question object returned."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting recording or registrant not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Cloud Recording"
        ],
        "description": "For [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) meeting recordings, you can include fields with questions that will be shown to registrants when they register to view the recording.\n\nUse this API to retrieve a list of questions that are displayed for users to complete when registering to view the recording of a specific meeting.<br>\n**Scopes:** `recording:read:admin`, `recording:read`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId": "recordingRegistrantsQuestionsGet",
        "summary": "Get registration questions"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Recording"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `200`<br>\nRecording Registrant Questions Updated"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting recording or Registrant not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Cloud Recording"
        ],
        "description": "For [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) meeting recordings, you can include fields with questions that will be shown to registrants when they register to view the recording.\n\nUse this API to update registration questions that are to be answered by users while registering to view a recording.<br>\n**Scopes:** `recording:write:admin`, `recording:write`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n",
        "operationId": "recordingRegistrantQuestionUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RecordingRegistrantQuestions"
                  }
                ]
              }
            }
          },
          "description": "Recording Registrant Questions",
          "required": true
        },
        "summary": "Update registration questions"
      }
    },
    "/meetings/{meetingId}/recordings/registrants/status": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nRegistrant status updated."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting recording or Registrant not found"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br> You have exceeded the daily rate limit of \"{0}\" for cloud recording **Update registrant's status** API requests for the registrant \"{1}\". You can resume these API requests at GMT 00:00:00."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Cloud Recording"
        ],
        "description": "A registrant can either be approved or denied from viewing the [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) recording. \nUse this API to update a registrant's status.\n\n**Scopes:** `recording:write:admin`, `recording:write`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n",
        "operationId": "meetingRecordingRegistrantStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordingRegistrantStatus"
              }
            }
          },
          "required": true
        },
        "summary": "Update registrant's status"
      }
    },
    "/meetings/{meetingId}/recordings/settings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Recording"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordingSettings"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\nMeeting recording settings returned"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting recording not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Cloud Recording"
        ],
        "description": "Retrieve settings applied to a meeting's [Cloud Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).<br><br>\n**Scopes**: `recording:read:admin` `recording:read`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` <br>",
        "operationId": "recordingSettingUpdate",
        "summary": "Get meeting recording settings"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Recording"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nMeeting recording setting's updated"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting recording not found. "
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Cloud Recording"
        ],
        "description": "Update settings applied to a meeting's [Cloud Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording)<br><br>\n**Scopes**: `recording:write:admin` `recording:write`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` <br>",
        "operationId": "recordingSettingsUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordingSettings"
              }
            }
          },
          "required": true
        },
        "summary": "Update meeting recording settings"
      }
    },
    "/meetings/{meetingUUID}/recordings/status": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingUUID"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nRecordings recovered. \n\n**Error Code:** `200`<br>\nYou do not have the right permissions."
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nDeleted recordings of the meeting recovered."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting recording not found.<br> **Error Code:** `1001`<br>  User does not exist: {userId}.<br>\n**Error Code:** `3301`<br>There is no recording for this meeting.\n\n\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Cloud Recording"
        ],
        "description": "Zoom allows users to recover recordings from trash for up to 30 days from the deletion date. Use this API to recover all deleted [Cloud Recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) of a specific meeting.<br><br>\n**Scopes**: `recording:write:admin` `recording:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites**:<br>\n* A Pro user with Cloud Recording enabled.",
        "operationId": "recordingStatusUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "enum": [
                      "recover"
                    ],
                    "type": "string",
                    "x-enum-descriptions": [
                      "recover meeting recording"
                    ],
                    "example": "recover"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Recover meeting recordings"
      }
    },
    "/meetings/{meetingId}/recordings/{recordingId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Recording"
          },
          {
            "$ref": "#/components/parameters/RecordingId"
          },
          {
            "$ref": "#/components/parameters/RecordingDeleteAction"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nRecording deleted. \n\n**Error Code:** `200`<br>\nYou do not have the right permissions."
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nMeeting recording file deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br> **Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.<br> \n**Error Code:** `3303` <br>\nYou can not delete an uncompleted meeting."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting recording file not found<br>\n**Error Code:** `1001` <br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301` <br> There is no recording for this meeting.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Cloud Recording"
        ],
        "description": "Delete a specific recording file from a meeting.<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note:</b> To use this API, you must enable the <b>The host can delete cloud recordings</b> setting. You can find this setting in the <b>Recording</b> tab of the <b>Settings</b> interface in the [Zoom web portal](https://zoom.us/).</p>\n\n**Scopes**: `recording:write:admin`, `recording:write`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "recordingDeleteOne",
        "summary": "Delete a meeting recording file"
      }
    },
    "/meetings/{meetingId}/recordings/{recordingId}/status": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Recording"
          },
          {
            "$ref": "#/components/parameters/RecordingId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br> Meeting recording recovered.\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>Meeting recording not found.<br>\n**Error Code:** `1001` <br> User {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301`There is no recording for this meeting."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Cloud Recording"
        ],
        "description": "Zoom allows users to recover recordings from trash for up to 30 days from the deletion date. Use this API to recover a single recording file from the meeting.<br>\n**Scopes:** `recording:write:admin` `recording:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n",
        "operationId": "recordingStatusUpdateOne",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "enum": [
                      "recover"
                    ],
                    "type": "string",
                    "x-enum-descriptions": [
                      "recover meeting recording"
                    ],
                    "example": "recover"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Recover a single recording"
      }
    },
    "/metrics/chat": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "from": {
                          "description": "The report's start date.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "next_page_token": {
                          "description": "The report's [`next_page_token` value](https://marketplace.zoom.us/docs/api-reference/pagination#next-page-token). The API returns this value when the set of available results exceeds the current page size. This token expires after 15 minutes.",
                          "type": "string",
                          "example": ""
                        },
                        "page_size": {
                          "default": 30,
                          "description": "The number of records to return within a single API call.",
                          "maximum": 300,
                          "type": "integer",
                          "example": ""
                        },
                        "to": {
                          "description": "The report's end date.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "users": {
                          "items": {
                            "properties": {
                              "audio_sent": {
                                "description": "The user's total number of audio files sent.",
                                "type": "integer",
                                "example": ""
                              },
                              "code_sippet_sent": {
                                "description": "The user's total number of code snippets sent.",
                                "type": "integer",
                                "example": ""
                              },
                              "email": {
                                "description": "The user's email address.",
                                "format": "email",
                                "type": "string",
                                "example": ""
                              },
                              "files_sent": {
                                "description": "The user's total number of files sent.",
                                "type": "integer",
                                "example": ""
                              },
                              "giphys_sent": {
                                "description": "The user's total number of [GIPHY](https://giphy.com/) images sent.",
                                "type": "integer",
                                "example": ""
                              },
                              "group_sent": {
                                "description": "The user's total number of messages sent in Zoom Chat channels.",
                                "type": "integer",
                                "example": ""
                              },
                              "images_sent": {
                                "description": "The user's total number of images sent.",
                                "type": "integer",
                                "example": ""
                              },
                              "p2p_sent": {
                                "description": "The user's total number of peer-to-peer (P2P) chat messages sent.",
                                "type": "integer",
                                "example": ""
                              },
                              "text_sent": {
                                "description": "The user's total number of text messages sent.",
                                "type": "integer",
                                "example": ""
                              },
                              "total_sent": {
                                "description": "The user's total number of messages sent.",
                                "type": "integer",
                                "example": ""
                              },
                              "user_id": {
                                "description": "The user's ID.",
                                "type": "string",
                                "example": ""
                              },
                              "user_name": {
                                "description": "The user's display name.",
                                "type": "string",
                                "example": ""
                              },
                              "video_sent": {
                                "description": "The user's total number of video files sent.",
                                "type": "integer",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nChat details returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Get [metrics](https://support.zoom.us/hc/en-us/articles/204654719-Dashboard#h_cc7e9749-1c70-4afb-a9a2-9680654821e4) for how users are utilizing Zoom Chat to send messages.\n\nUse the `from` and `to` query parameters to specify a monthly date range for the dashboard data. The monthly date range must be within the last six months.\n\n> **Note:** To query chat metrics from July 1, 2021 and later, use this endpoint instead of the [**Get IM metrics**](/api-reference/zoom-api/methods#operation/dashboardIM) API.\n\n**Scope:** `dashboard_im:read:admin`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`\n\n**Prerequisites:**\n\n* Business or a higher plan",
        "operationId": "dashboardChat",
        "summary": "Get chat metrics"
      }
    },
    "/metrics/client/feedback": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "client_feedbacks": {
                      "items": {
                        "properties": {
                          "feedback_id": {
                            "description": "Feedback Id",
                            "type": "string",
                            "example": ""
                          },
                          "feedback_name": {
                            "description": "Feedback Name",
                            "type": "string",
                            "example": ""
                          },
                          "participants_count": {
                            "description": "The number of participants that upvoted the feedback.",
                            "type": "integer",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "from": {
                      "description": "Start date for this report",
                      "format": "date",
                      "type": "string",
                      "example": ""
                    },
                    "to": {
                      "description": "End date for this report",
                      "format": "date",
                      "type": "string",
                      "example": ""
                    },
                    "total_records": {
                      "description": "The number of all records available across pages",
                      "type": "integer",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nClient Feedback details returned."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Use this API to return [Zoom meetings client feedback](https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf) survey results. You can specify a monthly date range for the Dashboard data using the `from` and `to` query parameters. The month should fall within the last six months. \n\n**Scopes:** `dashboard_home:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` \n\n**Prerequisites:** \n* A Business or higher account. \n* The \"[**Feedback to Zoom**](https://support.zoom.us/hc/en-us/articles/115005838023)\" option enabled.",
        "operationId": "dashboardClientFeedback",
        "summary": "List Zoom meetings client feedback"
      }
    },
    "/metrics/client/feedback/{feedbackId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/FeedbackId"
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date",
              "type": "string",
              "example": ""
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "format": "date",
              "type": "string",
              "example": ""
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "type": "integer",
              "example": ""
            }
          },
          {
            "in": "query",
            "name": "next_page_token",
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "from": {
                          "description": "Start date for this report",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "to": {
                          "description": "End date for this report",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/PaginationToken4IMChat"
                    },
                    {
                      "properties": {
                        "client_feedback_details": {
                          "items": {
                            "properties": {
                              "email": {
                                "description": "Email address of the participant. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.",
                                "type": "string",
                                "example": ""
                              },
                              "meeting_id": {
                                "description": "Meeting ID",
                                "type": "string",
                                "example": ""
                              },
                              "participant_name": {
                                "description": "Participant Name",
                                "type": "string",
                                "example": ""
                              },
                              "time": {
                                "description": "Time at which the feedback was submitted by the participant.",
                                "format": "date-time",
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nClient Feedback details returned"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Retrieve detailed information on a [Zoom meetings client feedback](https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf). <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.\n\n**Prerequisites:**\n* Business or higher account\n* [Feedback to Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) enabled.\n\n**Scope:** `dashboard_home:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n\n`",
        "operationId": "dashboardClientFeedbackDetail",
        "summary": "Get zoom meetings client feedback"
      }
    },
    "/metrics/client/satisfaction": {
      "get": {
        "parameters": [
          {
            "description": "The start date for the query in “yyyy-mm-dd” format. ",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date",
              "type": "string",
              "example": ""
            }
          },
          {
            "description": "The end date for the query in “yyyy-mm-dd” format. ",
            "in": "query",
            "name": "to",
            "schema": {
              "format": "date",
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "client_satisfaction": {
                      "items": {
                        "properties": {
                          "date": {
                            "description": "Date of the report.",
                            "format": "date",
                            "type": "string",
                            "example": ""
                          },
                          "good_count": {
                            "description": "The total number of \"thumbs up\" received for this meeting.",
                            "type": "integer",
                            "example": ""
                          },
                          "none_count": {
                            "description": "The total number of attendees who didn't submit any response (neither thumbs up nor thumbs down).",
                            "type": "integer",
                            "example": ""
                          },
                          "not_good_count": {
                            "description": "The total number of \"thumbs down\" received for this meeting.",
                            "type": "integer",
                            "example": ""
                          },
                          "satisfaction_percent": {
                            "description": "Satisfaction Percentage.\nThe satisfaction percentage is calculated as `(good_count + none_count)` / `total_count`.",
                            "format": "double",
                            "type": "number",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "from": {
                      "description": "Start date for this report in 'yyyy-mm-dd' format.",
                      "format": "date",
                      "type": "string",
                      "example": ""
                    },
                    "to": {
                      "description": "End date for this report in 'yyyy-mm-dd' format.",
                      "format": "date",
                      "type": "string",
                      "example": ""
                    },
                    "total_records": {
                      "description": "The total number of records available across all pages.",
                      "type": "integer",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nClient satisfaction data returned. "
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "If the [End of Meeting Feedback Survey](https://support.zoom.us/hc/en-us/articles/115005855266) option is enabled, attendees will be prompted with a survey window where they can tap either the **Thumbs Up** or **Thumbs Down** button that indicates their Zoom meeting experience. With this API, you can get information on the attendees' meeting satisfaction. Specify a monthly date range for the query using the from and to query parameters. The month should fall within the last six months.\n\nTo get information on the survey results with negative experiences (indicated by **Thumbs Down**), use the [**Get Zoom meetings client feedback**](/api-reference/zoom-api/methods#operation/dashboardClientFeedbackDetail) API.<br>\n**Scopes:** `dashboard:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "listMeetingSatisfaction",
        "summary": "List client meeting satisfaction"
      }
    },
    "/metrics/crc": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "from": {
                          "description": "Start date for this report.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "to": {
                          "description": "End date for this report.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "crc_ports_usage": {
                          "items": {
                            "properties": {
                              "crc_ports_hour_usage": {
                                "items": {
                                  "properties": {
                                    "hour": {
                                      "description": "Hour in the day, during which the CRC was used. For example if the CRC was used at 11 pm, the value of this field will be 23.",
                                      "type": "string",
                                      "example": ""
                                    },
                                    "max_usage": {
                                      "description": "The maximum number of concurrent ports that are being used in that hour.",
                                      "type": "integer",
                                      "example": ""
                                    },
                                    "total_usage": {
                                      "description": "The total number of H.323/SIP connections in that hour.",
                                      "type": "integer",
                                      "example": ""
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "date_time": {
                                "description": "The date and time of the port usage.",
                                "format": "date-time",
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nCRC usage returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "A Cloud Room Connector allows H.323/SIP endpoints to connect to a Zoom meeting. \n\nUse this API to get the hour by hour CRC Port usage for a specified period of time. <aside class='notice'>We will provide the report for a maximum of one month. For example, if \"from\" is set to \"2017-08-05\" and \"to\" is set to \"2017-10-10\", we will adjust \"from\" to \"2017-09-10\".</aside><br><br>\n**Prerequisites:**<br>\n* Business, Education or API Plan.\n* Room Connector must be enabled on the account.<br><br>\n**Scopes:** `dashboard_crc:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` ",
        "operationId": "dashboardCRC",
        "summary": "Get CRC port usage"
      }
    },
    "/metrics/im": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "from": {
                          "description": "Start date for this report.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "to": {
                          "description": "End date for this report.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/PaginationToken"
                    },
                    {
                      "properties": {
                        "users": {
                          "items": {
                            "properties": {
                              "calls_receive": {
                                "description": "Total number of instant meeting calls received by the user.",
                                "type": "integer",
                                "example": ""
                              },
                              "calls_send": {
                                "description": "Total number of instant meeting calls made by the user.",
                                "type": "integer",
                                "example": ""
                              },
                              "email": {
                                "description": "User email.",
                                "format": "email",
                                "type": "string",
                                "example": ""
                              },
                              "emoji_receive": {
                                "description": "Total number of emojis received by the user.",
                                "type": "integer",
                                "example": ""
                              },
                              "emoji_send": {
                                "description": "Total number of emojis sent by the user.",
                                "type": "integer",
                                "example": ""
                              },
                              "files_receive": {
                                "description": "Total number of files received by the user.",
                                "type": "integer",
                                "example": ""
                              },
                              "files_send": {
                                "description": "Total number of files sent by the user.",
                                "type": "integer",
                                "example": ""
                              },
                              "group_receive": {
                                "description": "Total number of messages received by the user in channels.",
                                "type": "integer",
                                "example": ""
                              },
                              "group_send": {
                                "description": "Total number of messages sent by the user in channels.",
                                "type": "integer",
                                "example": ""
                              },
                              "images_receive": {
                                "description": "Total number of images received by the user.",
                                "type": "integer",
                                "example": ""
                              },
                              "images_send": {
                                "description": "Total number of images sent by the user.",
                                "type": "integer",
                                "example": ""
                              },
                              "total_receive": {
                                "description": "Total number of messages received by the user.",
                                "type": "integer",
                                "example": ""
                              },
                              "total_send": {
                                "description": "Total number of messages sent by the user.",
                                "type": "integer",
                                "example": ""
                              },
                              "user_id": {
                                "description": "User ID.",
                                "type": "string",
                                "example": ""
                              },
                              "user_name": {
                                "description": "User display name.",
                                "type": "string",
                                "example": ""
                              },
                              "videos_receive": {
                                "description": "Total number of video files received by the user. ",
                                "type": "integer",
                                "example": ""
                              },
                              "videos_send": {
                                "description": "Total number of video files sent by the user.",
                                "type": "integer",
                                "example": ""
                              },
                              "voice_receive": {
                                "description": "Total number of voice files received by the user.",
                                "type": "integer",
                                "example": ""
                              },
                              "voice_send": {
                                "description": "Total number of voice files sent by the user.",
                                "type": "integer",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nIM details returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "deprecated": true,
        "description": "Get [metrics](https://support.zoom.us/hc/en-us/articles/204654719-Dashboard#h_cc7e9749-1c70-4afb-a9a2-9680654821e4) on how users are utilizing the Zoom Chat client.\n\nYou can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.<p style=\"background-color:#e1f5fe; color:#000000; padding:8px\"><b>Deprecated:</b> We will completely deprecate this endpoint in a future release. You can continue using this endpoint to query data for messages sent <b>before</b> July 1, 2021.</br></br>To get metrics on chat messages sent <b>on and after</b> July 1, 2021, use the [**Get chat metrics**](/api-reference/zoom-api/methods#operation/dashboardChat) API.</p>\n\n**Scopes:** `dashboard_im:read:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`\n\n**Prerequisites:**\n\n* Business or a higher plan.",
        "operationId": "dashboardIM",
        "summary": "Get IM metrics"
      }
    },
    "/metrics/issues/zoomrooms": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "from": {
                          "description": "Start date for this report",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "to": {
                          "description": "End date for this report",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "total_records": {
                          "description": "The number of all records available across pages",
                          "type": "integer",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "zoom_rooms": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Zoom Room ID",
                                "type": "string",
                                "example": ""
                              },
                              "issues_count": {
                                "description": "Issue Count of Zoom Room",
                                "type": "integer",
                                "example": ""
                              },
                              "room_name": {
                                "description": "Zoom Room Name",
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nZoom Room with issue details returned"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Get information on top 25 Zoom Rooms with issues in a month. The month specified with the \"from\" and \"to\" range should fall within the last six months.<br>\n**Scope:** `dashboard_home:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Business or a higher plan.\n* Zoom Room must be enabled in the account.",
        "operationId": "dashboardIssueZoomRoom",
        "summary": "Get top 25 Zoom Rooms with issues"
      }
    },
    "/metrics/issues/zoomrooms/{zoomroomId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ZoomRoomId"
          },
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "from": {
                          "description": "Start date for this report",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "to": {
                          "description": "End date for this report",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/PaginationToken"
                    },
                    {
                      "properties": {
                        "issue_details": {
                          "items": {
                            "properties": {
                              "issue": {
                                "description": "Zoom Room Issue Detail.<br> The value of the this field could be one of the following:<br>\n* `Room Controller disconnected`<br>\n* `Room Controller connected`\n* `Selected camera has disconnected`\n* `Selected camera is reconnected`\n* `Selected microphone has disconnected`\n* `Selected microphone is reconnected`\n* `Selected speaker has disconnected`\n* `Selected speaker is reconnected`\n* `Zoom room is offline`\n* `Zoom room is online`\n* `High CPU usage is detected`\n* `Low bandwidth network is detected`\n* `{name} battery is low`\n* `{name} battery is normal`\n* `{name} disconnected`\n* `{name} connected`\n* `{name} is not charging`\n\nPossible values for {name}: <br>\n* Zoom Rooms Computer \n* Controller\n* Scheduling Display",
                                "type": "string",
                                "example": ""
                              },
                              "time": {
                                "description": "Time at which the issue was encountered.",
                                "format": "date-time",
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nZoom Room with issue details returned"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Use this API to return information about the Zoom Rooms in an account with issues, such as disconnected hardware or bandwidth issues. You can specify a monthly date range for the Dashboard data using the `from` and `to` query parameters. The month should fall within the last six months. \n\n**Scopes:** `dashboard_home:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` \n\n**Prerequisites:** \n* A Business or a higher plan. \n* A Zoom Room must be enabled in the account.",
        "operationId": "dashboardIssueDetailZoomRoom",
        "summary": "Get issues of Zoom Rooms"
      }
    },
    "/metrics/meetings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingTypePast"
          },
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "The group ID. To get a group ID, use the [**List groups**](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API. \n\n **Note:** The API response will only contain meetings where the host is a member of the queried group ID.",
            "schema": {
              "type": "string",
              "example": "TaVA8QKik_1233"
            }
          },
          {
            "description": "Set the value of this field to \"tracking_fields\" if you would like to include tracking fields of each meeting in the response.",
            "in": "query",
            "name": "include_fields",
            "schema": {
              "enum": [
                "tracking_fields"
              ],
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "from": {
                          "description": "Start date for this report in 'yyyy-mm-dd' format.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "to": {
                          "description": "End date for this report in 'yyyy-mm-dd' format.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/PaginationToken"
                    },
                    {
                      "properties": {
                        "meetings": {
                          "description": "Array of meeting objects.",
                          "items": {
                            "$ref": "#/components/schemas/listmeetingmetrics"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeetings returned.<br>\nOnly available for paid accounts that have dashboard feature enabled."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nThe next page token is invalid or expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "List total live or past meetings that occurred during a specified period of time. This overview will show if features such as audio, video, screen sharing, and recording were being used in the meeting. You can also see the license types of each user on your account.<br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.<br>\n**Scopes:** `dashboard_meetings:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`<br><br>\n**Prerequisites:** <br>\n* Business or a higher plan.<br><br>",
        "operationId": "dashboardMeetings",
        "summary": "List meetings"
      }
    },
    "/metrics/meetings/{meetingId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Metrics"
          },
          {
            "$ref": "#/components/parameters/MeetingTypePast3"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingMetric"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeeting returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or the meeting has not ended yet.<br>\nThis meeting's details are not available.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Get details on live or past meetings. This overview will show if features such as audio, video, screen sharing, and recording were being used in the meeting. You can also see the license types of each user on your account.<br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.  <br>\n**Scopes:** `dashboard_meetings:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:** <br>\n* Business or a higher plan.",
        "operationId": "dashboardMeetingDetail",
        "summary": "Get meeting details"
      }
    },
    "/metrics/meetings/{meetingId}/participants": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Metrics"
          },
          {
            "$ref": "#/components/parameters/MeetingTypePast3"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](/api-reference/zoom-api/methods#operation/meetingRegistrants). This is not supported for `live` meeting types.",
            "in": "query",
            "name": "include_fields",
            "schema": {
              "enum": [
                "registrant_id"
              ],
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationToken"
                    },
                    {
                      "properties": {
                        "participants": {
                          "description": "Information about the meeting participants. If a participant left a meeting and rejoined the same meeting, their information will appear as many times as they joined the meeting.",
                          "items": {
                            "properties": {
                              "audio_quality": {
                                "description": "The participant's [audio quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts). The API only returns this value when the **Meeting quality scores and network alerts on Dashboard** setting is enabled in the Zoom Web Portal and the **Show meeting quality score and network alerts on Dashboard** option is selected in [**Account Settings**](https://zoom.us/account/setting): \n* `good` — The audio is almost flawless and the quality is excellent. \n* `fair` — The audio occasionally has distortion, noise, and other problems, but the content is basically continuous. Participants can communicate normally. \n* `poor` — The audio often has distortion, noise, and other problems, but the content is basically continuous. Participants can communicate normally. \n* `bad` — The sound quality is extremely poor and the audio content is almost inaudible.",
                                "enum": [
                                  "",
                                  "good",
                                  "fair",
                                  "poor",
                                  "bad"
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "camera": {
                                "description": "The type of camera that the participant used during the meeting. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                                "type": "string",
                                "example": ""
                              },
                              "connection_type": {
                                "description": "The participant's connection type.",
                                "type": "string",
                                "example": ""
                              },
                              "customer_key": {
                                "type": "string",
                                "maxLength": 15,
                                "description": "The participant's SDK identifier. This value can be alphanumeric, up to a maximum length of 15 characters.",
                                "example": "349589LkJyeW"
                              },
                              "data_center": {
                                "description": "The data center where participant's meeting data is stored.",
                                "type": "string",
                                "example": ""
                              },
                              "device": {
                                "description": "The type of device the participant used to join the meeting: \n* `Phone` — The participant joined via PSTN. \n* `H.323/SIP` — The participant joined via an H.323 or SIP device. \n* `Windows` — The participant joined via VoIP using a Windows device. \n* `Mac` — The participant joined via VoIP using a Mac device. \n* `iOS` — The participant joined via VoIP using an iOS device. \n* `Android` — The participant joined via VoIP using an Android device. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                                "enum": [
                                  "Phone",
                                  "H.323/SIP",
                                  "Windows",
                                  "Mac",
                                  "iOS",
                                  "Android"
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "domain": {
                                "description": "The participant's PC domain. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                                "type": "string",
                                "example": ""
                              },
                              "email": {
                                "description": "The participant's email address. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.",
                                "format": "email",
                                "type": "string",
                                "example": ""
                              },
                              "from_sip_uri": {
                                "description": "The meeting participant's SIP From header URI. The API only returns this response when the participant joins a meeting via SIP.",
                                "type": "string",
                                "example": ""
                              },
                              "full_data_center": {
                                "description": "The data center where participant's meeting data is stored. This field includes a semicolon-separated list of HTTP Tunnel (HT), Cloud Room Connector (CRC), and Real-Time Web Gateway (RWG) location information.",
                                "type": "string",
                                "example": ""
                              },
                              "harddisk_id": {
                                "description": "The participant's hard disk ID. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                                "type": "string",
                                "example": ""
                              },
                              "id": {
                                "description": "The participant's universally unique ID. This value is the same as the participant's user ID if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging into Zoom, this returns an empty value.",
                                "type": "string",
                                "example": ""
                              },
                              "in_room_participants": {
                                "description": "The number of participants that joined via Zoom Room.",
                                "type": "integer",
                                "example": ""
                              },
                              "ip_address": {
                                "description": "The participant's IP address.",
                                "type": "string",
                                "example": ""
                              },
                              "join_time": {
                                "description": "The time at which participant joined the meeting.",
                                "format": "date-time",
                                "type": "string",
                                "example": ""
                              },
                              "leave_reason": {
                                "description": "The reason why the participant left the meeting, where `$name` is the participant's username: \n* `$name left the meeting.` \n* `$name got disconnected from the meeting.` \n* `Host ended the meeting.` \n* `Host closed the meeting.` \n* `Host started a new meeting.` \n* `Network connection error.` \n* `Host did not join.` \n* `Exceeded free meeting minutes limit.` \n* `Removed by host.` \n* `Unknown reason.` \n* `Leave waiting room.` \n* `Removed by host from waiting room.`",
                                "enum": [
                                  "$name left the meeting.",
                                  "$name got disconnected from the meeting.",
                                  "Host ended the meeting.",
                                  "Host closed the meeting.",
                                  "Host started a new meeting.",
                                  "Network connection error.",
                                  "Host did not join.",
                                  "Exceeded free meeting minutes limit.",
                                  "Removed by host.",
                                  "Unknown reason.",
                                  "Leave waiting room.",
                                  "Removed by host from waiting room."
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "leave_time": {
                                "description": "The time at which a participant left the meeting. For live meetings, this field will only return if a participant has left the ongoing meeting.",
                                "format": "date-time",
                                "type": "string",
                                "example": ""
                              },
                              "location": {
                                "description": "The participant's location.",
                                "type": "string",
                                "example": ""
                              },
                              "mac_addr": {
                                "description": "The participant's MAC address. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                                "type": "string",
                                "example": ""
                              },
                              "microphone": {
                                "description": "The type of microphone that the participant used during the meeting. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                                "type": "string",
                                "example": ""
                              },
                              "network_type": {
                                "description": "The participant's network type: \n\n* `Wired` \n* `Wifi` \n* `PPP` — Point-to-Point. \n* `Cellular` — 3G, 4G, and 5G cellular. \n* `Others` — An unknown device.",
                                "enum": [
                                  "Wired",
                                  "Wifi",
                                  "PPP",
                                  "Cellular",
                                  "Others"
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "participant_user_id": {
                                "description": "The participant's universally unique ID (UUID): \n* If the participant joins the meeting by logging into Zoom, this value is the `id` value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value.",
                                "type": "string",
                                "example": ""
                              },
                              "pc_name": {
                                "description": "The participant's PC name.",
                                "type": "string",
                                "example": ""
                              },
                              "recording": {
                                "description": "Whether the recording feature was used during the meeting.",
                                "type": "boolean",
                                "example": ""
                              },
                              "registrant_id": {
                                "description": "The participant's unique registrant ID. This field only returns if you pass the `registrant_id` value for the `include_fields` query parameter. \n\nThis field does not return if the `type` query parameter is the `live` value.",
                                "type": "string",
                                "example": ""
                              },
                              "role": {
                                "description": "The participant's role: \n* `host` — Host. \n* `attendee` — Attendee.",
                                "enum": [
                                  "host",
                                  "attendee"
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "screen_share_quality": {
                                "description": "The participant's [screen share quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts). The API only returns this value when the **Meeting quality scores and network alerts on Dashboard** setting is enabled in the Zoom Web Portal and the **Show meeting quality score and network alerts on Dashboard** option is selected in [**Account Settings**](https://zoom.us/account/setting): \n* `good` — The video is almost flawless and the quality is excellent. \n* `fair` — The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \n* `poor` — The video definition is not high, but not many problems exist. The video quality is mediocre. \n* `bad` — The picture is very blurred and often gets stuck.",
                                "enum": [
                                  "",
                                  "good",
                                  "fair",
                                  "poor",
                                  "bad"
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "share_application": {
                                "description": "Whether the participant chose to share an iPhone/iPad app during the screenshare.",
                                "type": "boolean",
                                "example": ""
                              },
                              "share_desktop": {
                                "description": "Whether the participant chose to share their desktop during the screenshare.",
                                "type": "boolean",
                                "example": ""
                              },
                              "share_whiteboard": {
                                "description": "Whether the participant chose to share their whiteboard during the screenshare.",
                                "type": "boolean",
                                "example": ""
                              },
                              "sip_uri": {
                                "description": "The meeting participant's SIP (Session Initiation Protocol) Contact header URI. The API only returns this response when the participant joins a meeting via SIP.",
                                "type": "string",
                                "example": ""
                              },
                              "speaker": {
                                "description": "The type of speaker that the participant used during the meeting. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                                "type": "string",
                                "example": ""
                              },
                              "status": {
                                "description": "The participant's status: \n* `in_meeting` — In a meeting. \n* `in_waiting_room` — In a waiting room.",
                                "enum": [
                                  "in_meeting",
                                  "in_waiting_room"
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "user_id": {
                                "description": "The participant's ID. This value assigned to a participant upon joining a meeting and is only valid for the meeting's duration.",
                                "type": "string",
                                "example": ""
                              },
                              "user_name": {
                                "description": "The participant's display name.",
                                "type": "string",
                                "example": ""
                              },
                              "version": {
                                "description": "The participant's Zoom client version.",
                                "type": "string",
                                "example": ""
                              },
                              "video_quality": {
                                "description": "The participant's [video quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts). The API only returns this value when the **Meeting quality scores and network alerts on Dashboard** setting is enabled in the Zoom Web Portal and the **Show meeting quality score and network alerts on Dashboard** option is selected in [**Account Settings**](https://zoom.us/account/setting): \n* `good` — The video is almost flawless and the quality is excellent. \n* `fair` — The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \n* `poor` — The video definition is not high, but not many problems exist. The video quality is mediocre. \n* `bad` — The picture is very blurred and often gets stuck.",
                                "enum": [
                                  "",
                                  "good",
                                  "fair",
                                  "poor",
                                  "bad"
                                ],
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeeting participants returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info.<br>\n{meetingId} or the next page token is either invalid or expired."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or has not ended."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Use this API to return a list of participants from live or past meetings. \n\n If you do not provide the `type` query parameter, the default value will be set to the `live` value. This API will only return metrics for participants in a live meeting, if any exist. You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months. \n\n**Note:** \n\nThis API may return empty values for participants' `user_name`, `ip_address`, `location`, and `email` responses when the account calling this API: \n* Does **not** have a signed HIPAA business associate agreement (BAA). \n* Is a [**legacy** HIPAA BAA account](https://marketplace.zoom.us/docs/api-reference/other-references/legacy-business-associate-agreements). \n* Displays data for any users who are **not** part of the host's account (external users) unless they meet certain conditions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details. \n\n**Scopes:** `dashboard_meetings:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` \n\n**Prerequisites:** \n* A Business or higher plan.",
        "operationId": "dashboardMeetingParticipants",
        "summary": "List meeting participants"
      }
    },
    "/metrics/meetings/{meetingId}/participants/qos": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Metrics"
          },
          {
            "$ref": "#/components/parameters/MeetingTypePast2"
          },
          {
            "$ref": "#/components/parameters/PageSize4Qos"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QOSParticipantList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeeting participants returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.<br>\nThe next page token is either invalid or expired."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available.<br>\nThe Meeting ID is not valid or the meeting has not ended yet.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Use this API to return a list of meeting participants from live or past meetings and their quality of service received during the meeting. The data returned indicates the connection quality for sending/receiving video, audio, and shared content. \n\n**Note:** \n\nThis API may return empty values for participants' `user_name`, `ip_address`, `location`, and `email` responses when the account calling this API: \n* Does **not** have a signed HIPAA business associate agreement (BAA). \n* Is a [**legacy** HIPAA BAA account](https://marketplace.zoom.us/docs/api-reference/other-references/legacy-business-associate-agreements). \n* Displays data for any users who are **not** part of the host's account (external users) unless they meet certain conditions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details. \n\n**Scopes:** `dashboard_meetings:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` \n\n**Prerequisites:** \n* A Business or a higher plan.",
        "operationId": "dashboardMeetingParticipantsQOS",
        "summary": "List meeting participants QoS"
      }
    },
    "/metrics/meetings/{meetingId}/participants/satisfaction": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Metrics"
          },
          {
            "$ref": "#/components/parameters/MeetingTypePast"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string",
                      "example": ""
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call.",
                      "type": "integer",
                      "example": ""
                    },
                    "participants": {
                      "items": {
                        "properties": {
                          "date_time": {
                            "description": "Date and time at which the feedback was submitted.",
                            "format": "date-time",
                            "type": "string",
                            "example": ""
                          },
                          "email": {
                            "description": "Email address of the participant. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.",
                            "format": "email",
                            "type": "string",
                            "example": ""
                          },
                          "quality": {
                            "description": "Feedback submitted by the participant. \n\n* `GOOD`: Thumbs up.\n* `NOT GOOD`: Thumbs down.",
                            "enum": [
                              "GOOD",
                              "NOT GOOD"
                            ],
                            "type": "string",
                            "example": ""
                          },
                          "user_id": {
                            "description": "User ID of the participant.",
                            "type": "string",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for paid accounts that have dashboard feature enabled.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or not end."
          }
        },
        "tags": [
          "Dashboards"
        ],
        "description": "When a meeting ends, each attendee will be prompted to share their meeting experience by clicking either thumbs up or thumbs down. Use this API to retrieve the feedback submitted for a specific meeting. Note that this API only works for meetings scheduled after December 20, 2020.\n\n**Prerequisites:**\n* [Feedback to Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) setting must be enabled by the participant prior to the meeting.\n* The user making the API request must be enrolled in a Business or a higher plan.\n\n<br> **Scope:** `dashboard_meetings:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>",
        "operationId": "participantFeedback",
        "summary": "Get post meeting feedback"
      }
    },
    "/metrics/meetings/{meetingId}/participants/sharing": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Metrics"
          },
          {
            "$ref": "#/components/parameters/MeetingTypePast2"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationToken"
                    },
                    {
                      "properties": {
                        "participants": {
                          "description": "Array of participants.",
                          "items": {
                            "properties": {
                              "details": {
                                "description": "Array of sharing and recording details.",
                                "items": {
                                  "properties": {
                                    "content": {
                                      "description": "Type of content shared.",
                                      "type": "string",
                                      "example": ""
                                    },
                                    "end_time": {
                                      "description": "End time of sharing.",
                                      "type": "string",
                                      "example": ""
                                    },
                                    "start_time": {
                                      "description": "Start time of sharing.",
                                      "type": "string",
                                      "example": ""
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "id": {
                                "description": "Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.",
                                "type": "string",
                                "example": ""
                              },
                              "user_id": {
                                "description": "Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.",
                                "type": "string",
                                "example": ""
                              },
                              "user_name": {
                                "description": "Participant display name.",
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeeting participants returned."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available or ID is not valid."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Retrieve the sharing and recording details of participants from live or past meetings.<br>\n**Scopes:** `dashboard_meetings:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:** <br>\n* Business or a higher plan.",
        "operationId": "dashboardMeetingParticipantShare",
        "summary": "Get sharing/recording details"
      }
    },
    "/metrics/meetings/{meetingId}/participants/{participantId}/qos": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Metrics"
          },
          {
            "$ref": "#/components/parameters/ParticipantId"
          },
          {
            "$ref": "#/components/parameters/MeetingTypePast2"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QOSParticipant"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeeting participant QOS returned.<br>\nOnly available for paid account that have enabled the dashboard feature."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available.<br>\nThis meeting has not ended yet or the Meeting ID is invalid."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Use this API to return the quality of service (QoS) report for participants from live or past meetings. The data returned indicates the connection quality for sending/receiving video, audio, and shared content. The API returns this data for either the API request or when the API request was last received. \n\nWhen the sender sends data, a timestamp is attached to the sender's data packet. The receiver then returns this timestamp to the sender. This helps determine the upstream and downstream latency, which includes the application processing time. The latency data returned is the five second average and five second maximum. \n\n This API will **not** return data if there is no data being sent or received at the time of request. \n\n**Note:** \n\nThis API may return empty values for participants' `user_name`, `ip_address`, `location`, and `email` responses when the account calling this API: \n* Does **not** have a signed HIPAA business associate agreement (BAA). \n* Is a [**legacy** HIPAA BAA account](https://marketplace.zoom.us/docs/api-reference/other-references/legacy-business-associate-agreements). \n* Displays data for any users who are **not** part of the host's account (external users) unless they meet certain conditions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details. \n\n**Scopes:** `dashboard_meetings:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "dashboardMeetingParticipantQOS",
        "summary": "Get meeting participant QoS"
      }
    },
    "/metrics/quality": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "description": "The type of meeting quality score to query: \n* `meeting` — Query by meetings. \n* `participants` — Query by meeting participants.",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "meeting",
              "enum": [
                "meeting",
                "participants"
              ],
              "type": "string",
              "example": ""
            },
            "x-enum-descriptions": [
              "Scores by meeting.",
              "Scores by meeting participants."
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "from": {
                      "description": "The report's start date. This value must be within the past six months.",
                      "format": "date",
                      "type": "string",
                      "example": ""
                    },
                    "quality": {
                      "description": "Information about the meeting quality scores.",
                      "properties": {
                        "audio": {
                          "$ref": "#/components/schemas/MeetingQuality"
                        },
                        "screen_share": {
                          "$ref": "#/components/schemas/MeetingQuality"
                        },
                        "video": {
                          "$ref": "#/components/schemas/MeetingQuality"
                        }
                      },
                      "type": "object"
                    },
                    "to": {
                      "description": "The report's end date. This value must be within the past six months and cannot exceed a month from the `from` value.",
                      "format": "date",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeeting quality returned"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Use this API to return [meeting quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Meeting-quality-scores-and-network-alerts-on-Dashboard) information. Meeting quality scores are based on the mean opinion score (MOS). The MOS measures a meeting's quality on a scale of \"Good\" (5-4), \"Fair\" (4-3), \"Poor\" (3-2), or \"Bad\" (2-1). \n\n**Scopes:** `dashboard_home:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` \n\n**Prerequisites:** \n* A Business or a higher plan.",
        "operationId": "dashboardQuality",
        "summary": "Get meeting quality scores"
      }
    },
    "/metrics/webinars": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarTypePast"
          },
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "The group ID. To get a group ID, use the [**List groups**](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API. \n\n **Note:** The API response will only contain meetings where the host is a member of the queried group ID.",
            "schema": {
              "type": "string",
              "example": "TaVA8QKik_1233"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "from": {
                          "description": "Start date for this report in 'yyyy-mm-dd' format.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "to": {
                          "description": "End date for this report in 'yyyy-mm-dd' format.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/PaginationToken"
                    },
                    {
                      "properties": {
                        "webinars": {
                          "description": "Array of webinar objects.",
                          "items": {
                            "$ref": "#/components/schemas/WebinarMetric"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeetings returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature."
          },
          "300": {
            "description": "**Error Code:** `200`<br>\nThe next page token is invalid or has expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "List all the live or past webinars from a specified period of time. <br><br>\n**Scopes:** `dashboard_webinars:read:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`<br>\n**Prerequisites:**<br>\n* Business, Education or API Plan with Webinar add-on.\n\n\n",
        "operationId": "dashboardWebinars",
        "summary": "List webinars"
      }
    },
    "/metrics/webinars/{webinarId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId4Metrics"
          },
          {
            "$ref": "#/components/parameters/WebinarTypePast2"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebinarMetric"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nWebinar details returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature."
          },
          "300": {
            "description": "**Error Code:** `200`<br>\nCan not access webinar info, {webinarId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThe webinar has not ended yet or the Webinar ID is not valid.<br>\nThis webinar's detail is not available."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Retrieve details from live or past webinars.<br><br>\n**Scopes:** `dashboard_webinars:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Business, Education or API Plan with Webinar add-on.\n\n",
        "operationId": "dashboardWebinarDetail",
        "summary": "Get webinar details"
      }
    },
    "/metrics/webinars/{webinarId}/participants": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId4Metrics"
          },
          {
            "$ref": "#/components/parameters/WebinarTypePast2"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "Additional fields to include in the query: \n* `registrant_id` — Include the webinar registrant's ID. The registrant ID is the [webinar registrant's unique ID](/api-reference/zoom-api/methods#operation/webinarRegistrants).",
            "in": "query",
            "name": "include_fields",
            "schema": {
              "enum": [
                "registrant_id"
              ],
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationToken"
                    },
                    {
                      "properties": {
                        "participants": {
                          "description": "Information about the webinar participants.",
                          "items": {
                            "properties": {
                              "audio_quality": {
                                "description": "The participant's [audio quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts): \n* `good` — The audio is almost flawless and the quality is excellent. \n* `fair` — The audio occasionally has distortion, noise, and other problems, but the content is basically continuous. Participants can communicate normally. \n* `poor` — The audio often has distortion, noise, and other problems, but the content is basically continuous. Participants can communicate normally. \n* `bad` — The sound quality is extremely poor and the audio content is almost inaudible.",
                                "enum": [
                                  "",
                                  "good",
                                  "fair",
                                  "poor",
                                  "bad"
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "connection_type": {
                                "description": "The participant's connection type.",
                                "type": "string",
                                "example": ""
                              },
                              "customer_key": {
                                "type": "string",
                                "maxLength": 15,
                                "description": "The participant's SDK identifier. This value can be alphanumeric, up to a maximum length of 15 characters.",
                                "example": "349589LkJyeW"
                              },
                              "data_center": {
                                "description": "The data center where participant's webinar data is stored.",
                                "type": "string",
                                "example": ""
                              },
                              "device": {
                                "description": "The type of device the participant used to join the webinar: \n* `Phone` — The participant joined via PSTN. \n* `H.323/SIP` — The participant joined via an H.323 or SIP device. \n* `Windows` — The participant joined via VoIP using a Windows device. \n* `Mac` — The participant joined via VoIP using a Mac device. \n* `iOS` — The participant joined via VoIP using an iOS device. \n* `Android` — The participant joined via VoIP using an Android device. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                                "enum": [
                                  "Phone",
                                  "H.323/SIP",
                                  "Windows",
                                  "Mac",
                                  "iOS",
                                  "Android"
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "domain": {
                                "description": "The participant's PC domain. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                                "type": "string",
                                "example": ""
                              },
                              "email": {
                                "description": "The participant's email address. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.",
                                "type": "string",
                                "example": ""
                              },
                              "from_sip_uri": {
                                "description": "The meeting participant's SIP From header URI. The API only returns this response when the participant joins a meeting via SIP.",
                                "type": "string",
                                "example": ""
                              },
                              "full_data_center": {
                                "description": "The data center where participant's meeting data is stored. This field includes a semicolon-separated list of HTTP Tunnel (HT), Cloud Room Connector (CRC), and Real-Time Web Gateway (RWG) location information.",
                                "type": "string",
                                "example": ""
                              },
                              "harddisk_id": {
                                "description": "The participant's hard disk ID. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                                "type": "string",
                                "example": ""
                              },
                              "id": {
                                "description": "The participant's universally unique ID. This value is the same as the participant's user ID if the participant joins the webinar by logging into Zoom. If the participant joins the webinar without logging into Zoom, this returns an empty value.",
                                "type": "string",
                                "example": ""
                              },
                              "ip_address": {
                                "description": "The participant's IP address.",
                                "type": "string",
                                "example": ""
                              },
                              "join_time": {
                                "description": "The time at which participant joined the webinar.",
                                "format": "date-time",
                                "type": "string",
                                "example": ""
                              },
                              "leave_reason": {
                                "description": "The reason why the participant left the webinar, where `$name` is the participant's username: \n* `$name left the meeting.` \n* `$name got disconnected from the meeting.` \n* `Host ended the meeting.` \n* `Host closed the meeting.` \n* `Host started a new meeting.` \n* `Network connection error.` \n* `Host did not join.` \n* `Exceeded free meeting minutes limit.` \n* `Removed by host.` \n* `Unknown reason.` \n* `Leave waiting room.` \n* `Removed by host from waiting room.`",
                                "enum": [
                                  "$name left the webinar.",
                                  "$name got disconnected from the webinar.",
                                  "Host ended the webinar.",
                                  "Host closed the webinar.",
                                  "Host started a new webinar.",
                                  "Network connection error.",
                                  "Host did not join.",
                                  "Exceeded free webinar minutes limit.",
                                  "Removed by host.",
                                  "Unknown reason.",
                                  "Leave waiting room.",
                                  "Removed by host from waiting room."
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "leave_time": {
                                "description": "The time at which a participant left the webinar. For live webinars, this field will only return if a participant has left the ongoing webinar.",
                                "format": "date-time",
                                "type": "string",
                                "example": ""
                              },
                              "location": {
                                "description": "The participant's location.",
                                "type": "string",
                                "example": ""
                              },
                              "mac_addr": {
                                "description": "The participant's MAC address. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                                "type": "string",
                                "example": ""
                              },
                              "microphone": {
                                "description": "The type of microphone that the participant used during the webinar. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                                "type": "string",
                                "example": ""
                              },
                              "network_type": {
                                "description": "The participant's network type: \n\n* `Wired` \n* `Wifi` \n* `PPP` — Point-to-Point. \n* `Cellular` — 3G, 4G, and 5G cellular. \n* `Others` — An unknown device.",
                                "enum": [
                                  "Wired",
                                  "Wifi",
                                  "PPP",
                                  "Cellular",
                                  "Others"
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "pc_name": {
                                "description": "The participant's PC name.",
                                "type": "string",
                                "example": ""
                              },
                              "recording": {
                                "description": "Whether the recording feature was used during the webinar.",
                                "type": "boolean",
                                "example": ""
                              },
                              "registrant_id": {
                                "description": "The participant's unique registrant ID. This field only returns if you pass the `registrant_id` value for the `include_fields` query parameter. \n\nThis field does not return if the `type` query parameter is the `live` value.",
                                "type": "string",
                                "example": ""
                              },
                              "role": {
                                "description": "The participant's role: \n* `host` — Host. \n* `attendee` — Attendee. \n* `panelist` — Panelist.",
                                "enum": [
                                  "host",
                                  "attendee",
                                  "panelist"
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "screen_share_quality": {
                                "description": "The participant's [screen share quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts): \n* `good` — The video is almost flawless and the quality is excellent. \n* `fair` — The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \n* `poor` — The video definition is not high, but not many problems exist. The video quality is mediocre. \n* `bad` — The picture is very blurred and often gets stuck.",
                                "enum": [
                                  "",
                                  "good",
                                  "fair",
                                  "poor",
                                  "bad"
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "share_application": {
                                "description": "Whether the participant chose to share an iPhone/iPad app during the screenshare.",
                                "type": "boolean",
                                "example": ""
                              },
                              "share_desktop": {
                                "description": "Whether the participant chose to share their desktop during the screenshare.",
                                "type": "boolean",
                                "example": ""
                              },
                              "share_whiteboard": {
                                "description": "Whether the participant chose to share their whiteboard during the screenshare.",
                                "type": "boolean",
                                "example": ""
                              },
                              "sip_uri": {
                                "description": "The meeting participant's SIP (Session Initiation Protocol) Contact header URI. The API only returns this response when the participant joins a meeting via SIP.",
                                "type": "string",
                                "example": ""
                              },
                              "speaker": {
                                "description": "The type of speaker that the participant used during the webinar. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                                "type": "string",
                                "example": ""
                              },
                              "user_id": {
                                "description": "The participant's ID. This value assigned to a participant upon joining a webinar and is only valid for the webinar's duration.",
                                "type": "string",
                                "example": ""
                              },
                              "user_name": {
                                "description": "The participant's display name.",
                                "type": "string",
                                "example": ""
                              },
                              "version": {
                                "description": "The participant's Zoom client version.",
                                "type": "string",
                                "example": ""
                              },
                              "video_quality": {
                                "description": "The participant's [video quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts): \n* `good` — The video is almost flawless and the quality is excellent. \n* `fair` — The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \n* `poor` — The video definition is not high, but not many problems exist. The video quality is mediocre. \n* `bad` — The picture is very blurred and often gets stuck.",
                                "enum": [
                                  "",
                                  "good",
                                  "fair",
                                  "poor",
                                  "bad"
                                ],
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nWebinar participants returned."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Use this API to return information about participants from live or past webinars. \n\n**Note:** \n\nThis API may return empty values for participants' `user_name`, `ip_address`, `location`, and `email` responses when the account calling this API: \n* Does **not** have a signed HIPAA business associate agreement (BAA). \n* Is a [**legacy** HIPAA BAA account](https://marketplace.zoom.us/docs/api-reference/other-references/legacy-business-associate-agreements). \n* Displays data for any users who are **not** part of the host's account (external users) unless they meet certain conditions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details. \n\n**Scopes:** `dashboard_webinars:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` \n\n**Prerequisites:** \n* A Business, Education, or API Plan with Webinar add-on.",
        "operationId": "dashboardWebinarParticipants",
        "summary": "Get webinar participants"
      }
    },
    "/metrics/webinars/{webinarId}/participants/qos": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId4Metrics"
          },
          {
            "$ref": "#/components/parameters/WebinarTypePast2"
          },
          {
            "$ref": "#/components/parameters/PageSize4Qos"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QOSParticipantList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nWebinar participants returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail is not available or the Webinar ID is not valid.<br>\nThis webinar has not ended yet."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Use this API to return a list of webinar participants from live or past webinars and the quality of service they received during the webinar. The data returned indicates the connection quality for sending/receiving video, audio, and shared content. \n\n**Note:** \n\nThis API may return empty values for participants' `user_name`, `ip_address`, `location`, and `email` responses when the account calling this API: \n* Does **not** have a signed HIPAA business associate agreement (BAA). \n* Is a [**legacy** HIPAA BAA account](https://marketplace.zoom.us/docs/api-reference/other-references/legacy-business-associate-agreements). \n* Displays data for any users who are **not** part of the host's account (external users) unless they meet certain conditions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details. \n\n**Scopes:** `dashboard_webinars:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` \n\n**Prerequisites:** \n* A Business, Education, or API Plan with Webinar add-on.",
        "operationId": "dashboardWebinarParticipantsQOS",
        "summary": "List webinar participant QoS"
      }
    },
    "/metrics/webinars/{webinarId}/participants/satisfaction": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingTypePast"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/components/parameters/WebinarId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string",
                      "example": ""
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call.",
                      "type": "integer",
                      "example": ""
                    },
                    "participants": {
                      "items": {
                        "properties": {
                          "date_time": {
                            "description": "Date and time at which the feedback was submitted.",
                            "format": "date-time",
                            "type": "string",
                            "example": ""
                          },
                          "email": {
                            "description": "Email address of the participant. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.",
                            "format": "email",
                            "type": "string",
                            "example": ""
                          },
                          "quality": {
                            "description": "Feedback submitted by the participant. \n\n* `GOOD`: Thumbs up.\n* `NOT GOOD`: Thumbs down.",
                            "enum": [
                              "GOOD",
                              "NOT GOOD"
                            ],
                            "type": "string",
                            "example": ""
                          },
                          "user_id": {
                            "description": "User ID of the participant.",
                            "type": "string",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for paid accounts that have dashboard feature enabled.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end."
          }
        },
        "tags": [
          "Dashboards"
        ],
        "description": "When a Webinar ends, each attendee will be prompted to share their Webinar experience by clicking either thumbs up or thumbs down. Use this API to retrieve the feedback submitted for a specific webinar. Note that this API only works for meetings scheduled after December 20, 2020.\n\n**Prerequisites:**\n* [Feedback to Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) setting must be enabled by the participant prior to the meeting.\n* The user making the API request must be enrolled in a Business or a higher plan.\n\n\n<br> **Scope:** `dashboard_webinars:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>",
        "operationId": "participantWebinarFeedback",
        "summary": "Get post webinar feedback"
      }
    },
    "/metrics/webinars/{webinarId}/participants/sharing": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId4Metrics"
          },
          {
            "$ref": "#/components/parameters/WebinarTypePast2"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationToken"
                    },
                    {
                      "properties": {
                        "participants": {
                          "description": "Array of participants.",
                          "items": {
                            "properties": {
                              "details": {
                                "description": "Array of sharing and recording details.",
                                "items": {
                                  "properties": {
                                    "content": {
                                      "description": "Type of content shared.",
                                      "type": "string",
                                      "example": ""
                                    },
                                    "end_time": {
                                      "description": "End time of sharing.",
                                      "type": "string",
                                      "example": ""
                                    },
                                    "start_time": {
                                      "description": "Start time of sharing.",
                                      "type": "string",
                                      "example": ""
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "id": {
                                "description": "Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.",
                                "type": "string",
                                "example": ""
                              },
                              "user_id": {
                                "description": "Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.",
                                "type": "string",
                                "example": ""
                              },
                              "user_name": {
                                "description": "Participant display name.",
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nWebinar participants returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid.<br>\nThis webinar has not ended yet."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Retrieve the sharing and recording details of participants from live or past webinars. <br><br>\n**Scopes:** `dashboard_webinars:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` <br>\n**Prerequisites:**<br>\n* Business, Education or API Plan with Webinar add-on.\n\n",
        "operationId": "dashboardWebinarParticipantShare",
        "summary": "Get sharing/recording details"
      }
    },
    "/metrics/webinars/{webinarId}/participants/{participantId}/qos": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId4Metrics"
          },
          {
            "$ref": "#/components/parameters/ParticipantId"
          },
          {
            "$ref": "#/components/parameters/WebinarTypePast2"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QOSParticipant"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nWebinar participant QOS returned."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Use this API to return the quality of service (QoS) for participants during live or past webinars. This data returned indicates the connection quality for sending/receiving video, audio, and shared content. The API returns this data for either the API request or when the API request was last received. \n\nWhen the sender sends its data, a timestamp is attached to the sender's data packet. The receiver then returns this timestamp to the sender. This helps determine the upstream and downstream latency, which includes the application processing time. The latency data returned is the five second average and five second maximum. \n\nThis API will **not** return data if there is no data being sent or received at the time of request. \n\n**Note:** \n\nThis API may return empty values for participants' `user_name`, `ip_address`, `location`, and `email` responses when the account calling this API: \n* Does **not** have a signed HIPAA business associate agreement (BAA). \n* Is a [**legacy** HIPAA BAA account](https://marketplace.zoom.us/docs/api-reference/other-references/legacy-business-associate-agreements). \n* Displays data for any users who are **not** part of the host's account (external users) unless they meet certain conditions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details. \n\n**Scopes:** `dashboard_webinars:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` \n\n**Prerequisites:** \n* A Business, Education, or API Plan with Zoom Rooms set up.",
        "operationId": "dashboardWebinarParticipantQOS",
        "summary": "Get webinar participant QoS"
      }
    },
    "/metrics/zoomrooms": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "description": "The page number of the current page in the returned records.",
            "in": "query",
            "name": "page_number",
            "schema": {
              "default": 1,
              "type": "integer",
              "example": ""
            }
          },
          {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "in": "query",
            "name": "next_page_token",
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoomRoomList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nList of Zoom rooms returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "List information on all Zoom Rooms in an account.<br><br>\n**Scopes:** `dashboard_zr:read:admin`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`<br>\n **Prerequisites:**<br>\n* Business, Education or API Plan with Zoom Rooms set up.\n\n\n",
        "operationId": "dashboardZoomRooms",
        "summary": "List Zoom Rooms"
      }
    },
    "/metrics/zoomrooms/issues": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "from": {
                          "description": "Start date for this report",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "to": {
                          "description": "End date for this report",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "total_records": {
                          "description": "The number of all records available across pages",
                          "type": "integer",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "issues": {
                          "items": {
                            "properties": {
                              "issue_name": {
                                "description": "Issue Name.<br> The value of the this field could be one of the following:<br>\n* `Room Controller disconnected`<br>\n* `Room Controller connected`\n* `Selected camera has disconnected`\n* `Selected camera is reconnected`\n* `Selected microphone has disconnected`\n* `Selected microphone is reconnected`\n* `Selected speaker has disconnected`\n* `Selected speaker is reconnected`\n* `Zoom room is offline`\n* `Zoom room is online`\n* `High CPU usage is detected`\n* `Low bandwidth network is detected`\n* `{name} battery is low`\n* `{name} battery is normal`\n* `{name} disconnected`\n* `{name} connected`\n* `{name} is not charging`\n\nPossible values for {name}: <br>\n* Zoom Rooms Computer \n* Controller\n* Scheduling Display",
                                "type": "string",
                                "example": ""
                              },
                              "zoom_rooms_count": {
                                "description": "Zoom Room Count of Issue",
                                "type": "integer",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nZoom Room Issue details returned"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "Get top 25 issues of Zoom Rooms.<br>\n**Scopes:** `dashboard_zr:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n **Prerequisites:**<br>\n* Business, Education or API Plan with Zoom Rooms set up.\n\n",
        "operationId": "dashboardZoomRoomIssue",
        "summary": "Get top 25 issues of Zoom Rooms"
      }
    },
    "/metrics/zoomrooms/{zoomroomId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ZoomRoomId"
          },
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "description": "Zoom room.",
                      "properties": {
                        "account_type": {
                          "description": "Zoom room email type.",
                          "type": "string",
                          "example": ""
                        },
                        "calender_name": {
                          "description": "Zoom calendar name.",
                          "type": "string",
                          "example": ""
                        },
                        "camera": {
                          "description": "Zoom Room camera.\n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                          "type": "string",
                          "example": ""
                        },
                        "device_ip": {
                          "description": "Zoom room device IP.",
                          "type": "string",
                          "example": ""
                        },
                        "email": {
                          "description": "Zoom room email.",
                          "type": "string",
                          "example": ""
                        },
                        "health": {
                          "description": "Health of the Zoom Room.",
                          "type": "string",
                          "example": ""
                        },
                        "id": {
                          "description": "Zoom room ID.",
                          "type": "string",
                          "example": ""
                        },
                        "issues": {
                          "description": "Issues encountered by the Zoom Room.",
                          "items": {
                            "type": "string",
                            "example": ""
                          },
                          "type": "array"
                        },
                        "last_start_time": {
                          "description": "Zoom room last start time.",
                          "type": "string",
                          "example": ""
                        },
                        "location": {
                          "description": "Zoom room location.",
                          "type": "string",
                          "example": ""
                        },
                        "microphone": {
                          "description": "Zoom Room microphone.\n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                          "type": "string",
                          "example": ""
                        },
                        "room_name": {
                          "description": "Zoom room name.",
                          "type": "string",
                          "example": ""
                        },
                        "speaker": {
                          "description": "Zoom Room speaker.\n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
                          "type": "string",
                          "example": ""
                        },
                        "status": {
                          "description": "Zoom room status.",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "title": "Zoom Room",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "live_meeting": {
                          "$ref": "#/components/schemas/MeetingMetric"
                        },
                        "past_meetings": {
                          "allOf": [
                            {
                              "properties": {
                                "from": {
                                  "description": "Start date for this report in 'yyyy-mm-dd' format.",
                                  "format": "date",
                                  "type": "string",
                                  "example": ""
                                },
                                "to": {
                                  "description": "End date for this report in 'yyyy-mm-dd' format.",
                                  "format": "date",
                                  "type": "string",
                                  "example": ""
                                }
                              },
                              "type": "object"
                            },
                            {
                              "$ref": "#/components/schemas/PaginationToken"
                            },
                            {
                              "properties": {
                                "meetings": {
                                  "description": "Array of meeting objects.",
                                  "items": {
                                    "$ref": "#/components/schemas/MeetingMetric"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nZoom room returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nThe next page token is either invalid or has expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "description": "The Zoom Rooms dashboard metrics lets you know the type of configuration a Zoom room has and details on the meetings held in that room. \n\nUse this API to retrieve information on a specific room.<br><br>\n**Scopes:** `dashboard_zr:read:admin`<br> <br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`**Prerequisites:**<br>\n* Business, Education or API Plan with Zoom Rooms set up.\n",
        "operationId": "dashboardZoomRoom",
        "summary": "Get Zoom Rooms details"
      }
    },
    "/past_meetings/{meetingId}/files": {
      "get": {
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "in_meeting_files": {
                      "items": {
                        "properties": {
                          "download_url": {
                            "description": "URL to download the file.",
                            "type": "string",
                            "example": ""
                          },
                          "file_name": {
                            "description": "Name of the file.",
                            "type": "string",
                            "example": ""
                          },
                          "file_size": {
                            "description": "Size of the file in bytes.",
                            "type": "integer",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_records": {
                      "description": "The total number of files found.",
                      "type": "integer",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nFiles retrieved successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or not end."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Deprecated API Endpoints"
        ],
        "description": "**Note: This API has been deprecated and is no longer supported due to GCM encryption updates for security purposes.** To learn about saving the in-meeting chat files via Zoom Client, refer to the [Saving in-meeting chat](https://support.zoom.us/hc/en-us/articles/115004792763-Saving-in-meeting-chat) guide.\n\nList files sent via in-meeting chat during a meeting. The in-meeting files are deleted after 24 hours of the meeting completion time. \n<br><br>\n**Scope:** `meeting:read`, `meeting:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` ",
        "operationId": "listPastMeetingFiles",
        "summary": "List past meeting's files"
      }
    },
    "/past_meetings/{meetingUUID}/archive_files": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingUUID"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `200` <br>\n Meeting archived files returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` <br>\n Only available for Paid account. \n\n **Error Code:** `200` <br>\n Not available for this account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {0}"
          }
        },
        "tags": [
          "Archiving"
        ],
        "description": "Use this API to delete all of a meeting's archived files. \n\n **Scopes:** `recording:write:admin`, `recording:write` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).",
        "operationId": "deleteArchivedFiles",
        "summary": "Delete a meeting's archived files"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingUUID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudArchivedFiles"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\n Meeting archived files returned."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Meeting recording not found. \n\n **Error Code:** `3001` <br>\n Meeting {meetingUUId} does not exist."
          }
        },
        "tags": [
          "Archiving"
        ],
        "description": "Use this API to return a specific meeting instance's [archived files](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators). \n\n **Scopes:** `recording:read` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).",
        "operationId": "getArchivedFiles",
        "summary": "Get a meeting's archived files"
      }
    },
    "/past_webinars/{WebinarUUID}/absentees": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/OccurrenceId"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/components/parameters/WebinarUUID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebinarRegistrantList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nSuccess.<br>**Error Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}."
          },
          "300": {
            "description": "**Error Code:** `300`<br>Invalid webinar UUID."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br>\nThe request could not be completed because you have provided an invalid occurrence ID: {occurrenceId}<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3000`<br>\nThis Webinar has not registration required: {webinarUUID}"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>Meeting ID is invalid or not end.\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "List absentees of a webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "webinarAbsentees",
        "summary": "Get webinar absentees"
      }
    },
    "/past_webinars/{webinarId}/files": {
      "get": {
        "deprecated": true,
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "required": true,
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "in_meeting_files": {
                      "items": {
                        "properties": {
                          "download_url": {
                            "description": "URL to download the file.",
                            "type": "string",
                            "example": ""
                          },
                          "file_name": {
                            "description": "Name of the file.",
                            "type": "string",
                            "example": ""
                          },
                          "file_size": {
                            "description": "Size of the file in bytes.",
                            "type": "integer",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_records": {
                      "description": "The total number of files found.",
                      "type": "integer",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nFiles retrieved successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Deprecated API Endpoints"
        ],
        "description": "**Note: This API has been deprecated and is no longer supported due to GCM encryption updates for security purposes.**\n\nList files sent via in-meeting chat during a meeting. The in-meeting files are deleted after 24 hours of the meeting completion time. \n<br><br>\n**Scope:** `webinar:read`, `webinar:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n",
        "operationId": "listPastWebinarFiles",
        "summary": "List past webinar files"
      }
    },
    "/past_webinars/{webinarId}/instances": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebinarInstances"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nList of past webinar instances returned."
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>\nInvalid webinar ID."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "List past webinar instances.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId": "pastWebinars",
        "summary": "List past webinar instances"
      }
    },
    "/past_webinars/{webinarId}/participants": {
      "get": {
        "parameters": [
          {
            "description": "The webinar's ID. To get this value, use the [**List webinars**](/api-reference/zoom-api/methods#operation/webinars) API.",
            "in": "path",
            "name": "webinarId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "95204914252"
            }
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string",
                      "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3"
                    },
                    "page_count": {
                      "description": "The number of pages returned for this request.",
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "default": 30,
                      "description": "The total number of records returned from a single API call.",
                      "maximum": 300,
                      "type": "integer",
                      "example": 30
                    },
                    "participants": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Unique identifier of the participant.",
                            "type": "string",
                            "example": "30R7kT7bTIKSNUFEuH_Qlg"
                          },
                          "name": {
                            "description": "Name of the participant.",
                            "type": "string",
                            "example": "Jill Chill"
                          },
                          "user_email": {
                            "description": "Email address of the participant. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.",
                            "format": "email",
                            "type": "string",
                            "example": "jchill@example.com"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_records": {
                      "description": "The total number of records available across all pages.",
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nParticipants list returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad request**<br>\n\n**Error Code:** `200`<br>\nNo permission.<br>\nOnly available for paid account: {accountId}.<br><br>\n**Error Code:**  `300`<br>\nThe next page token is invalid or expired.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`\n**Error Code:**`3001`<br>\nWebinar does not exist."
          }
        },
        "tags": [
          "Webinars"
        ],
        "description": "Use this API to list all the participants who attended a webinar hosted in the past. \n\n**Scopes:** `webinar:read:admin`, `webinar:read` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \n\n**Prerequisites:** \n* A Pro or higher plan with a Webinar add-on.",
        "operationId": "listWebinarParticipants",
        "summary": "List webinar participants"
      }
    },
    "/past_webinars/{webinarId}/polls": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Webinar ID in \"**long**\" format(represented as int64 data type in JSON), also known as the webinar number.",
                      "format": "int64",
                      "type": "integer",
                      "example": 95204914252
                    },
                    "questions": {
                      "items": {
                        "properties": {
                          "email": {
                            "description": "Email address of the user who submitted answers to the poll. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.",
                            "type": "string",
                            "example": "jchill@example.com"
                          },
                          "name": {
                            "description": "Name of the user who submitted answers to the poll. If \"anonymous\" option is enabled for a poll, the participant's polling information will be kept anonymous and the value of `name` field will be \"Anonymous Attendee\".",
                            "type": "string",
                            "example": "Jill Chill"
                          },
                          "question_details": {
                            "items": {
                              "properties": {
                                "answer": {
                                  "description": "Answer submitted by the user.",
                                  "type": "string",
                                  "example": "Good"
                                },
                                "date_time": {
                                  "description": "Date and time at which the answer to the poll was submitted.",
                                  "format": "date-time",
                                  "type": "string",
                                  "example": "2022-03-26T05:37:59Z"
                                },
                                "polling_id": {
                                  "description": "Unique identifier of the poll.",
                                  "type": "string",
                                  "example": "QalIoKWLTJehBJ8e1xRrbQ"
                                },
                                "question": {
                                  "description": "Question asked during the poll.",
                                  "type": "string",
                                  "example": "How are you?"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "start_time": {
                      "description": "The start time of the Webinar.",
                      "format": "date-time",
                      "type": "string",
                      "example": "2022-03-26T05:37:59Z"
                    },
                    "uuid": {
                      "description": "Webinar UUID.",
                      "type": "string",
                      "example": "Bznyg8KZTdCVbQxvS/oZ7w=="
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nPolls returned successfully."
          },
          "401": {
            "description": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `1010`<br>  User does not belong to this account:{accountId}.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not found**<br>\nWebinar not found.<br>\n\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "The polling feature for webinar allows you to create single choice or multiple choice polling questions for your webinars. Use this API to retrieve the results for Webinar Polls of a specific Webinar.\n\n**Prerequisites:**<br>\n* [Webinar license](https://zoom.us/webinar)<br>\n**Scopes**: `webinar:read:admin`, `webinar:read`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n",
        "operationId": "listPastWebinarPollResults",
        "summary": "List past webinar poll results"
      }
    },
    "/past_webinars/{webinarId}/qa": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Webinar ID in \"**long**\" format(represented as int64 data type in JSON), also known as the webinar number.",
                      "format": "int64",
                      "type": "integer",
                      "example": 95204914252
                    },
                    "questions": {
                      "items": {
                        "properties": {
                          "email": {
                            "description": "Email address of the user. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.",
                            "type": "string",
                            "example": "jchill@example.com"
                          },
                          "name": {
                            "description": "Name of the user. If \"anonymous\" option is enabled for the Q&A, the participant's  information will be kept anonymous and the value of `name` field will be \"Anonymous Attendee\".",
                            "type": "string",
                            "example": "Jill Chill"
                          },
                          "question_details": {
                            "items": {
                              "properties": {
                                "answer": {
                                  "description": "Answer submitted for the question.",
                                  "type": "string",
                                  "example": "Good"
                                },
                                "question": {
                                  "description": "Question asked during the Q&A.",
                                  "type": "string",
                                  "example": "How are you?"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "start_time": {
                      "description": "The start time of the Webinar.",
                      "format": "date-time",
                      "type": "string",
                      "example": "2022-03-26T06:44:14Z"
                    },
                    "uuid": {
                      "description": "Webinar UUID.",
                      "type": "string",
                      "example": "Bznyg8KZTdCVbQxvS/oZ7w=="
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nQ&A returned successfully."
          },
          "401": {
            "description": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `1010`<br>  User does not belong to this account:{accountId}.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not found**<br>\nWebinar not found.<br>\n\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "The [Question & Answer (Q&A)](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) feature for Webinars allows attendees to ask questions during the Webinar and for the panelists, co-hosts and host to answer their questions.<br>\nUse this API to list Q&A of a specific Webinar.\n\n**Prerequisites:**<br>\n* [Webinar license](https://zoom.us/webinar)<br>\n**Scopes**: `webinar:read:admin`, `webinar:read`<br>\n <br>\n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listPastWebinarQA",
        "summary": "List Q&A of past webinar"
      }
    },
    "/report/activities": {
      "get": {
        "parameters": [
          {
            "description": "Start date for which you would like to view the activity logs report. Using the `from` and `to` parameters, specify a monthly date range for the report as the API only provides one month worth of data in one request. The specified date range should fall within the last six months.",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date",
              "type": "string",
              "example": ""
            }
          },
          {
            "description": "End date up to which you would like to view the activity logs report.",
            "in": "query",
            "name": "to",
            "schema": {
              "format": "date",
              "type": "string",
              "example": ""
            }
          },
          {
            "description": "The number of records to be returned within a single API call",
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "example": ""
            }
          },
          {
            "description": "Next page token is used to paginate through large result sets",
            "in": "query",
            "name": "next_page_token",
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Report object",
                  "properties": {
                    "activity_logs": {
                      "description": "Array of activity logs.",
                      "items": {
                        "properties": {
                          "client_type": {
                            "type": "string",
                            "description": "The client interface type using which the activity was performed.",
                            "example": "Browser"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "description": "Email address of the user used for the activity.",
                            "example": "jchill@example.com"
                          },
                          "ip_address": {
                            "type": "string",
                            "description": "The IP address of the user's device.",
                            "example": "192.0.2.1"
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time during which the activity occurred.",
                            "example": "2019-09-15T19:13:41Z"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of activity: \n* `Sign in` — Sign in activity by user. \n* `Sign out` — Sign out activity by user.",
                            "enum": [
                              "Sign in",
                              "Sign out"
                            ],
                            "example": "Sign out"
                          },
                          "version": {
                            "type": "string",
                            "description": "Zoom client version of the user.",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "from": {
                      "type": "string",
                      "description": "Start date from which you want the activity logs report to be generated.",
                      "example": "2019-09-01T00:00:00Z"
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "w7587w4eiyfsudgf"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "example": 30
                    },
                    "to": {
                      "type": "string",
                      "description": "End date until which you want the activity logs report to be generated",
                      "example": "2019-09-20T00:00:00Z"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nSuccess"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "Retrieve a list of sign in / sign out activity logs [report](https://support.zoom.us/hc/en-us/articles/201363213-Getting-Started-with-Reports) of users under a Zoom account.<br>\n**Prerequisites**<br>\n* Pro or higher plan.<br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "reportSignInSignOutActivities",
        "summary": "Get sign In / sign out activity report"
      }
    },
    "/report/billing": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "billing_reports": {
                      "items": {
                        "properties": {
                          "end_date": {
                            "description": "End date of the billing period.",
                            "format": "date",
                            "type": "string",
                            "example": ""
                          },
                          "id": {
                            "description": "Unique Identifier of the report. Use this ID to retrieve billing invoice via the \"Get Billing Invoices API\". \n\nYou can also use this ID to export a CSV file of the billing report from this URL: `https://zoom.us/account/report/billing/export?id={id}`.",
                            "type": "string",
                            "example": ""
                          },
                          "start_date": {
                            "description": "Start date of the billing period.",
                            "format": "date",
                            "type": "string",
                            "example": ""
                          },
                          "tax_amount": {
                            "description": "Total tax amount for this billing period.",
                            "type": "string",
                            "example": ""
                          },
                          "total_amount": {
                            "description": "Total billing amount for this billing period.",
                            "type": "string",
                            "example": ""
                          },
                          "type": {
                            "description": "Type of the billing report. The value should be either of the following:<br>\n`0` - Detailed Billing Reports\n`1` - Custom Billing Reports",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "currency": {
                      "description": "Currency of the billed amount.",
                      "type": "string",
                      "example": ""
                    },
                    "download_url": {
                      "type": "string",
                      "description": "The billing report's download URL. \n* **Endpoint:** `/api/download/billing/report/{id}` \n* **Authentication:** An OAuth or JWT access token.",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nBilling report returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br> No permission.\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "Get department billing reports of a Zoom account.\n\n**Prerequisites:**<br>\n* Pro or a higher account with Department Billing option enabled. Contact Zoom Support team for details.\n\n**Scopes:** `report:read:admin`, `report:master`\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "getBillingReport",
        "summary": "Get billing reports"
      }
    },
    "/report/billing/invoices": {
      "get": {
        "parameters": [
          {
            "description": "Unique Identifier of the Billing Report. Retrieve this ID from the response of **Get Billing Reports** API request. \n\n",
            "in": "query",
            "name": "billing_id",
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "currency": {
                      "description": "Currency of the billed amount in the invoice.",
                      "type": "string",
                      "example": ""
                    },
                    "invoices": {
                      "items": {
                        "properties": {
                          "end_date": {
                            "description": "End date of the invoice period.",
                            "format": "date",
                            "type": "string",
                            "example": ""
                          },
                          "invoice_charge_name": {
                            "description": "Name of the invoice.",
                            "type": "string",
                            "example": ""
                          },
                          "invoice_number": {
                            "description": "Invoice number ",
                            "type": "string",
                            "example": ""
                          },
                          "quantity": {
                            "description": "Number of licenses bought.",
                            "type": "integer",
                            "example": ""
                          },
                          "start_date": {
                            "description": "Start date of the invoice period.",
                            "format": "date",
                            "type": "string",
                            "example": ""
                          },
                          "tax_amount": {
                            "description": "Tax amount in the invoice.",
                            "type": "string",
                            "example": ""
                          },
                          "total_amount": {
                            "description": "Total billed amount in the invoice.",
                            "type": "string",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nBilling Invoice reports returned."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `5010`<br>\nReport does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "Get department billing invoices reports for a specific billing period. Provide the `billing_id` of the billing period for which you would like to retrieve the invoices for. This ID can be retrieved from **Get Billing Reports** API. \n\n**Prerequisites:**<br>\n* Pro or a higher account with Department Billing option enabled. Contact the Zoom Support team to enable this feature.\n\n**Scopes:** `report:read:admin`, `report:master`\n\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "getBillingInvoicesReports",
        "summary": "Get billing invoice reports"
      }
    },
    "/report/chat/sessions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "from": {
                      "description": "The query's start date.",
                      "format": "date",
                      "type": "string",
                      "example": ""
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.",
                      "type": "string",
                      "example": ""
                    },
                    "page_size": {
                      "default": 30,
                      "description": "The amount of records returns within a single API call.",
                      "maximum": 300,
                      "type": "integer",
                      "example": ""
                    },
                    "sessions": {
                      "description": "Information about the chat session.",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The chat session's ID.",
                            "type": "string",
                            "example": ""
                          },
                          "last_message_sent_time": {
                            "description": "The timestamp of the last message sent.",
                            "format": "date-time",
                            "type": "string",
                            "example": ""
                          },
                          "name": {
                            "description": "The chat session's name.",
                            "type": "string",
                            "example": ""
                          },
                          "type": {
                            "description": "The chat session's type:\n* `Group` — A group chat.\n* `1:1` — A one-on-one chat.",
                            "enum": [
                              "Group",
                              "1:1"
                            ],
                            "type": "string",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "to": {
                      "description": "The query's end date.",
                      "format": "date",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\nArchived chat sessions returned."
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nThe next page token is invalid or expired. <br>\nReport requested exceeds 6 month limit."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "Use this API to get Zoom Chat session reports for a specified period of time. The monthly date range **must** be within the last six months.\n\n**Scopes:** `report_chat:read:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n\n**Prerequisites:** \n* A Pro or higher plan \n* Report chat permissions.",
        "operationId": "reportChatSessions",
        "summary": "Get chat sessions reports"
      }
    },
    "/report/chat/sessions/{sessionId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId"
          },
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "Return all edited and deleted messages. The API only returns this value if the `include_fields` query parameter contains the `edited_messages` and/or the `deleted_messages` values.\n\nTo include **both** edited and deleted messages, comma-separate both values.",
            "in": "query",
            "name": "include_fields",
            "schema": {
              "enum": [
                "edited_messages",
                "deleted_messages",
                "edited_messages,deleted_messages"
              ],
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "deleted_messages": {
                      "description": "An array containing deleted chat messages information.",
                      "items": {
                        "properties": {
                          "date_time": {
                            "description": "The timestamp at which the chat message was sent.",
                            "format": "date-time",
                            "type": "string",
                            "example": ""
                          },
                          "files": {
                            "description": "Information about the chat files.",
                            "items": {
                              "properties": {
                                "download_url": {
                                  "description": "The URL at which to download the chat file.",
                                  "type": "string",
                                  "example": ""
                                },
                                "file_id": {
                                  "description": "The chat file's unique ID.",
                                  "type": "string",
                                  "example": ""
                                },
                                "file_name": {
                                  "description": "The chat file's name and its file extension.",
                                  "type": "string",
                                  "example": ""
                                },
                                "file_size": {
                                  "description": "The chat file's size, in bytes.",
                                  "type": "integer",
                                  "example": ""
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "id": {
                            "description": "The chat message's ID.",
                            "type": "string",
                            "example": ""
                          },
                          "message": {
                            "description": "The contents of the chat message.",
                            "type": "string",
                            "example": ""
                          },
                          "receiver": {
                            "description": "The chat message's recipient. This field only returns if the chat session `type` value is `1:1`.",
                            "type": "string",
                            "example": ""
                          },
                          "reply_main_message_id": {
                            "description": "The reply message's unique ID. The API only returns this value if the message is a reply message.",
                            "type": "string",
                            "example": ""
                          },
                          "reply_main_message_timestamp": {
                            "description": "A timestamp of when the reply message was sent. The API only returns this value if the message is a reply message.",
                            "format": "int64",
                            "type": "integer",
                            "example": ""
                          },
                          "sender": {
                            "description": "The chat message's sender.",
                            "type": "string",
                            "example": ""
                          },
                          "timestamp": {
                            "description": "The message's timestamp, in milliseconds.",
                            "format": "int64",
                            "type": "integer",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "edited_messages": {
                      "description": "An array containing edited chat message information.",
                      "items": {
                        "properties": {
                          "date_time": {
                            "description": "The timestamp at which the chat message was sent.",
                            "format": "date-time",
                            "type": "string",
                            "example": ""
                          },
                          "files": {
                            "description": "Information about the chat files.",
                            "items": {
                              "properties": {
                                "download_url": {
                                  "description": "The URL at which to download the chat file.",
                                  "type": "string",
                                  "example": ""
                                },
                                "file_id": {
                                  "description": "The chat file's unique ID.",
                                  "type": "string",
                                  "example": ""
                                },
                                "file_name": {
                                  "description": "The chat file's name and its file extension.",
                                  "type": "string",
                                  "example": ""
                                },
                                "file_size": {
                                  "description": "The chat file's size, in bytes.",
                                  "type": "integer",
                                  "example": ""
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "id": {
                            "description": "The chat message's ID.",
                            "type": "string",
                            "example": ""
                          },
                          "message": {
                            "description": "The contents of the chat message.",
                            "type": "string",
                            "example": ""
                          },
                          "receiver": {
                            "description": "The chat message's recipient. This field only returns if the chat session `type` value is `1:1`.",
                            "type": "string",
                            "example": ""
                          },
                          "reply_main_message_id": {
                            "description": "The reply message's unique ID. The API only returns this value if the message is a reply message.",
                            "type": "string",
                            "example": ""
                          },
                          "reply_main_message_timestamp": {
                            "description": "A timestamp of when the reply message was sent. The API only returns this value if the message is a reply message.",
                            "format": "int64",
                            "type": "integer",
                            "example": ""
                          },
                          "sender": {
                            "description": "The chat message's sender.",
                            "type": "string",
                            "example": ""
                          },
                          "timestamp": {
                            "description": "The message's timestamp, in milliseconds.",
                            "format": "int64",
                            "type": "integer",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "from": {
                      "description": "The query's start date.",
                      "format": "date",
                      "type": "string",
                      "example": ""
                    },
                    "messages": {
                      "description": "An array containing chat message information.\n\n**Note:** The `page_size` parameter only works for messages.",
                      "items": {
                        "properties": {
                          "date_time": {
                            "description": "The timestamp at which the chat message was sent.",
                            "format": "date-time",
                            "type": "string",
                            "example": ""
                          },
                          "files": {
                            "description": "Information about the chat files.",
                            "items": {
                              "properties": {
                                "download_url": {
                                  "description": "The URL at which to download the chat file.",
                                  "type": "string",
                                  "example": ""
                                },
                                "file_id": {
                                  "description": "The chat file's unique ID.",
                                  "type": "string",
                                  "example": ""
                                },
                                "file_name": {
                                  "description": "The chat file's name and its file extension.",
                                  "type": "string",
                                  "example": ""
                                },
                                "file_size": {
                                  "description": "The chat file's size, in bytes.",
                                  "type": "integer",
                                  "example": ""
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "id": {
                            "description": "The chat message's ID.",
                            "type": "string",
                            "example": ""
                          },
                          "message": {
                            "description": "The contents of the chat message.",
                            "type": "string",
                            "example": ""
                          },
                          "receiver": {
                            "description": "The chat message's recipient. This field only returns if the chat session `type` value is `1:1`.",
                            "type": "string",
                            "example": ""
                          },
                          "reply_main_message_id": {
                            "description": "The reply message's unique ID. The API only returns this value if the message is a reply message.",
                            "type": "string",
                            "example": ""
                          },
                          "reply_main_message_timestamp": {
                            "description": "A timestamp of when the reply message was sent. The API only returns this value if the message is a reply message.",
                            "format": "int64",
                            "type": "integer",
                            "example": ""
                          },
                          "sender": {
                            "description": "The chat message's sender.",
                            "type": "string",
                            "example": ""
                          },
                          "timestamp": {
                            "description": "The message's timestamp, in milliseconds.",
                            "format": "int64",
                            "type": "integer",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.",
                      "type": "string",
                      "example": ""
                    },
                    "page_size": {
                      "default": 30,
                      "description": "The amount of records returns within a single API call. ",
                      "maximum": 300,
                      "type": "integer",
                      "example": ""
                    },
                    "to": {
                      "description": "The query's end date.",
                      "format": "date",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\nArchived chat messages returned."
          },
          "300": {
            "description": "**Error Code:**`300` <br>\nThe next page token is either invalid or has expired.<br>\nReport requested exceeds 6 month limit."
          }
        },
        "tags": [
          "Reports"
        ],
        "description": "Use this API to get Zoom Chat message reports for a specified period of time. The monthly date range must be within the last six months.\n\n**Scopes:** `report_chat:read:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Pro or higher plan \n* Report chat permissions",
        "operationId": "reportChatMessages",
        "summary": "Get chat messages reports"
      }
    },
    "/report/cloud_recording": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "from": {
                          "description": "Start date for this report",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "to": {
                          "description": "End date for this report",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "cloud_recording_storage": {
                          "description": "Array of cloud usage objects",
                          "items": {
                            "properties": {
                              "date": {
                                "description": "Date of the usage",
                                "format": "date-time",
                                "type": "string",
                                "example": ""
                              },
                              "free_usage": {
                                "description": "Free storage",
                                "type": "string",
                                "example": ""
                              },
                              "plan_usage": {
                                "description": "Paid storage",
                                "type": "string",
                                "example": ""
                              },
                              "usage": {
                                "description": "Storage used on the date",
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nCloud Recording Report Returned"
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>\nOnly provide report in recent 6 months"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "Retrieve cloud recording usage report for a specified period. You can only get cloud recording reports that is one day earlier than the current date and for the most recent period of 6 months. The date gap between from and to dates should be smaller or equal to 30 days. <br>\n**Prerequisites**<br>\n* Pro or higher plan.<br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "reportCloudRecording",
        "summary": "Get cloud recording usage report"
      }
    },
    "/report/daily": {
      "get": {
        "parameters": [
          {
            "description": "Year for this report",
            "in": "query",
            "name": "year",
            "schema": {
              "type": "integer",
              "example": ""
            }
          },
          {
            "description": "Month for this report",
            "in": "query",
            "name": "month",
            "schema": {
              "type": "integer",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dates": {
                      "description": "Array of date objects.",
                      "items": {
                        "properties": {
                          "date": {
                            "description": "Date for this object.",
                            "format": "date",
                            "type": "string",
                            "example": ""
                          },
                          "meeting_minutes": {
                            "description": "Number of meeting minutes on this date.",
                            "type": "integer",
                            "example": ""
                          },
                          "meetings": {
                            "description": "Number of meetings on this date.",
                            "type": "integer",
                            "example": ""
                          },
                          "new_users": {
                            "description": "Number of new users on this date.",
                            "type": "integer",
                            "example": ""
                          },
                          "participants": {
                            "description": "Number of participants on this date.",
                            "type": "integer",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "month": {
                      "description": "Month for this report.",
                      "type": "integer",
                      "example": ""
                    },
                    "year": {
                      "description": "Year for this report.",
                      "type": "integer",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nDaily report retrieved.<br>\nThis is only available for paid accounts:{accountId}."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br> \nDaily report can only be provided for a month that falls within the recent 6 months."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "Retrieve daily report to access the account-wide usage of Zoom services for each day in a given month. It lists the number of new users, meetings, participants, and meeting minutes.<br>\n**Prerequisites**<br>\n* Pro or higher plan.<br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "reportDaily",
        "summary": "Get daily usage report"
      }
    },
    "/report/meetings/{meetingId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "custom_keys": {
                      "description": "Custom keys and values assigned to the meeting.",
                      "items": {
                        "properties": {
                          "key": {
                            "description": "Custom key associated with the user.",
                            "maxLength": 64,
                            "type": "string",
                            "example": ""
                          },
                          "value": {
                            "description": "Value of the custom key associated with the user.",
                            "maxLength": 256,
                            "type": "string",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "maxItems": 10,
                      "type": "array"
                    },
                    "dept": {
                      "description": "Department of the host.",
                      "type": "string",
                      "example": ""
                    },
                    "duration": {
                      "description": "Meeting duration.",
                      "type": "integer",
                      "example": ""
                    },
                    "end_time": {
                      "description": "Meeting end time.",
                      "format": "date-time",
                      "type": "string",
                      "example": ""
                    },
                    "id": {
                      "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in \"**long**\" format(represented as int64 data type in JSON), also known as the meeting number.",
                      "format": "int64",
                      "type": "integer",
                      "example": ""
                    },
                    "participants_count": {
                      "description": "Number of meeting participants.",
                      "type": "integer",
                      "example": ""
                    },
                    "start_time": {
                      "description": "Meeting start time.",
                      "format": "date-time",
                      "type": "string",
                      "example": ""
                    },
                    "topic": {
                      "description": "Meeting topic.",
                      "type": "string",
                      "example": ""
                    },
                    "total_minutes": {
                      "description": "Number of meeting minutes. This represents the total amount of meeting minutes attended by each participant including the host, for meetings hosted by the user. For instance if there were one host(named A) and one participant(named B) in a meeting, the value of total_minutes would be calculated as below:\n\n**total_minutes** = Total Meeting Attendance Minutes of A + Total Meeting Attendance Minutes of B",
                      "type": "integer",
                      "example": ""
                    },
                    "tracking_fields": {
                      "description": "Tracking fields.",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "Tracking fields type.",
                            "type": "string",
                            "example": ""
                          },
                          "value": {
                            "description": "Tracking fields value.",
                            "type": "string",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "type": {
                      "description": "Meeting type.",
                      "type": "integer",
                      "example": ""
                    },
                    "user_email": {
                      "description": "User email.",
                      "type": "string",
                      "example": ""
                    },
                    "user_name": {
                      "description": "User display name.",
                      "type": "string",
                      "example": ""
                    },
                    "uuid": {
                      "description": "Meeting UUID. Each meeting instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeeting details returned.<br>\nThis is only available for paid account."
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>\nCan not access meeting information:{meetingId}."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting {meetingId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "Get a detailed report for a past meeting. <br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan.<br>\n ",
        "operationId": "reportMeetingDetails",
        "summary": "Get meeting detail reports"
      }
    },
    "/report/meetings/{meetingId}/participants": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Metrics"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](/api-reference/zoom-api/methods#operation/meetingRegistrants).",
            "in": "query",
            "name": "include_fields",
            "schema": {
              "enum": [
                "registrant_id"
              ],
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationToken"
                    },
                    {
                      "properties": {
                        "participants": {
                          "description": "Array of meeting participant objects.",
                          "items": {
                            "properties": {
                              "customer_key": {
                                "type": "string",
                                "maxLength": 15,
                                "description": "The participant's SDK identifier. This value can be alphanumeric, up to a maximum length of 15 characters.",
                                "example": "349589LkJyeW"
                              },
                              "duration": {
                                "description": "Participant duration.",
                                "type": "integer",
                                "example": ""
                              },
                              "failover": {
                                "description": "Indicates if failover happened during the meeting.",
                                "type": "boolean",
                                "example": ""
                              },
                              "id": {
                                "description": "Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank..",
                                "type": "string",
                                "example": ""
                              },
                              "join_time": {
                                "description": "Participant join time.",
                                "format": "date-time",
                                "type": "string",
                                "example": ""
                              },
                              "leave_time": {
                                "description": "Participant leave time.",
                                "format": "date-time",
                                "type": "string",
                                "example": ""
                              },
                              "name": {
                                "description": "Participant display name.\n\nThis returns an empty string value if the account calling the API is a BAA account.",
                                "type": "string",
                                "example": ""
                              },
                              "registrant_id": {
                                "description": "Unique identifier of the registrant. This field is only returned if you entered \"registrant_id\" as the value of `include_fields` query parameter.",
                                "type": "string",
                                "example": ""
                              },
                              "user_email": {
                                "description": "Participant email.\n\nIf the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details. This returns an empty string value if the account calling the API is a BAA account.",
                                "type": "string",
                                "example": ""
                              },
                              "user_id": {
                                "description": "Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.",
                                "type": "string",
                                "example": ""
                              },
                              "status": {
                                "type": "string",
                                "description": "The participant's status: \n* `in_meeting` — In a meeting. \n* `in_waiting_room` — In a waiting room.",
                                "enum": [
                                  "in_meeting",
                                  "in_waiting_room"
                                ],
                                "example": "in_meeting"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nMeeting participants report returned.<br>\nThis is only available for paid account."
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Cannot access meeting information:{meetingId}.<br>\nThe next page token is either invalid or has expired."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {MeetingId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "Use this API to return a report of a past meeting with two or more participants, including the host. To return a report for past meeting with only **one** participant, use the [**List meeting participants**](/api-reference/zoom-api/ma#operation/dashboardMeetingParticipants) API. \n\n**Note:** \n\nThis API may return empty values for participants' `user_name`, `ip_address`, `location`, and `email` responses when the account calling this API: \n* Does **not** have a signed HIPAA business associate agreement (BAA). \n* Is a [**legacy** HIPAA BAA account](https://marketplace.zoom.us/docs/api-reference/other-references/legacy-business-associate-agreements). \n\n**Scopes:** `report:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` \n\n**Prerequisites:** \n* A Pro or a higher plan.",
        "operationId": "reportMeetingParticipants",
        "summary": "Get meeting participant reports"
      }
    },
    "/report/meetings/{meetingId}/polls": {
      "get": {
        "summary": "Get meeting poll reports",
        "description": "Use this API to get a report of [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) results for a past meeting. \n\n **Scopes:** `report:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` \n\n**Prerequisites:** \n* A Pro or a higher plan.",
        "operationId": "reportMeetingPolls",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MeetingId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` \n* Meeting polls report returned. \n* This is only available for paid account: {accountId}",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID).",
                      "example": 123456
                    },
                    "uuid": {
                      "type": "string",
                      "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID.",
                      "example": "4444AAAiAAAAAiAiAiiAii=="
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The meeting's start time.",
                      "example": "2022-02-01T12:34:12.660Z"
                    },
                    "questions": {
                      "type": "array",
                      "description": "Information about the meeting questions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "format": "email",
                            "description": "The participant's email address.",
                            "example": "jchill@example.com"
                          },
                          "name": {
                            "type": "string",
                            "description": "The participant's display name. If the **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `name` field will return the \"Anonymous Attendee\" value.",
                            "example": "Jill Chill"
                          },
                          "first_name": {
                            "type": "string",
                            "description": "The participant's first name. If the **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `first_name` field will return the \"Anonymous Attendee\" value.",
                            "example": "Jill"
                          },
                          "last_name": {
                            "type": "string",
                            "description": "The participant's last name. If the **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `last_name` field will return the \"Anonymous Attendee\" value.",
                            "example": "Chill"
                          },
                          "question_details": {
                            "type": "array",
                            "description": "Information about the user's questions and answers.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "answer": {
                                  "type": "string",
                                  "description": "The user's given answer.",
                                  "example": "I am wonderful."
                                },
                                "date_time": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The date and time at which the user answered the poll question.",
                                  "example": "2022-02-01T12:37:12.660Z"
                                },
                                "polling_id": {
                                  "type": "string",
                                  "description": "The poll's ID.",
                                  "example": "798fGJEWrA"
                                },
                                "question": {
                                  "type": "string",
                                  "description": "The poll question.",
                                  "example": "How are you?"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting ID not found. \n\n**Error Code:** `3001` <br>\nMeeting \"{meetingId}\" not found or has expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/operationlogs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "**Optional**<br>\nFilter your response by a category type to see reports for a specific category.\nThe value for this field can be one of the following:<br> `all`<br>`user`<br>`user_settings`<br>`account`<br>`billing`<br>`im`<br>`recording`<br>`phone_contacts`<br>`webinar`<br>`sub_account`<br>`role`<br>`zoom_rooms`",
            "in": "query",
            "name": "category_type",
            "schema": {
              "enum": [
                "all",
                "user",
                "user_settings",
                "account",
                "billing",
                "im",
                "recording",
                "phone_contacts",
                "webinar",
                "sub_account",
                "role",
                "zoom_rooms"
              ],
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationToken4IMChat"
                    },
                    {
                      "properties": {
                        "operation_logs": {
                          "description": "Array of operation log objects",
                          "items": {
                            "properties": {
                              "action": {
                                "description": "Action",
                                "type": "string",
                                "example": ""
                              },
                              "category_type": {
                                "description": "Category type",
                                "type": "string",
                                "example": ""
                              },
                              "operation_detail": {
                                "description": "Operation detail",
                                "type": "string",
                                "example": ""
                              },
                              "operator": {
                                "description": "The user who performed the operation.",
                                "type": "string",
                                "example": ""
                              },
                              "time": {
                                "description": "The time at which the operation was performed.",
                                "format": "date-time",
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nOperation Logs Report Returned"
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Only provide report in recent 6 months"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "The [Operations Logs](https://support.zoom.us/hc/en-us/articles/360032748331-Operation-Logs) report allows you to audit admin and user activity, such as adding a new user, changing account settings, and deleting recordings.<br>\nUse this API to retrieve operation logs report for a specified period of time.<br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or higher plan.",
        "operationId": "reportOperationLogs",
        "summary": "Get operation logs report"
      }
    },
    "/report/telephone": {
      "get": {
        "parameters": [
          {
            "description": "Audio types:<br>`1` - Toll-free Call-in & Call-out.<br>`2` - Toll <br>\n`3` - SIP Connected Audio",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "1",
              "enum": [
                1,
                3
              ],
              "type": "string",
              "example": ""
            },
            "x-enum-descriptions": [
              "Toll-free Call-in & Call-out"
            ]
          },
          {
            "description": "The type of date to query: \n* `start_time` — Query by call start time. \n* `end_time` — Query by call end time. \n* `meeting_start_time` — Query by meeting start time. \n* `meeting_end_time` — Query by meeting end time. \n\nThis value defaults to `start_time`.",
            "in": "query",
            "name": "query_date_type",
            "schema": {
              "default": "start_time",
              "enum": [
                "start_time",
                "end_time",
                "meeting_start_time",
                "meeting_end_time"
              ],
              "type": "string",
              "example": ""
            },
            "x-enum-descriptions": [
              "Query Date Type"
            ]
          },
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "deprecated": true,
            "description": "The page number of the current page in the returned records. This field is **not** available if the `query_date_type` parameter is the `meeting_start_time` or `meeting_end_time` value. \n\nThis field is deprecated. Use the `next_page_token` query parameter for pagination.",
            "in": "query",
            "name": "page_number",
            "schema": {
              "default": 1,
              "type": "integer",
              "example": ""
            }
          },
          {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "in": "query",
            "name": "next_page_token",
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "from": {
                          "type": "string",
                          "format": "date",
                          "description": "Start date for this report.",
                          "example": "2019-06-20"
                        },
                        "next_page_token": {
                          "type": "string",
                          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                          "example": "w7587w4eiyfsudgk"
                        },
                        "page_count": {
                          "type": "integer",
                          "description": "The number of pages returned for the request made. This field does **not** return if the `query_date_type` parameter is the `meeting_start_time` or `meeting_end_time` value.",
                          "example": 1
                        },
                        "page_size": {
                          "type": "integer",
                          "description": "The number of records returned with a single API call.",
                          "example": 30
                        },
                        "to": {
                          "type": "string",
                          "format": "date",
                          "description": "End date for this report.",
                          "example": "2019-07-20"
                        },
                        "total_records": {
                          "type": "integer",
                          "description": "The total number of all the records available across pages. This field does **not** return if the `query_date_type` parameter is the `meeting_start_time` or `meeting_end_time` value.",
                          "example": 1
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "telephony_usage": {
                          "description": "Array of telephony objects.",
                          "items": {
                            "properties": {
                              "call_in_number": {
                                "description": "Caller's call-in number.",
                                "type": "string",
                                "example": ""
                              },
                              "country_name": {
                                "description": "Country name.",
                                "type": "string",
                                "example": ""
                              },
                              "dept": {
                                "description": "User department.",
                                "type": "string",
                                "example": ""
                              },
                              "duration": {
                                "description": "Call leg duration",
                                "type": "integer",
                                "example": ""
                              },
                              "end_time": {
                                "description": "Call leg end time",
                                "format": "date-time",
                                "type": "string",
                                "example": ""
                              },
                              "host_email": {
                                "description": "User email.",
                                "type": "string",
                                "example": ""
                              },
                              "host_id": {
                                "description": "The user ID of the meeting host.",
                                "type": "string",
                                "example": ""
                              },
                              "host_name": {
                                "description": "User display name.",
                                "type": "string",
                                "example": ""
                              },
                              "meeting_id": {
                                "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in \"**long**\" format(represented as int64 data type in JSON), also known as the meeting number.",
                                "format": "int64",
                                "type": "integer",
                                "example": ""
                              },
                              "meeting_type": {
                                "description": "Meeting type.",
                                "type": "string",
                                "example": ""
                              },
                              "phone_number": {
                                "description": "Toll-free telephone number. ",
                                "type": "string",
                                "example": ""
                              },
                              "rate": {
                                "description": "Calling rate for the telephone call.",
                                "type": "number",
                                "example": ""
                              },
                              "signaled_number": {
                                "description": "The number that is signaled to Zoom. ",
                                "type": "string",
                                "example": ""
                              },
                              "start_time": {
                                "description": "Call leg start time",
                                "format": "date-time",
                                "type": "string",
                                "example": ""
                              },
                              "total": {
                                "description": "Total cost (USD) for Call Out. Calculated as plan rate by duration.",
                                "type": "number",
                                "example": ""
                              },
                              "type": {
                                "description": "Call type.",
                                "enum": [
                                  "toll-free",
                                  "call-out",
                                  "call-in",
                                  "US toll-number",
                                  "global toll-number",
                                  "premium",
                                  "premium call-in"
                                ],
                                "type": "string",
                                "example": ""
                              },
                              "uuid": {
                                "description": "Meeting UUID.",
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nTelephone report returned.<br>\nThis is only available for paid account:{accountId}.<br>\nThe requested report cannot be generated for this account because this account has not subscribed to toll-free audio conference plan.<br>\nToll Report feature must be enabled to perform this action. Contact the Zoom Support team for help."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "The [telephone report](https://support.zoom.us/hc/en-us/articles/206514816-Telephone-reports) allows you to view who dialed into meetings via phone (Audio Conferencing or SIP Connected Audio) and which number they dialed into and other details. Use this API to get telephone report for a specified period of time.\n\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>**Prerequisites:**<br>\n* Pro or higher plan.",
        "operationId": "reportTelephone",
        "summary": "Get telephone reports"
      }
    },
    "/report/upcoming_events": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "The type of event to query: \n* `meeting` — A meeting event. \n* `webinar` — A webinar event. \n* `all` — Both meeting and webinar events.\n\nThis value defaults to `all`.",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "all",
              "enum": [
                "meeting",
                "webinar",
                "all"
              ],
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "from": {
                          "description": "The report's start date. This value must be within the past six months.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "next_page_token": {
                          "description": "The next page token is used to paginate through large result sets. A next page token returns when the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                          "type": "string",
                          "example": ""
                        },
                        "page_size": {
                          "default": 30,
                          "description": "The number of records returned in a single API call.",
                          "maximum": 300,
                          "type": "integer",
                          "example": ""
                        },
                        "to": {
                          "description": "The report's end date. This value must be within the past six months and cannot exceed a month from the `from` value.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "upcoming_events": {
                          "description": "Information about the upcoming event.",
                          "items": {
                            "properties": {
                              "dept": {
                                "description": "The event host's department.",
                                "type": "string",
                                "example": ""
                              },
                              "host_id": {
                                "description": "The event host's ID.",
                                "type": "string",
                                "example": ""
                              },
                              "host_name": {
                                "description": "The event host's name.",
                                "type": "string",
                                "example": ""
                              },
                              "id": {
                                "description": "The event's unique ID.",
                                "type": "integer",
                                "example": ""
                              },
                              "start_time": {
                                "description": "The event's start time.",
                                "type": "string",
                                "example": ""
                              },
                              "topic": {
                                "description": "The event's topic.",
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nUpcoming events report returned.<br>\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br> Bad Request <br> **Error Code:** `200` <br> This is only available for the paid account: {accountId} <br> **Error Code:** `300`<br> The next page token is invalid or expired."
          }
        },
        "tags": [
          "Reports"
        ],
        "description": "Use this API to list upcoming meeting and/or webinar events within a specified period of time. The report's time range is limited to one month and must also be within the past six months.\n\n**Scopes:** `report:read:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n\n**Prerequisites:** \n* A Pro or higher plan",
        "operationId": "reportUpcomingEvents",
        "summary": "Get upcoming events report"
      }
    },
    "/report/users": {
      "get": {
        "parameters": [
          {
            "description": "Active or inactive hosts.<br>`active` - Active hosts. <br>`inactive` - Inactive hosts.",
            "in": "query",
            "name": "type",
            "schema": {
              "enum": [
                "active",
                "inactive"
              ],
              "type": "string",
              "example": ""
            },
            "x-enum-descriptions": [
              "Active hosts",
              "Inactive hosts"
            ]
          },
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "description": "The page number of the current page in the returned records.",
            "in": "query",
            "name": "page_number",
            "schema": {
              "default": 1,
              "type": "integer",
              "example": ""
            }
          },
          {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "in": "query",
            "name": "next_page_token",
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "from": {
                          "description": "Start date for this report.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "next_page_token": {
                          "type": "string",
                          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                          "example": "w7587w4eiyfsudgk"
                        },
                        "page_count": {
                          "description": "The number of pages returned for the request made.",
                          "type": "integer",
                          "example": ""
                        },
                        "page_number": {
                          "default": 1,
                          "description": "The page number of the current results.",
                          "type": "integer",
                          "example": ""
                        },
                        "page_size": {
                          "default": 30,
                          "description": "The number of records returned with a single API call.",
                          "maximum": 300,
                          "type": "integer",
                          "example": ""
                        },
                        "to": {
                          "description": "End date for this report.",
                          "format": "date",
                          "type": "string",
                          "example": ""
                        },
                        "total_records": {
                          "description": "The total number of all the records available across pages.",
                          "type": "integer",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "total_meeting_minutes": {
                          "description": "Number of meeting minutes for this range.",
                          "type": "integer",
                          "example": ""
                        },
                        "total_meetings": {
                          "description": "Number of meetings for this range.",
                          "type": "integer",
                          "example": ""
                        },
                        "total_participants": {
                          "description": "Number of participants for this range.",
                          "type": "integer",
                          "example": ""
                        },
                        "users": {
                          "description": "Array of user objects.",
                          "items": {
                            "properties": {
                              "custom_attributes": {
                                "description": "Custom attribute(s) that have been assigned to the user.",
                                "properties": {
                                  "key": {
                                    "description": "Identifier for the custom attribute.",
                                    "type": "string",
                                    "example": ""
                                  },
                                  "name": {
                                    "description": "Name of the custom attribute.",
                                    "type": "string",
                                    "example": ""
                                  },
                                  "value": {
                                    "description": "Value of the custom attribute.",
                                    "type": "string",
                                    "example": ""
                                  }
                                },
                                "type": "object"
                              },
                              "dept": {
                                "description": "User department.",
                                "type": "string",
                                "example": ""
                              },
                              "email": {
                                "description": "User email.",
                                "type": "string",
                                "example": ""
                              },
                              "id": {
                                "description": "User ID.",
                                "type": "string",
                                "example": ""
                              },
                              "meeting_minutes": {
                                "description": "Number of meeting minutes for user.",
                                "type": "integer",
                                "example": ""
                              },
                              "meetings": {
                                "description": "Number of meetings for user.",
                                "type": "integer",
                                "example": ""
                              },
                              "participants": {
                                "description": "Number of participants in meetings for user.",
                                "type": "integer",
                                "example": ""
                              },
                              "type": {
                                "description": "User type.",
                                "type": "integer",
                                "example": ""
                              },
                              "user_name": {
                                "description": "User display name.",
                                "type": "string",
                                "example": ""
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nActive or inactive hosts report returned.<br>\nThis is only available for paid account: {accountId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "A user is considered to be an active host during the month specified in the \"from\" and \"to\" range, if the user has hosted at least one meeting during this period. If the user didn't host any meetings during this period, the user is considered to be inactive.<br>The Active Hosts report displays a list of meetings, participants, and meeting minutes for a specific time range, up to one month. The month should fall within the last six months.<br>The Inactive Hosts report pulls a list of users who were not active during a specific period of time. \nUse this API to retrieve an active or inactive host report for a specified period of time. The time range for the report is limited to a month and the month should fall under the past six months. <br>You can specify the type of report and date range using the query parameters.<br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or higher plan.",
        "operationId": "reportUsers",
        "summary": "Get active/inactive host reports"
      }
    },
    "/report/users/{userId}/meetings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The meeting type to query for: \n* `past` — All past meetings. \n* `pastOne` — A single past user meeting. \n* `pastJoined` — All past meetings the account's users hosted or joined.",
            "schema": {
              "type": "string",
              "default": "past",
              "enum": [
                "past",
                "pastOne",
                "pastJoined"
              ],
              "example": "past"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "properties": {
                        "from": {
                          "type": "string",
                          "format": "date",
                          "description": "The report's start date.",
                          "example": "2020-07-14"
                        },
                        "meetings": {
                          "description": "Information about the meeting.",
                          "items": {
                            "properties": {
                              "custom_keys": {
                                "maxItems": 10,
                                "type": "array",
                                "description": "Information about the meeting's assigned custom keys and values. This returns a maximum of 10 items.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "maxLength": 64,
                                      "description": "The custom key name.",
                                      "example": ""
                                    },
                                    "value": {
                                      "type": "string",
                                      "maxLength": 256,
                                      "description": "The custom key's value.",
                                      "example": ""
                                    }
                                  }
                                }
                              },
                              "duration": {
                                "type": "integer",
                                "description": "The meeting's duration.",
                                "example": 6
                              },
                              "end_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The meeting's end date and time.",
                                "example": "2020-07-15T23:30:19Z"
                              },
                              "id": {
                                "type": "integer",
                                "description": "The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID).",
                                "example": 12345
                              },
                              "participants_count": {
                                "type": "integer",
                                "description": "The number of meeting participants.",
                                "example": 2
                              },
                              "session_key": {
                                "type": "string",
                                "description": "The Video SDK custom session ID.",
                                "example": "ABC36jaBI145"
                              },
                              "source": {
                                "type": "string",
                                "description": "Whether the meeting was created directly through Zoom or via an API request: \n* If the meeting was created via an OAuth app, this field returns the OAuth app's name. \n* If the meeting was created via JWT or the Zoom Web Portal, this returns the `Zoom` value.",
                                "example": "Zoom"
                              },
                              "start_time": {
                                "type": "string",
                                "description": "The meeting's start date and time.",
                                "format": "date-time",
                                "example": "2019-07-15T23:24:52Z"
                              },
                              "topic": {
                                "type": "string",
                                "description": "The meeting's topic.",
                                "example": "My Meeting"
                              },
                              "total_minutes": {
                                "type": "integer",
                                "description": "The sum of meeting minutes from all meeting participants in the meeting.",
                                "example": 11
                              },
                              "type": {
                                "type": "integer",
                                "description": "The meeting type: \n* `1` — An instant meeting. \n* `2` — A scheduled meeting. \n* `3` — A recurring meeting with no fixed time. \n* `4` — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843).\n* `8` — A recurring meeting with a fixed time.",
                                "enum": [
                                  1,
                                  2,
                                  4,
                                  8
                                ],
                                "example": 2
                              },
                              "user_email": {
                                "type": "string",
                                "format": "email",
                                "description": "The user's email address.",
                                "example": "jchill@example.com"
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The user's display name.",
                                "example": "Jill Chill"
                              },
                              "uuid": {
                                "type": "string",
                                "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID.",
                                "example": "4444AAAiAAAAAiAiAiiAii=="
                              },
                              "schedule_time": {
                                "type": "string",
                                "description": "The meeting's scheduled date and time.",
                                "example": "12/22/2021 16:20"
                              },
                              "join_waiting_room_time": {
                                "type": "string",
                                "description": "The date and time at which the attendee joined the waiting room.",
                                "example": "02/11/2022 16:15"
                              },
                              "join_time": {
                                "type": "string",
                                "description": "The date and time at which the attendee joined the meeting.",
                                "example": "12/22/2021 16:20"
                              },
                              "leave_time": {
                                "type": "string",
                                "description": "The date and time at which the attendee left the meeting.",
                                "example": "12/22/2021 17:13"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "next_page_token": {
                          "type": "string",
                          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                          "example": "w7587w4eiyfsudgk"
                        },
                        "to": {
                          "type": "string",
                          "format": "date",
                          "description": "The report's end date.",
                          "example": "2020-08-14"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nActive or inactive hosts report returned.<br>\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nThis is only available for paid account:{accountId}.<br>\n\n**Error Code:** `300`<br>\nThe next page token is invalid or expired.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n<br>**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account."
          }
        },
        "tags": [
          "Reports"
        ],
        "description": "Retrieve [report](https://support.zoom.us/hc/en-us/articles/216378603-Meeting-Reporting) on past meetings and webinars for a specified time period. The time range for the report is limited to a month and the month must fall within the past six months.\n\nMeetings and webinars are returned only if they have two or more unique participants.  <br><br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or higher plan.",
        "operationId": "reportMeetings",
        "summary": "Get meeting reports"
      }
    },
    "/report/webinars/{webinarId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "custom_keys": {
                      "description": "Custom keys and values assigned to the meeting.",
                      "items": {
                        "properties": {
                          "key": {
                            "description": "Custom key associated with the user.",
                            "maxLength": 64,
                            "type": "string",
                            "example": ""
                          },
                          "value": {
                            "description": "Value of the custom key associated with the user.",
                            "maxLength": 256,
                            "type": "string",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "maxItems": 10,
                      "type": "array"
                    },
                    "dept": {
                      "description": "Department of the host.",
                      "type": "string",
                      "example": ""
                    },
                    "duration": {
                      "description": "Meeting duration.",
                      "type": "integer",
                      "example": ""
                    },
                    "end_time": {
                      "description": "Meeting end time.",
                      "format": "date-time",
                      "type": "string",
                      "example": ""
                    },
                    "id": {
                      "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in \"**long**\" format(represented as int64 data type in JSON), also known as the meeting number.",
                      "format": "int64",
                      "type": "integer",
                      "example": ""
                    },
                    "participants_count": {
                      "description": "Number of meeting participants.",
                      "type": "integer",
                      "example": ""
                    },
                    "start_time": {
                      "description": "Meeting start time.",
                      "format": "date-time",
                      "type": "string",
                      "example": ""
                    },
                    "topic": {
                      "description": "Meeting topic.",
                      "type": "string",
                      "example": ""
                    },
                    "total_minutes": {
                      "description": "Number of Webinar minutes. This represents the total amount of Webinar minutes attended by each participant including the host, for a Webinar hosted by the user. For instance if there were one host(named A) and one participant(named B) in a Webinar, the value of total_minutes would be calculated as below:\n\n**total_minutes** = Total Webinar Attendance Minutes of A + Total Webinar Attendance Minutes of B",
                      "type": "integer",
                      "example": ""
                    },
                    "tracking_fields": {
                      "description": "Tracking fields.",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "Tracking fields type.",
                            "type": "string",
                            "example": ""
                          },
                          "value": {
                            "description": "Tracking fields value.",
                            "type": "string",
                            "example": ""
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "type": {
                      "description": "Meeting type.",
                      "type": "integer",
                      "example": ""
                    },
                    "user_email": {
                      "description": "User email.",
                      "type": "string",
                      "example": ""
                    },
                    "user_name": {
                      "description": "User display name.",
                      "type": "string",
                      "example": ""
                    },
                    "uuid": {
                      "description": "Webinar UUID. Each webinar instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated when the next instance of the webinar starts). Double encode the UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nWebinar details returned.<br>\nThis is only available for paid account:{accountId}."
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>\nCan not access webinar information:{webinarId}."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {meetingId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "Retrieve a [report](https://support.zoom.us/hc/en-us/articles/201393719-Webinar-Reporting) containing past webinar details.  <br><br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or higher plan with Webinar add-on.",
        "operationId": "reportWebinarDetails",
        "summary": "Get webinar detail reports"
      }
    },
    "/report/webinars/{webinarId}/participants": {
      "get": {
        "summary": "Get webinar participant reports",
        "description": "Use this API to get a detailed report on each webinar attendee. You can get webinar participant reports for the last 6 months. \n\n **Scopes:** `report:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` \n\n**Prerequisites:** \n* A Pro or a higher plan with Webinar add-on enabled.",
        "operationId": "reportWebinarParticipants",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId4Metrics"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "name": "include_fields",
            "in": "query",
            "description": "The additional query parameters to include: \n* `registrant_id` — Include the registrant's ID in the API response. The registrant ID is the webinar participant's unique ID.",
            "schema": {
              "enum": [
                "registrant_id"
              ],
              "type": "string",
              "example": "registrant_id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationToken"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "participants": {
                          "type": "array",
                          "description": "Information about the webinar participant.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "customer_key": {
                                "type": "string",
                                "maxLength": 15,
                                "description": "The participant's SDK identifier. This value can be alphanumeric, up to a maximum length of 15 characters.",
                                "example": "349589LkJyeW"
                              },
                              "duration": {
                                "type": "integer",
                                "description": "The participant's attendance duration.",
                                "example": 20
                              },
                              "failover": {
                                "type": "boolean",
                                "description": "Whether failover occurred during the webinar.",
                                "example": false
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID: \n* This values is the same as the participant's user ID if the participant joins the meeting by logging into Zoom. \n* If the participant joins the meeting without logging in, the API returns an empty string value.",
                                "example": "ABCDEF123456"
                              },
                              "join_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The participant's join time.",
                                "example": "2019-02-01T12:34:12.660Z"
                              },
                              "leave_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The participant's join time.",
                                "example": "2019-02-01T12:54:12.660Z"
                              },
                              "name": {
                                "type": "string",
                                "description": "The participant's display name. This returns an empty string value if the account calling the API is a BAA account.",
                                "example": "jchill"
                              },
                              "registrant_id": {
                                "type": "string",
                                "description": "The registrant's ID. This field only returns if you provide the `registrant_id` value for the `include_fields` query parameter.",
                                "example": "123456FEDCBA"
                              },
                              "status": {
                                "type": "string",
                                "description": "The participant's status: \n* `in_meeting` — In a meeting. \n* `in_waiting_room` — In a waiting room.",
                                "enum": [
                                  "in_meeting",
                                  "in_waiting_room"
                                ],
                                "example": "in_meeting"
                              },
                              "user_email": {
                                "type": "string",
                                "format": "email",
                                "description": "The participant's email address. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details. This returns an empty string value if the account calling the API is a BAA account.",
                                "example": "jchill@example.com"
                              },
                              "user_id": {
                                "type": "string",
                                "description": "The participant's ID. This ID is assigned to the participant upon joining the webinar and is only valid for that webinar.",
                                "example": "ABCDEF123456"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200` \n* Meeting participants report returned. \n* This is only available for paid account: {accountId}"
          },
          "300": {
            "description": "**HTTP Status Code:** `300` \n* The next page token is invalid or has expired. \n* Cannot access the webinar information: {webinarId}"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\nBad Request \n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nWebinar ID not found. \n\n**Error Code:** `3001` <br>\nWebinar \"{webinarId}\" not found or has expired"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/webinars/{webinarId}/polls": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                      "description": "The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID).",
                      "example": 12345
                    },
                    "questions": {
                      "description": "Array of webinar question objects.",
                      "items": {
                        "properties": {
                          "email": {
                            "type": "string",
                            "format": "email",
                            "description": "Participant email. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.",
                            "example": "jchill@example.com"
                          },
                          "name": {
                            "type": "string",
                            "description": "Participant display name.<br><br> If the poll was created as an anonymous poll, participant's information will remain anonymous and the value of the `name` field will be \"Anonymous Attendee\".",
                            "example": "Jill Chill"
                          },
                          "question_details": {
                            "description": "Array of questions from user.",
                            "items": {
                              "properties": {
                                "answer": {
                                  "type": "string",
                                  "description": "Given answer.",
                                  "example": "Look forward to learning how you come up with new recipes and what other services you offer."
                                },
                                "date_time": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Date and time at which the answer to the poll was submitted.",
                                  "example": ""
                                },
                                "polling_id": {
                                  "type": "string",
                                  "description": "Unique identifier of the poll.",
                                  "example": "Hin8-Ybn124sa"
                                },
                                "question": {
                                  "type": "string",
                                  "description": "Asked question.",
                                  "example": "What do you hope to learn from this Webinar?"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Webinar start time.",
                      "example": "2019-07-15T23:24:52Z"
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Webinar UUID. Each webinar instance will generate its own UUID(i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.",
                      "example": "4444AAAiAAAAAiAiAiiAii=="
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nWebinar polls report returned.<br>\nMissing webinar subscription plan.<br>\nThis is only available for paid account:{accountId}."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "Retrieve a report on past [webinar polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan with Webinar add-on enabled.",
        "operationId": "reportWebinarPolls",
        "summary": "Get webinar poll reports"
      }
    },
    "/report/webinars/{webinarId}/qa": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Webinar ID in \"**long**\" format(represented as int64 data type in JSON), also known as the webinar number.",
                      "format": "int64",
                      "type": "integer",
                      "example": ""
                    },
                    "questions": {
                      "description": "Array of webinar question objects.",
                      "items": {
                        "properties": {
                          "email": {
                            "description": "Participant email. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.",
                            "type": "string",
                            "example": ""
                          },
                          "name": {
                            "description": "Participant display name.<br> \n\nIf anonymous [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) option is enabled and if a participant submits the Q&A without providing their name, the value of the `name` field will be \"Anonymous Attendee\".",
                            "type": "string",
                            "example": ""
                          },
                          "question_details": {
                            "description": "Array of questions from user.",
                            "items": {
                              "properties": {
                                "answer": {
                                  "description": "Given answer.",
                                  "type": "string",
                                  "example": ""
                                },
                                "question": {
                                  "description": "Asked question.",
                                  "type": "string",
                                  "example": ""
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "start_time": {
                      "description": "Webinar start time.",
                      "format": "date-time",
                      "type": "string",
                      "example": ""
                    },
                    "uuid": {
                      "description": "Webinar UUID. Each Webinar instance will generate its own UUID(i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nWebinar Q&A report returned.<br>\nThis is only available for paid account:{accountId}.<br>\nA report cannot be generated for this account because this account has not subscribed to a webinar plan."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Reports"
        ],
        "description": "The Question & Answer (Q&A) feature for webinars allows attendees to ask questions during the webinar and for the panelists, co-hosts and host to answer their questions.\n\nUse this API to retrieve a report on question and answers from past webinars. <br><br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan with Webinar add-on enabled.",
        "operationId": "reportWebinarQA",
        "summary": "Get webinar Q&A report"
      }
    },
    "/roles": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nList of roles returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>**Error Code:** `4700`<br>Invalid access token, does not contain role:read:admin scope."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Roles"
        ],
        "description": "List [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) on your account\n\n**Scopes:** `role:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n**Prerequisites** :\n*  Pro or higher plan. \n*  For setting the initial role, you must be the Account Owner. \n*  For subsequent role management, you must be the Account Owner or user with role management permissions.",
        "operationId": "roles",
        "summary": "List roles"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**Status Code:** `200`<br>\nYou do not have the permission to create a role."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "description": {
                      "description": "Description of the role.",
                      "type": "string",
                      "example": ""
                    },
                    "id": {
                      "description": "Role Id",
                      "type": "string",
                      "example": ""
                    },
                    "name": {
                      "description": "Name of the role.",
                      "type": "string",
                      "example": ""
                    },
                    "privileges": {
                      "description": "[Privileges](https://marketplace.zoom.us/docs/api-reference/other-references/privileges) provided to the role.",
                      "items": {
                        "type": "string",
                        "example": ""
                      },
                      "type": "array"
                    },
                    "total_members": {
                      "description": "Total members assigned to the role.",
                      "type": "integer",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**Status Code:** `201`<br>\nRole created."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nThe name field cannot be empty."
          },
          "400": {
            "description": "**Error Code:** `1224` <br>\n Role name \"{roleName}\" has already been used."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Roles"
        ],
        "description": "Each Zoom user automatically has a role which can either be owner, administrator, or a member. \n\n**Pre-requisite:**<br>\n* Pro or higher plan.\n* For setting the initial role, you must be the Account Owner.<br>\n* For subsequent role management, you must be the Account Owner or user with role management permissions.<br>\n**Scopes:** `role:write:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "Description of the role.",
                    "type": "string",
                    "example": ""
                  },
                  "name": {
                    "description": "Name of the role.",
                    "type": "string",
                    "example": ""
                  },
                  "privileges": {
                    "description": "Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).",
                    "items": {
                      "type": "string",
                      "example": ""
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create a role"
      }
    },
    "/roles/{roleId}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nRole not found."
          },
          "204": {
            "description": "**Status Code:** `204`<br>\nRole deleted."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nRole not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Roles"
        ],
        "description": "Each Zoom user automatically has a role which can either be owner, administrator, or a member. Account Owners and users with edit privileges for Role management can add customized roles with a list.\n\nUse this API to delete a role.<br>\n**Pre-requisite:**<br>\n* A Pro or higher plan.<br>\n* For role management and updates, you must be the Account Owner or user with role management permissions.\n\n**Scopes:** `role:write:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteRole",
        "summary": "Delete a role"
      },
      "get": {
        "parameters": [
          {
            "description": "Role Id. ",
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "description": {
                      "description": "Description of the role.",
                      "type": "string",
                      "example": ""
                    },
                    "id": {
                      "description": "Role Id.",
                      "type": "string",
                      "example": ""
                    },
                    "name": {
                      "description": "Name of the role.",
                      "type": "string",
                      "example": ""
                    },
                    "privileges": {
                      "description": "Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).\n",
                      "items": {
                        "type": "string",
                        "example": ""
                      },
                      "type": "array"
                    },
                    "sub_account_privileges": {
                      "description": "This field will only be displayed to accounts that are enrolled in a partner plan and follow the master accounts and sub accounts structure.",
                      "properties": {
                        "second_level": {
                          "description": "Indicates how the account can manage sub accounts. The value can be one of the following:<br>\n`1`: Manage the sub account as an owner of the account.<br>\n`2`: Manage the sub account with the same privileges as the current account.<br>\n`3`: Manage the sub account with specified privileges.",
                          "type": "integer",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    "total_members": {
                      "description": "Total members assigned to that role.",
                      "type": "integer",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**Status Code:** `200`<br>\nInformation about a specific role returned.\n\n**Error Code:** `200`<br>\nYou do not have the permission to retrieve role information.\n"
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nRole not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Roles"
        ],
        "description": "Each Zoom user automatically has a role which can either be owner, administrator, or a member. Account Owners and users with edit privileges for Role management can add customized roles with a list of privileges.\n\nUse this API to get information including specific privileges assigned to a [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control).<br>\n**Pre-requisite:**<br>\n* A Pro or higher plan.<br>\n* For role management and updates, you must be the Account Owner or user with role management permissions.\n\n**Scopes:** `role:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getRoleInformation",
        "summary": "Get role information"
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**Error Code:** `200`<br>\nThe account must be a paid account to update the role."
          },
          "204": {
            "description": "**Status Code:** `400`<br>\nRole updated."
          },
          "300": {
            "description": "**Error Code:** `300`\nThis role cannot be updated."
          },
          "400": {
            "description": "**Error Code:** `1224` <br>\n Role name \"{roleName}\" has already been used."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Roles"
        ],
        "description": "Each Zoom user automatically has a [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) which can either be owner, administrator, or a member. Account Owners and users with edit privileges for Role management can add customized roles with a list.\n\nUse this API to change the privileges, name and description of a specific role.<br>\n**Pre-requisite:**<br>\n* A Pro or higher plan.<br>\n* For role management and updates, you must be the Account Owner or user with role management permissions.<br>**Scopes:** `role:write:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "Description of the role.",
                    "type": "string",
                    "example": ""
                  },
                  "id": {
                    "description": "Role Id.",
                    "type": "string",
                    "example": ""
                  },
                  "name": {
                    "description": "Name of the role.",
                    "type": "string",
                    "example": ""
                  },
                  "privileges": {
                    "description": "Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).\n",
                    "items": {
                      "type": "string",
                      "example": ""
                    },
                    "type": "array"
                  },
                  "sub_account_privileges": {
                    "description": "This field will only be displayed to accounts that are enrolled in the partner plan and follow master accounts and sub accounts structure.",
                    "properties": {
                      "second_level": {
                        "description": "Indicates how the account can manage sub accounts. The value can be one of the following:<br>\n`1`: Manage the sub account as an owner of the account.<br>\n`2`: Manage the sub account with the same privileges as the current account.<br>\n`3`: Manage the sub account with specified privileges.",
                        "type": "integer",
                        "example": ""
                      }
                    },
                    "type": "object"
                  },
                  "total_members": {
                    "description": "Total members assigned to that role.",
                    "type": "integer",
                    "example": ""
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update role information"
      }
    },
    "/roles/{roleId}/members": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/RoleId"
          },
          {
            "description": "The number of pages returned for this request.",
            "in": "query",
            "name": "page_count",
            "schema": {
              "type": "string",
              "example": ""
            }
          },
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleMembersList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nSuccess"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>Role not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Roles"
        ],
        "description": "User [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) can have a set of permissions that allows access only to the pages a user needs to view or edit. Use this API to list all the members that are assigned a specific role.\n\n**Scope:** `role:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>**Prerequisites:**<br>\n* A Pro or a higher plan.",
        "operationId": "roleMembers",
        "summary": "List members in a role"
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/RoleId"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "add_at": {
                      "description": "Date and time at which the members are assigned to the role.",
                      "format": "date-time",
                      "type": "string",
                      "example": ""
                    },
                    "ids": {
                      "description": "User ID",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201`<br>Members Added"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n\n**Error Code:** `1034`\nRole does not exist.<br><br>\n**Error Code:** `300`<br>\nRoleId required.<br>\nCan't delete or add members for Normal/Owner roles.<br><br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Roles"
        ],
        "description": "User [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) can have a set of permissions that allows access only to the pages a user needs to view or edit. Use this API to [assign a role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control#h_748b6fd8-5057-4cf4-bbfd-787909c09db0) to members.\n\n**Scopes:** `role:write:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n**Prerequisites:**<br>\n* A Pro or a higher plan.",
        "operationId": "AddRoleMembers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "members": {
                    "description": "Array of userId/user email of users to whom you would like to assign this role. Up to 30 users can be assigned a role at once.",
                    "items": {
                      "properties": {
                        "email": {
                          "description": "Email address of the user to whom you would like to assign the role. Provide either the userId in the ID field or the email address in the email field. If both fields are provided, only userId is used.",
                          "format": "email",
                          "type": "string",
                          "example": ""
                        },
                        "id": {
                          "description": "User ID of the user to whom you would like to assign the role. ",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    "maxItems": 30,
                    "type": "array",
                    "uniqueItems": false
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Role members",
          "required": true
        },
        "summary": "Assign a role"
      }
    },
    "/roles/{roleId}/members/{memberId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/RoleId"
          },
          {
            "description": "Member's ID",
            "in": "path",
            "name": "memberId",
            "required": true,
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nRole withdrawn from user."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>Role or Member not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Roles"
        ],
        "description": "User [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) can have a set of permissions that allows access only to the pages a user needs to view or edit. Use this API to unassign a user's role.\n\n**Scope:** `role:write:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**<br>\n* A Pro or a higher plan.",
        "operationId": "roleMemberDelete",
        "summary": "Unassign a role"
      }
    },
    "/rooms": {
      "get": {
        "parameters": [
          {
            "description": "The status of the Zoom Room.",
            "in": "query",
            "name": "status",
            "schema": {
              "enum": [
                "Offline",
                "Available",
                "InMeeting",
                "UnderConstruction"
              ],
              "type": "string",
              "example": "Offline"
            }
          },
          {
            "description": "Type of the Zoom Rooms.",
            "in": "query",
            "name": "type",
            "schema": {
              "enum": [
                "ZoomRoom",
                "SchedulingDisplayOnly",
                "DigitalSignageOnly"
              ],
              "type": "string",
              "example": "ZoomRoom"
            }
          },
          {
            "description": "Use this query parameter with a value of `true` if you would like to see Zoom Rooms in your account that have not been assigned to anyone yet.",
            "in": "query",
            "name": "unassigned_rooms",
            "schema": {
              "default": false,
              "type": "boolean",
              "example": true
            }
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "Parent location ID of the Zoom Room.",
            "in": "query",
            "name": "location_id",
            "schema": {
              "type": "string",
              "example": "49D7a0xPQvGQ2DCMZgSe7w"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string",
                      "example": "At6eWnFZ1FB3arCXnRxqHLXKhbDW18yz2i2"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call.",
                      "type": "integer",
                      "example": 20
                    },
                    "rooms": {
                      "description": "List of existing Zoom Rooms.",
                      "items": {
                        "properties": {
                          "activation_code": {
                            "description": "Activation Code is the code that is used to complete the setup of the Zoom Room.",
                            "type": "string",
                            "example": "1315-2376-2198-7926"
                          },
                          "id": {
                            "description": "Unique Identifier of the Zoom Room.",
                            "type": "string",
                            "example": "qMOLddnySIGGVycz8aX_JQ"
                          },
                          "location_id": {
                            "description": "Unique Identifier of the [location](/api-reference/zoom-api/methods#operation/listZRLocations) of the room.",
                            "type": "string",
                            "example": "49D7a0xPQvGQ2DCMZgSe7w"
                          },
                          "name": {
                            "description": "Name of the Zoom Room.",
                            "type": "string",
                            "example": "My Room"
                          },
                          "room_id": {
                            "description": "Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**.",
                            "type": "string",
                            "example": "qMOLddnySIGGVycz8aX_JQ"
                          },
                          "status": {
                            "description": "Status of the Zoom Room.",
                            "enum": [
                              "Offline",
                              "Available",
                              "InMeeting",
                              "UnderConstruction"
                            ],
                            "type": "string",
                            "example": "Offline"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nA list of Zoom Rooms returned successfully."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Zoom Rooms is a software-based room system that provides an integrated experience for audio conferencing, wireless screen sharing and video conferencing. Use this API to list all the existing [Zoom Rooms](https://support.zoom.us/hc/en-us/articles/207483343-Getting-Started-with-Zoom-Rooms) in a Zoom account.<br><br>\n**Prerequisites:**<br>\n* Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>\n**Scopes**: `room:read:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listZoomRooms",
        "summary": "List Zoom Rooms"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Unique Identifier of the Zoom Room.",
                      "type": "string",
                      "example": "qMOLddnySIGGVycz8aX_JQ"
                    },
                    "location_id": {
                      "description": "Location ID of the location where the Zoom Room was added.",
                      "type": "string",
                      "example": "49D7a0xPQvGQ2DCMZgSe7w"
                    },
                    "name": {
                      "description": "Name of the Zoom Room.",
                      "type": "string",
                      "example": "My Room"
                    },
                    "room_id": {
                      "description": "Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**.",
                      "type": "string",
                      "example": "qMOLddnySIGGVycz8aX_JQ"
                    },
                    "type": {
                      "description": "Type of the Zoom Room.",
                      "enum": [
                        "ZoomRoom",
                        "SchedulingDisplayOnly",
                        "DigitalSignageOnly"
                      ],
                      "type": "string",
                      "example": "ZoomRoom"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**<br>\nZoom Room added successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br> Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAt least one normal Zoom Rooms required.<br><br>\n**Error Code:** `300`<br>\nInvalid parent location id {location_id}.<br>\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n\n**Error Code:** `4801`<br>\nLocation not found:{location_id}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to [add a Zoom Room](https://support.zoom.us/hc/en-us/articles/202822279-Add-Zoom-Rooms-on-Web-Portal) to a Zoom account.<br><br>\n**Prerequisites:**<br>\n* Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>\n**Scopes**: `room:write:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "addARoom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "location_id": {
                    "description": "**Optional**<br>Location ID of the lowest level location in the [location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) where the Zoom Room is to be added. For instance if the structure of the location hierarchy is set up as “country, states, city, campus, building, floor”, a room can only be added under the floor level location. \n\nThis ID can be retrieved from the [**List Zoom Room locations**](/api-reference/zoom-api/methods#operation/listZRLocations) API.",
                    "type": "string",
                    "example": "49D7a0xPQvGQ2DCMZgSe7w"
                  },
                  "name": {
                    "description": "Name of the Zoom Room.",
                    "type": "string",
                    "example": "My Room"
                  },
                  "type": {
                    "description": "Type of the Zoom Room. ",
                    "enum": [
                      "ZoomRoom",
                      "SchedulingDisplayOnly",
                      "DigitalSignageOnly"
                    ],
                    "type": "string",
                    "example": "ZoomRoom"
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Add a Zoom Room"
      }
    },
    "/rooms/account_profile": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "basic": {
                      "properties": {
                        "required_code_to_ext": {
                          "description": "Require code to exit out of the Zoom Rooms application to switch between other apps.\n",
                          "type": "boolean",
                          "example": true
                        },
                        "room_passcode": {
                          "description": "1-16 digit number or characters used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or to sign out.",
                          "maxLength": 16,
                          "minLength": 1,
                          "type": "string",
                          "example": "111111"
                        },
                        "support_email": {
                          "description": "The email address used for reporting Zoom Room issues.",
                          "format": "email",
                          "type": "string",
                          "example": "contact-it@example.com"
                        },
                        "support_phone": {
                          "description": "The phone number used for reporting Zoom room issues.",
                          "type": "string",
                          "example": "18798769876"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nZoom Room Account Profile returned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms Account"
        ],
        "description": "Get details on the account profile of a Zoom Room. This information can only by accessed either by the Zoom Room Account Owner or a user with Zoom Rooms admin permission. To get information on an individual Room Profile, use the [**Get Zoom Room profile**](/api-reference/zoom-api/methods#operation/getZRProfile) API. \n\n**Prerequisites:**<br>\n* Zoom account owner or Zoom Rooms admin permissions<br>\n\n**Scopes:** `room:read:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "getZRAccountProfile",
        "summary": "Get Zoom Room account profile"
      },
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nProfile updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms Account"
        ],
        "description": "Update information on the account profile of a Zoom Room. This information can only by accessed either by the Zoom Room Account Owner or a user with Zoom Rooms admin permission. To update information on an individual Room Profile, use the [**Update a Zoom Room profile**](/api-reference/zoom-api/methods#operation/updateRoomProfile) API. \n\n**Prerequisites:**<br>\n* Zoom account owner or Zoom Rooms admin permissions<br>\n\n**Scopes:** `room:write:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "updateZRAccProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "basic": {
                    "properties": {
                      "required_code_to_ext": {
                        "description": "Require code to exit out of the Zoom Rooms application to switch between other apps.\n",
                        "type": "boolean",
                        "example": true
                      },
                      "room_passcode": {
                        "description": "1-16 digit number or characters used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or to sign out.",
                        "maxLength": 16,
                        "minLength": 1,
                        "type": "string",
                        "example": "111111"
                      },
                      "support_email": {
                        "description": "The email address used for reporting Zoom Room issues.",
                        "format": "email",
                        "type": "string",
                        "example": "contact-it@example.com"
                      },
                      "support_phone": {
                        "description": "The phone number used for reporting Zoom room issues.",
                        "type": "string",
                        "example": "18798769876"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Zoom Room account profile"
      }
    },
    "/rooms/account_settings": {
      "get": {
        "parameters": [
          {
            "description": "The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account. <br>\n`signage`: View digital signage settings of the Zoom Rooms Account.",
            "in": "query",
            "name": "setting_type",
            "required": true,
            "schema": {
              "default": "meeting",
              "enum": [
                "meeting",
                "alert"
              ],
              "type": "string",
              "example": "meeting"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "zoom_rooms": {
                          "properties": {
                            "allow_multiple_content_sharing": {
                              "description": "Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.",
                              "type": "boolean",
                              "example": true
                            },
                            "audio_device_daily_auto_test": {
                              "description": "Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_direct_sharing": {
                              "description": "Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_start_scheduled_meeting": {
                              "description": "Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_stop_scheduled_meeting": {
                              "description": "Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. ",
                              "type": "boolean",
                              "example": true
                            },
                            "count_attendees_number_in_room": {
                              "description": "Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.\n",
                              "type": "boolean",
                              "example": true
                            },
                            "display_feedback_survey": {
                              "description": "Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.",
                              "type": "boolean",
                              "example": true
                            },
                            "display_meeting_list": {
                              "description": " Show the same information on the TV that is shown on the controller.",
                              "type": "boolean",
                              "example": true
                            },
                            "display_top_banner": {
                              "description": "Allow to display room name, time and sharing key on the top portion of TV.",
                              "type": "boolean",
                              "example": true
                            },
                            "email_address_prompt_before_recording": {
                              "description": "Allow in-room participants to input email address where they can receive the recording before starting a recording if the meeting was created on the Scheduling Display or if it was started using the \"Meet Now\" option.",
                              "type": "boolean",
                              "example": true
                            },
                            "encrypt_shared_screen_content": {
                              "description": "Encrypt screen and content shared in meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "hide_id_for_private_meeting": {
                              "description": "If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.",
                              "type": "boolean",
                              "example": true
                            },
                            "make_room_alternative_host": {
                              "description": "Set [Zoom Rooms as the alternative host](https://support.zoom.us/hc/en-us/articles/203614149-Zoom-Rooms-as-Alternative-Host).\n",
                              "type": "boolean",
                              "example": true
                            },
                            "secure_connection_channel": {
                              "description": "Enable secure connection between Zoom Rooms computer and controller.",
                              "type": "boolean",
                              "example": true
                            },
                            "send_whiteboard_to_internal_contact_only": {
                              "description": "Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.",
                              "type": "boolean",
                              "example": true
                            },
                            "show_alert_before_meeting": {
                              "description": "If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. ",
                              "type": "boolean",
                              "example": true
                            },
                            "show_call_history_in_room": {
                              "description": "Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.\n",
                              "type": "boolean",
                              "example": true
                            },
                            "show_contact_list_on_controller": {
                              "description": "If enabled, you can invite participants from the contact list during a meeting or when starting a meeting",
                              "type": "boolean",
                              "example": true
                            },
                            "show_non_video_participants": {
                              "description": "When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.",
                              "type": "boolean",
                              "example": true
                            },
                            "start_airplay_manually": {
                              "description": "Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.",
                              "type": "boolean",
                              "example": true
                            },
                            "start_airplay_mirroring": {
                              "description": "Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms",
                              "type": "boolean",
                              "example": true
                            },
                            "support_join_3rd_party_meeting": {
                              "description": "Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.",
                              "type": "boolean",
                              "example": true
                            },
                            "transform_meeting_to_private": {
                              "description": "If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display \"Your Name's Meeting\" instead of the real meeting topic.",
                              "type": "boolean",
                              "example": true
                            },
                            "upcoming_meeting_alert": {
                              "description": "If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.",
                              "type": "boolean",
                              "example": true
                            },
                            "weekly_system_restart": {
                              "description": "[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "client_alert": {
                          "description": "The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. ",
                          "properties": {
                            "detect_bluetooth_microphone_error_alert": {
                              "description": "Display an alert message when an issue is detected with a bluetooth microphone.",
                              "type": "boolean",
                              "example": true
                            },
                            "detect_bluetooth_speaker_error_alert": {
                              "description": "Display an alert message when an issue is detected with a bluetooth speaker.",
                              "type": "boolean",
                              "example": true
                            },
                            "detect_camera_error_alert": {
                              "description": "Display an alert message when an issue is detected with a camera.",
                              "type": "boolean",
                              "example": true
                            },
                            "detect_microphone_error_alert": {
                              "description": "Display an alert message when an issue is detected with microphone.",
                              "type": "boolean",
                              "example": true
                            },
                            "detect_speaker_error_alert": {
                              "description": "Display an alert message when an issue is detected with a speaker.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "digital_signage": {
                          "properties": {
                            "banner": {
                              "description": "Specifies the elements that you want to display in the top banner.",
                              "properties": {
                                "banner_room_name": {
                                  "description": "Display or hide banner room name.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "banner_sharing_key": {
                                  "description": "Display or hide banner sharing key.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "banner_time": {
                                  "description": "Display or hide time in the banner.",
                                  "type": "boolean",
                                  "example": true
                                }
                              },
                              "type": "object"
                            },
                            "display_period": {
                              "description": "Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.",
                              "properties": {
                                "start_displaying_content": {
                                  "description": "Start displaying digital signage content after certain duration after the meeting ends. The value of this field indicates the duration in minutes.",
                                  "type": "integer",
                                  "example": 1
                                },
                                "stop_displaying_content": {
                                  "description": "Stop displaying content {certain_duration} before a meeting is scheduled to begin. The value of this field indicates the duration in minutes.",
                                  "type": "integer",
                                  "example": 2
                                }
                              },
                              "type": "object"
                            },
                            "enable_digital_signage": {
                              "description": "[Indicates whether digital signage is on or off,](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>\n`true`: enable<br> `false`: disable",
                              "type": "boolean",
                              "example": true
                            },
                            "layout": {
                              "description": "Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.\n\n`standard`: Standard Center<br>\n`video_content`: Video + Content",
                              "type": "string",
                              "example": "standard"
                            },
                            "mute": {
                              "description": "Sound of all contents will be muted if the value of this field is set to `true`.",
                              "type": "boolean",
                              "example": true
                            },
                            "play_list": {
                              "description": "Content list.",
                              "items": {
                                "properties": {
                                  "action": {
                                    "description": "Specify an action for the content list. The value can be one of the following:<br>\n`add`: Add another content list.<br>\n`update`: Update existing content list.<br>\n`delete`: Delete content list.\n",
                                    "enum": [
                                      "add",
                                      "update",
                                      "delete"
                                    ],
                                    "type": "string",
                                    "example": "update"
                                  },
                                  "contents": {
                                    "items": {
                                      "description": "Content list.",
                                      "properties": {
                                        "content_id": {
                                          "description": "Content Id.",
                                          "type": "string",
                                          "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                        },
                                        "duration": {
                                          "description": "Duration for how long the content will be displayed.",
                                          "type": "integer",
                                          "example": 65
                                        },
                                        "id": {
                                          "type": "string",
                                          "example": "qMOLddnySIGGVycz8aX_JQ"
                                        },
                                        "name": {
                                          "description": "Name of the content.",
                                          "type": "string",
                                          "example": "content name"
                                        },
                                        "order": {
                                          "description": "Order of the content in the display.",
                                          "type": "integer",
                                          "example": 1
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "maxItems": 3,
                                    "type": "array"
                                  },
                                  "end_time": {
                                    "description": "Specify the display end time for the content list in GMT.",
                                    "type": "string",
                                    "example": "2021-03-18T05:41:36Z"
                                  },
                                  "id": {
                                    "description": "Unique identifier of the content list. This field is only required if you would like to remove or update the content list.",
                                    "type": "string",
                                    "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                  },
                                  "name": {
                                    "description": "Name of the content list.",
                                    "type": "string",
                                    "example": "content name"
                                  },
                                  "start_time": {
                                    "description": "Specify the display start time for the content list in GMT.",
                                    "type": "string",
                                    "example": "2021-03-18T05:41:36Z"
                                  }
                                },
                                "type": "object"
                              },
                              "maxItems": 2,
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "notification": {
                          "description": "[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. ",
                          "properties": {
                            "audio_meet_usability_threshold": {
                              "description": "Send an alert when the audio echo test result meets usability threshold.",
                              "type": "boolean",
                              "example": true
                            },
                            "audio_not_meet_usability_threshold": {
                              "description": "Send an alert when the audio echo test result does not meet usability threshold.",
                              "type": "boolean",
                              "example": true
                            },
                            "battery_is_charging": {
                              "description": "Send an alert when the battery starts charging.",
                              "type": "boolean",
                              "example": true
                            },
                            "battery_low_and_not_charging": {
                              "description": "Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.",
                              "type": "boolean",
                              "example": true
                            },
                            "battery_percentage": {
                              "description": "Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.",
                              "type": "string",
                              "example": "90"
                            },
                            "controller_scheduling_disconnected": {
                              "description": "Send an alert when the connection to the Controller or Scheduling Display cannot be detected.",
                              "type": "boolean",
                              "example": true
                            },
                            "controller_scheduling_reconnected": {
                              "description": "Send an alert when the Controller or Scheduling Display can be detected again.",
                              "type": "boolean",
                              "example": true
                            },
                            "cpu_usage_high_detected": {
                              "description": "Send an alert when CPU usage is above 90%.",
                              "type": "boolean",
                              "example": true
                            },
                            "mic_speaker_camera_disconnected": {
                              "description": "Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.",
                              "type": "boolean",
                              "example": true
                            },
                            "mic_speaker_camera_reconnected": {
                              "description": "Send an alert when the mic, speaker or camera is reconnected.",
                              "type": "boolean",
                              "example": true
                            },
                            "network_unstable_detected": {
                              "description": "Send an alert when low bandwidth network is detected",
                              "type": "boolean",
                              "example": true
                            },
                            "sip_registration_failed": {
                              "description": "Send an alert when SIP registration stops working. ",
                              "type": "boolean",
                              "example": true
                            },
                            "sip_registration_re_enabled": {
                              "description": "Send an alert after the SIP registration is re-enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "zoom_room_come_back_online": {
                              "description": "Send an alert when the Zoom Room is online after previously being offline.",
                              "type": "boolean",
                              "example": true
                            },
                            "zoom_room_display_disconnected": {
                              "description": "Send an alert when the TV display is disconnected",
                              "type": "boolean",
                              "example": true
                            },
                            "zoom_room_offline": {
                              "description": "Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZR Account Settings returned successfully.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms Account"
        ],
        "description": "Get details on Account Settings of a Zoom Room. With this API, you can view either the **Account Meeting Settings** or the **Alert Settings** (Client Alert Settings and Notification Settings) of the Zoom Rooms account. By default, only **Account Meeting Settings** are returned. To view only **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter.<br><br>\n**Prerequisites:**<br>\n* Zoom Room licenses\n* Owner or Admin privileges on the Zoom Account.<br>\n**Scopes:** `room:read:admin`<br><br> \n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "getZRAccountSettings",
        "summary": "Get Zoom Room account settings"
      },
      "patch": {
        "parameters": [
          {
            "description": "The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account.<br>\n`signage`: View digital signage settings of the Zoom Rooms Account.",
            "in": "query",
            "name": "setting_type",
            "required": true,
            "schema": {
              "default": "meeting",
              "type": "string",
              "example": "meeting"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nSettings updated successfully.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms Account"
        ],
        "description": "Update account settings applied for Zoom Rooms in a Zoom account. With this API, you can update either the **Account Meeting Settings** or the **Alert Settings** (Client Alert Settings and Notification Settings) of the Zoom Rooms account by specifying the required setting type in the `setting_type` parameter. To update only **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter and to update only **Account Meeting Settings**, specify `meeting` as the value of the `setting_type` query parameter.<br><br>\n**Prerequisites:**<br>\n* Zoom Room licenses\n* Owner or Admin privileges on the Zoom Account.<br>\n**Scopes:** `room:write:admin`<br> \n\n  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "updateZoomRoomAccSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "properties": {
                      "zoom_rooms": {
                        "properties": {
                          "allow_multiple_content_sharing": {
                            "description": "Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.",
                            "type": "boolean",
                            "example": true
                          },
                          "audio_device_daily_auto_test": {
                            "description": "Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_direct_sharing": {
                            "description": "Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_start_scheduled_meeting": {
                            "description": "Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_stop_scheduled_meeting": {
                            "description": "Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. ",
                            "type": "boolean",
                            "example": true
                          },
                          "count_attendees_number_in_room": {
                            "description": "Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.\n",
                            "type": "boolean",
                            "example": true
                          },
                          "display_feedback_survey": {
                            "description": "Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.",
                            "type": "boolean",
                            "example": true
                          },
                          "display_meeting_list": {
                            "description": " Show the same information on the TV that is shown on the controller.",
                            "type": "boolean",
                            "example": true
                          },
                          "display_top_banner": {
                            "description": "Allow to display room name, time and sharing key on the top portion of TV.",
                            "type": "boolean",
                            "example": true
                          },
                          "email_address_prompt_before_recording": {
                            "description": "Allow in-room participants to input email address where they can receive the recording before starting a recording if the meeting was created on the Scheduling Display or if it was started using the \"Meet Now\" option.",
                            "type": "boolean",
                            "example": true
                          },
                          "encrypt_shared_screen_content": {
                            "description": "Encrypt screen and content shared in meetings.",
                            "type": "boolean",
                            "example": true
                          },
                          "hide_id_for_private_meeting": {
                            "description": "If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.",
                            "type": "boolean",
                            "example": true
                          },
                          "make_room_alternative_host": {
                            "description": "Set [Zoom Rooms as the alternative host](https://support.zoom.us/hc/en-us/articles/203614149-Zoom-Rooms-as-Alternative-Host).\n",
                            "type": "boolean",
                            "example": true
                          },
                          "secure_connection_channel": {
                            "description": "Enable secure connection between Zoom Rooms computer and controller.",
                            "type": "boolean",
                            "example": true
                          },
                          "send_whiteboard_to_internal_contact_only": {
                            "description": "Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.",
                            "type": "boolean",
                            "example": true
                          },
                          "show_alert_before_meeting": {
                            "description": "If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. ",
                            "type": "boolean",
                            "example": true
                          },
                          "show_call_history_in_room": {
                            "description": "Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.\n",
                            "type": "boolean",
                            "example": true
                          },
                          "show_contact_list_on_controller": {
                            "description": "If enabled, you can invite participants from the contact list during a meeting or when starting a meeting",
                            "type": "boolean",
                            "example": true
                          },
                          "show_non_video_participants": {
                            "description": "When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.",
                            "type": "boolean",
                            "example": true
                          },
                          "start_airplay_manually": {
                            "description": "Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.",
                            "type": "boolean",
                            "example": true
                          },
                          "support_join_3rd_party_meeting": {
                            "description": "Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.",
                            "type": "boolean",
                            "example": true
                          },
                          "transform_meeting_to_private": {
                            "description": "If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display \"Your Name's Meeting\" instead of the real meeting topic.",
                            "type": "boolean",
                            "example": true
                          },
                          "upcoming_meeting_alert": {
                            "description": "If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.",
                            "type": "boolean",
                            "example": true
                          },
                          "weekly_system_restart": {
                            "description": "[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "client_alert": {
                        "description": "The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. ",
                        "properties": {
                          "detect_bluetooth_microphone_error_alert": {
                            "description": "Display an alert message when an issue is detected with a bluetooth microphone.",
                            "type": "boolean",
                            "example": true
                          },
                          "detect_bluetooth_speaker_error_alert": {
                            "description": "Display an alert message when an issue is detected with a bluetooth speaker.",
                            "type": "boolean",
                            "example": true
                          },
                          "detect_camera_error_alert": {
                            "description": "Display an alert message when an issue is detected with a camera.",
                            "type": "boolean",
                            "example": true
                          },
                          "detect_microphone_error_alert": {
                            "description": "Display an alert message when an issue is detected with microphone.",
                            "type": "boolean",
                            "example": true
                          },
                          "detect_speaker_error_alert": {
                            "description": "Display an alert message when an issue is detected with a speaker.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "digital_signage": {
                        "properties": {
                          "banner": {
                            "properties": {
                              "banner_room_name": {
                                "type": "boolean",
                                "example": true
                              },
                              "banner_sharing_key": {
                                "type": "boolean",
                                "example": true
                              },
                              "banner_time": {
                                "type": "boolean",
                                "example": true
                              }
                            },
                            "type": "object"
                          },
                          "display_period": {
                            "description": "Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.",
                            "properties": {
                              "start_displaying_content": {
                                "description": "Start displaying digital signage content after certain duration after the meeting ends. Specify the value of the duration in minutes in this field.",
                                "type": "integer",
                                "example": 1
                              },
                              "stop_displaying_content": {
                                "description": "Stop displaying content {certain_duration} before a meeting is scheduled to begin. Specify the value of duration in minutes in this field.",
                                "type": "integer",
                                "example": 1
                              }
                            },
                            "type": "object"
                          },
                          "enable_digital_signage": {
                            "description": "[Enable or disable digital signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>\n`true`: enable<br> `false`: disable",
                            "type": "boolean",
                            "example": true
                          },
                          "layout": {
                            "description": "Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.\n\n`standard`: Standard Center<br>\n`video_content`: Video + Content",
                            "type": "string",
                            "example": "standard"
                          },
                          "mute": {
                            "description": "Sound of all contents will be muted if the value of this field is set to `true`.",
                            "type": "boolean",
                            "example": true
                          },
                          "play_list": {
                            "description": "Content list.",
                            "items": {
                              "properties": {
                                "action": {
                                  "description": "Specify an action for the content list. The value can be one of the following:<br>\n`add`: Add another content list.<br>\n`update`: Update existing content list.<br>\n`delete`: Delete content list.\n",
                                  "enum": [
                                    "add",
                                    "update",
                                    "delete"
                                  ],
                                  "type": "string",
                                  "example": "update"
                                },
                                "contents": {
                                  "items": {
                                    "description": "Content list.",
                                    "properties": {
                                      "action": {
                                        "description": "Specify an action for the content in the content list. The value can be one of the following:<br>\n`add`: Add another content to the content list.<br>\n`update`: Update existing content's information in the content list.<br>\n`delete`: Delete content from the content list.\n\n",
                                        "type": "string",
                                        "example": "update"
                                      },
                                      "content_id": {
                                        "description": "Content Id.",
                                        "type": "string",
                                        "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                      },
                                      "duration": {
                                        "description": "By default each content is display for 5 seconds. Using this field, specify how long you would like to display the content.",
                                        "type": "integer",
                                        "example": 65
                                      },
                                      "id": {
                                        "description": "Unique identifier of the content. This field is only required if you would like to remove or update the content information.",
                                        "type": "string",
                                        "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                      },
                                      "name": {
                                        "description": "Name of the content.",
                                        "type": "string",
                                        "example": "content name"
                                      },
                                      "order": {
                                        "description": "Order of the content in the display.",
                                        "type": "integer",
                                        "example": 1
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "maxItems": 3,
                                  "type": "array"
                                },
                                "end_time": {
                                  "description": "Specify the display end time for the content list in GMT.",
                                  "type": "string",
                                  "example": "2021-03-18T05:41:36Z"
                                },
                                "id": {
                                  "description": "Unique identifier of the content list. This field is only required if you would like to remove or update the content list.",
                                  "type": "string",
                                  "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                },
                                "name": {
                                  "description": "Name of the content list.",
                                  "type": "string",
                                  "example": "content list"
                                },
                                "start_time": {
                                  "description": "Specify the display start time for the content list in GMT.",
                                  "type": "string",
                                  "example": "2021-03-18T05:41:36Z"
                                }
                              },
                              "type": "object"
                            },
                            "maxItems": 2,
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "notification": {
                        "description": "[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. ",
                        "properties": {
                          "audio_meet_usability_threshold": {
                            "description": "Send an alert when the audio echo test result meets usability threshold.",
                            "type": "boolean",
                            "example": true
                          },
                          "audio_not_meet_usability_threshold": {
                            "description": "Send an alert when the audio echo test result does not meet usability threshold.",
                            "type": "boolean",
                            "example": true
                          },
                          "battery_is_charging": {
                            "description": "Send an alert when the battery starts charging.",
                            "type": "boolean",
                            "example": true
                          },
                          "battery_low_and_not_charging": {
                            "description": "Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.",
                            "type": "boolean",
                            "example": true
                          },
                          "battery_percentage": {
                            "description": "Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.",
                            "type": "string",
                            "example": "90"
                          },
                          "controller_scheduling_disconnected": {
                            "description": "Send an alert when the connection to the Controller or Scheduling Display cannot be detected.",
                            "type": "boolean",
                            "example": true
                          },
                          "controller_scheduling_reconnected": {
                            "description": "Send an alert when the Controller or Scheduling Display can be detected again.",
                            "type": "boolean",
                            "example": true
                          },
                          "cpu_usage_high_detected": {
                            "description": "Send an alert when CPU usage is above 90%.",
                            "type": "boolean",
                            "example": true
                          },
                          "mic_speaker_camera_disconnected": {
                            "description": "Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.",
                            "type": "boolean",
                            "example": true
                          },
                          "mic_speaker_camera_reconnected": {
                            "description": "Send an alert when the mic, speaker or camera is reconnected.",
                            "type": "boolean",
                            "example": true
                          },
                          "network_stable_detected": {
                            "description": "Send an alert when the network is stable.",
                            "type": "boolean",
                            "example": true
                          },
                          "network_unstable_detected": {
                            "description": "Send an alert when low bandwidth network is detected",
                            "type": "boolean",
                            "example": true
                          },
                          "sip_registration_failed": {
                            "description": "Send an alert when SIP registration stops working. ",
                            "type": "boolean",
                            "example": true
                          },
                          "sip_registration_re_enabled": {
                            "description": "Send an alert after the SIP registration is re-enabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "zoom_room_come_back_online": {
                            "description": "Send an alert when the Zoom Room is online after previously being offline.",
                            "type": "boolean",
                            "example": true
                          },
                          "zoom_room_display_disconnected": {
                            "description": "Send an alert when the TV display is disconnected",
                            "type": "boolean",
                            "example": true
                          },
                          "zoom_room_offline": {
                            "description": "Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Zoom Room account settings"
      }
    },
    "/rooms/digital_signage": {
      "get": {
        "parameters": [
          {
            "description": "Specify the type of digital signage resource. The value can be one of the following:\n* `content`: Returns information about content files.\n* `folder`: Returns information about the folder where the content files are located.",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "example": "content"
            }
          },
          {
            "description": "Unique identifier of the folder where the content is located. Provide this field if you would like to filter the response by contents that are only available in a specific folder.",
            "in": "query",
            "name": "folder_id",
            "schema": {
              "type": "string",
              "example": "LHMmOOYaRiOA5m5WZjXVPA"
            }
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "contents": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Unique identifier of the content or the folder. ",
                            "type": "string",
                            "example": "LHMmOOYaRiOA5m5WZjXVPA"
                          },
                          "name": {
                            "description": "Name of the content file or the folder.",
                            "type": "string",
                            "example": "content name"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string",
                      "example": "At6eWnFZ1FB3arCXnRxqHLXKhbDW18yz2i2"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call.",
                      "type": "integer",
                      "example": 20
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nList returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n* Zoom Room subscription was not found. Try again after purchasing a Zoom Room subscription.\n* Access restricted."
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to return information about a Zoom account's [Zoom Rooms digital signage content](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage). You can also view this content in the **Room Management** section's [**Digital Signage Content**](https://zoom.us/digitalsignage#/) tab in the Zoom web portal. \n\n**Scopes:** `room:read:admin` \n\n**Prerequisites:** \n* A Pro or a higher account with Zoom Rooms. \n* Existing content in the **Digital Signage Content** tab.",
        "operationId": "listDigitalSignageContent",
        "summary": "List digital signage contents"
      }
    },
    "/rooms/events": {
      "patch": {
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "event_id": {
                      "description": "Unique identifier of the event related to the content being displayed. This field is only returned if you provided `zoomroom.emergency_alert_displayed` as the value of the `method` parameter.\n\nSave this response value and provide it as the value of the `event_id` request parameter when you need to remove the alert content using `zoomroom.emergency_alert_removed` method.",
                      "type": "string",
                      "example": "ebrg2b87a6uu9c678qhvsiahsc"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `202` <br>"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n\n**Error Code:** `200` <br> Access restricted. <br><br>\n**Error Code:** `300`\nEvent id is required.<br>\nInvalid value submitted for Target Ids. Provide a valid Target Id associated with the Target type."
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Display or hide E911 emergency alert text content from [Zoom Rooms digital signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage).\n\n**Scope:** `room:write:admin`\n\n**Prerequisites:**<br>\n* [Zoom Rooms](https://zoom.us/zoomrooms/software) 5.3.0 or higher\n* Zoom Rooms digital signage must be [enabled](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-Digital-Signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd)\n",
        "operationId": "manageE911signage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "description": "Provide this request body to set and display the emergency alert content. ",
                    "properties": {
                      "method": {
                        "description": "To display the emergency content on the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_displayed`.",
                        "enum": [
                          "zoomroom.emergency_alert_displayed"
                        ],
                        "type": "string",
                        "example": "zoomroom.emergency_alert_displayed"
                      },
                      "params": {
                        "properties": {
                          "content": {
                            "description": "Provide the content to be displayed. ",
                            "type": "string",
                            "example": "diaplay content"
                          },
                          "target_ids": {
                            "description": "Provide one of the following IDs associated with the Zoom Room.<br>\n\n* `accountId`: Account ID of the Zoom account.<br> Provide account ID as the value of this field to display the alert content on all Zoom Rooms' displays in the account.<br><br>\n* `locationId`: Location ID. Get the value of this field by calling the [**List Zoom Rooms locations**](/api-reference/zoom-api/methods#operation/listZRLocations) API. \n Provide location ID as the value of this field to display the alert content on all Zoom Rooms' displays listed in the specified location.<br><br>\n* `roomId`: Unique identifier of the Zoom Room. Get the value of this field by calling the [**List Zoom Rooms**](/api-reference/zoom-api/methods#operation/listZoomRooms) API. Provide room ID as the value of this field to display the alert content on a specific Zoom Rooms' display.",
                            "items": {
                              "type": "string",
                              "example": "qMOLddnySIGGVycz8aX_JQ"
                            },
                            "maxItems": 10,
                            "minItems": 1,
                            "type": "array"
                          },
                          "target_type": {
                            "description": "Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>\n* `account`\n* `location`\n* `room`",
                            "enum": [
                              "account",
                              "location",
                              "room"
                            ],
                            "type": "string",
                            "example": "account"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "description": "Provide this request body to remove the emergency alert content. Note that there won't be a response body for this request.",
                    "properties": {
                      "method": {
                        "description": "To remove the emergency content from the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_removed`.",
                        "enum": [
                          "zoomroom.emergency_alert_removed"
                        ],
                        "type": "string",
                        "example": "zoomroom.emergency_alert_removed"
                      },
                      "params": {
                        "properties": {
                          "event_id": {
                            "description": "Unique identifier of the event. ",
                            "type": "string",
                            "example": "ebrg2b87a6uu9c678qhvsiahsc"
                          },
                          "target_ids": {
                            "description": "Provide one of the following IDs associated with the Zoom Room.<br>\n\n* `accountId`: Account ID of the Zoom account.<br> Provide account ID as the value of this field to remove the alert content from all Zoom Rooms' displays in the account.<br><br>\n* `locationId`: Location ID. Get the value of this field by calling the [**List Zoom Rooms locations**](/api-reference/zoom-api/methods#operation/listZRLocations) API. \n Provide location ID as the value of this field to remove the alert content from all Zoom Rooms' displays listed in the specified location.<br><br>\n* `roomId`: Unique identifier of the Zoom Room. Get the value of this field by calling the [**List Zoom Rooms**](/api-reference/zoom-api/methods#operation/listZoomRooms) API. Provide room ID as the value of this field to remove the alert content from a specific Zoom Rooms' display.",
                            "items": {
                              "type": "string",
                              "example": "qMOLddnySIGGVycz8aX_JQ"
                            },
                            "maxItems": 10,
                            "minItems": 1,
                            "type": "array"
                          },
                          "target_type": {
                            "description": "Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>\n* `account`\n* `location`\n* `room`",
                            "enum": [
                              "account",
                              "location",
                              "room"
                            ],
                            "type": "string",
                            "example": "account"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update E911 digital signage"
      }
    },
    "/rooms/locations": {
      "get": {
        "parameters": [
          {
            "description": "A unique identifier of the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1. Use this parameter to filter the response by a specific location hierarchy level.",
            "in": "query",
            "name": "parent_location_id",
            "schema": {
              "type": "string",
              "example": "49D7a0xPQvGQ2DCMZgSe7w"
            }
          },
          {
            "description": "Use this field to filter the response by the type of location. The value can be one of the following:\n`country`, `states`, `city`, `campus`, `building`, `floor`. ",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "example": "state"
            }
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "locations": {
                      "type": "array",
                      "description": "Information about the Zoom Room locations.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The location's unique ID.",
                            "example": "49D7a0xPQvGQ2DCMZgSe7w"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the location.",
                            "example": "BuildingA"
                          },
                          "parent_location_id": {
                            "type": "string",
                            "description": "The parent location's unique ID. For example, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1 and the `parent_location_id` of Floor 1 will be the ID of Building A. \n\nThe value of `parent_location_id` of the top-level location (`country`) is the Zoom account's ID.",
                            "example": "49D7a0xPQvGQ2DCMZgSe7w"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of location: \n* `country` \n* `states` \n* `city` \n* `campus` \n* `building` \n* `floor`",
                            "enum": [
                              "country",
                              "states",
                              "city",
                              "campus",
                              "building",
                              "floor"
                            ],
                            "example": "building"
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "At6eWnFZ1FB3arCXnRxqHLXKhbDW18yz2i2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "example": 30
                    }
                  }
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room locations listed successfully.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\n**Error Code:** `300`<br>\nLocation type not exist.<br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `4801`<br>\n Location not found:{parent_location_id}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms Location"
        ],
        "description": "A Zoom account owner or a Zoom Room administrator can establish a [location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) to help manage Zoom Rooms that are spread among a variety of locations. Use this API to list the different location types used for Zoom Rooms in an account.<br><br>\n**Prerequisites:**\n* Account owner or admin permissions.\n* Zoom Rooms Version 4.0 or higher<br><br>\n**Scopes:** `room:read:admin`<br> \n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listZRLocations",
        "summary": "List Zoom Room locations"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Location ID: Unique Identifier of the location that was added.",
                      "type": "string",
                      "example": "49D7a0xPQvGQ2DCMZgSe7w"
                    },
                    "name": {
                      "description": "Name of the location.",
                      "type": "string",
                      "example": "Floor-7"
                    },
                    "parent_location_id": {
                      "description": "Unique Identifier of the parent location.",
                      "type": "string",
                      "example": "49D7a0xPQvGQ2DCMZgSe7w"
                    },
                    "type": {
                      "description": "Type of location. The value should be one of the following:<br>\n`country`, `states`, `city`, `campus`, `building`, `floor`.",
                      "enum": [
                        "country",
                        "states",
                        "city",
                        "campus",
                        "building",
                        "floor"
                      ],
                      "type": "string",
                      "example": "country"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nLocation added successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br><br>\n**Error Code:** `300`<br>\nLocation name already exists. Try a different location name.<br>\nInvalid parent location id {parent_location_id}\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br>\nLocation not exist {parent_location_id}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms Location"
        ],
        "description": "Add a location to the [location hierarchial structure(s)](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) of Zoom Rooms in an account.\n\n**Prerequisites:**\n* Account owner or admin permissions.\n* Zoom Rooms Version 4.0 or higher<br><br>\n**Scopes:** `room:write:admin`<br> \n\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addAZRLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Name of the location. The name must be unique and shouldn't have already been used in the same account.",
                    "type": "string",
                    "example": "Floor-7"
                  },
                  "parent_location_id": {
                    "description": "The location ID of the location that is a level higher from the location that is being added.<br><br> For example, to add a City named \"City 1\" as the child location under a State named \"State 1\", you must provide the location ID of \"State 1\". This can be retrieved using the [**List Zoom Room locations**](/api-reference/zoom-api/methods#operation/listZRLocations) API.",
                    "type": "string",
                    "example": "49D7a0xPQvGQ2DCMZgSe7w"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Add a location"
      }
    },
    "/rooms/locations/structure": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "structures": {
                      "description": "Hierarchial structure array of the Zoom Rooms location.",
                      "items": {
                        "type": "string",
                        "example": "account"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZoom Rooms location structure returned successfully.<br>\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms Location"
        ],
        "description": "Get the [location hierarchial structure(s)](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) applied on the Zoom Rooms in an account.<br><br>\n**Prerequisites:**<br>\n* Zoom Rooms version 4.0 or higher\n* Account owner or admin permissions<br>\n**Scopes:** `room:read:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getZRLocationStructure",
        "summary": "Get Zoom Room location structure"
      },
      "put": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nLocation Structure updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001` This account does not exist or does not belong to this master account.<br>This account does not exist or does not belong to you."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms Location"
        ],
        "description": "Update the [location hierarchial structure(s)](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) applied on the Zoom Rooms in an account.<br><br>\n**Prerequisites:**<br>\n* Zoom Rooms version 4.0 or higher\n* Account owner or admin permissions<br>\n**Scopes:** `room:write:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "updateZoomRoomsLocationStructure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "structures": {
                    "description": "Location Structure. The value can be either one or a combination of the following strings separated by comma:\n`country`, `state`, `city`, `campus`, `building`, `floor`",
                    "items": {
                      "type": "string",
                      "example": "account"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Zoom Rooms location structure"
      }
    },
    "/rooms/locations/{locationId}": {
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the location type. This can be retrieved using the [**List Zoom Room locations**](/api-reference/zoom-api/methods#operation/listZRLocations) API (Id property in the response).",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "49D7a0xPQvGQ2DCMZgSe7w"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "basic": {
                      "properties": {
                        "address": {
                          "description": "Address",
                          "type": "string",
                          "example": "California, USA"
                        },
                        "description ": {
                          "description": "Description about the location.",
                          "type": "string",
                          "example": "California, USA"
                        },
                        "name": {
                          "description": "Name of the location type.",
                          "type": "string",
                          "example": "state"
                        },
                        "required_code_to_ext": {
                          "description": "Require code to exit out of your Zoom Rooms application to switch between other apps.\n",
                          "type": "boolean",
                          "example": true
                        },
                        "room_passcode": {
                          "description": "1-16 digit number or characters that is used to secure your Zoom Rooms application.",
                          "maxLength": 16,
                          "minLength": 1,
                          "type": "string",
                          "example": "111111"
                        },
                        "support_email": {
                          "description": "The email address to be used for reporting Zoom Room issues.\n",
                          "format": "email",
                          "type": "string",
                          "example": "contact-it@example.com"
                        },
                        "support_phone": {
                          "description": "The phone number to be used for reporting Zoom Room issues.\n",
                          "type": "string",
                          "example": "18798769876"
                        },
                        "timezone": {
                          "description": "Timezone (only returned for location type - city).",
                          "type": "string",
                          "example": "Asia/Shanghai"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZoom Rooms Location Profile returned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.<br>\n\n\n\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `4801`<br>\nLocation not found: {locationId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms Location"
        ],
        "description": "Each location type of the [Zoom Rooms location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) has a profile page that includes information such as name of the location, address, support email, etc. Use this API to retrieve information about a specific Zoom Rooms location type such as information about the city where the Zoom Rooms is located.\n\n**Prerequisite:**<br>\n* Account owner or admin permission\n* Zoom Rooms version 4.0 or higher<br>\n**Scopes:** `room:read:admin`<br> \n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "getZRLocationProfile",
        "summary": "Get Zoom Room location profile"
      },
      "patch": {
        "parameters": [
          {
            "description": "Unique Identifier of the location. This can be retrieved from the [**List Zoom Room locations**](/api-reference/zoom-api/methods#operation/listZRLocations) API.",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "49D7a0xPQvGQ2DCMZgSe7w"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms Location"
        ],
        "description": "Each location type of the [Zoom Rooms location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) has a profile page that includes information such as name of the location, address, support email, etc. Use this API to update information about a specific Zoom Rooms location type such as information about the city where the Zoom Rooms is located.\n\n**Prerequisite:**<br>\n* Account owner or admin permission\n* Zoom Rooms version 4.0 or higher<br>\n**Scopes:** `room:write:admin`<br> \n\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "updateZRLocationProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "basic": {
                    "properties": {
                      "address": {
                        "description": "Address. Can only be updated for Campus and Building.",
                        "type": "string",
                        "example": "California, USA"
                      },
                      "description ": {
                        "description": "Description about the location.",
                        "type": "string",
                        "example": "California, USA"
                      },
                      "name": {
                        "description": "Name of the location type.",
                        "type": "string",
                        "example": "state"
                      },
                      "required_code_to_ext": {
                        "description": "Require code to exit out of your Zoom Rooms application to switch between other apps.\n",
                        "type": "boolean",
                        "example": true
                      },
                      "room_passcode": {
                        "description": "1-16 digit number or characters that is used to secure your Zoom Rooms application.",
                        "maxLength": 16,
                        "minLength": 1,
                        "type": "string",
                        "example": "111111"
                      },
                      "support_email": {
                        "description": "The email address to be used for reporting Zoom Room issues.\n",
                        "format": "email",
                        "type": "string",
                        "example": "contact-it@example.com"
                      },
                      "support_phone": {
                        "description": "The phone number to be used for reporting Zoom Room issues.\n",
                        "type": "string",
                        "example": "18798769876"
                      },
                      "timezone": {
                        "description": "Timezone (can only be updated for location type - city).",
                        "type": "string",
                        "example": "Asia/Shanghai"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Zoom Room location profile"
      }
    },
    "/rooms/locations/{locationId}/location": {
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "49D7a0xPQvGQ2DCMZgSe7w"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nLocation assigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br> Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\n**Error Code:** `300`<br> Invalid parent location id {parent_location_id}"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br> Location not found:{parent_location_id}.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms Location"
        ],
        "description": "An account owner of a Zoom account can establish a [Zoom Rooms Location Hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) to better organize Zoom Rooms spread across various locations. The location can be structured in a hierarchy with Country being the top-level location, followed by city, campus, building, and floor. The location in the lower level in the hierarchy is considered as a child of the location that is a level above in the hierarchy. Use this API to change the parent location of a child location. <br><br> For instance, if the location hierarchy is structured in a way where there are two campuses (Campus 1, and Campus 2) in a City and Campus 1 consists of a building named Building 1 with a floor where Zoom Rooms are located, and you would like to rearrange the structure so that Building 1 along with its child locations (floor and Zoom Rooms) are relocated directly under Campus 2 instead of Campus 1, you must provide the location ID of Building 1 in the path parameter of this request and the location ID of Campus 2 as the value of `parent_location_id` in the  request body.<br><br>\n**Prerequisite:**<br>\n* Account owner or admin permission\n* Zoom Rooms version 4.0 or higher<br>\n**Scopes:** `room:write:admin`<br><br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "changeParentLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "parent_location_id": {
                    "description": "Location ID of the new Parent Location under which you the child location will be positioned. This can be retrieved from the [**List Zoom Room locations**](/api-reference/zoom-api/methods#operation/listZRLocations) API.",
                    "type": "string",
                    "example": "49D7a0xPQvGQ2DCMZgSe7w"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Change the assigned parent location"
      }
    },
    "/rooms/locations/{locationId}/settings": {
      "get": {
        "parameters": [
          {
            "description": "The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account.<br>\n`signage`: Digital signage settings of the Zoom Rooms Account.",
            "in": "query",
            "name": "setting_type",
            "required": true,
            "schema": {
              "default": "meeting",
              "type": "string",
              "example": "meeting"
            }
          },
          {
            "description": "Unique identifier of the location type. This can be retrieved using the [**List Zoom Room locations**](/api-reference/zoom-api/methods#operation/listZRLocations) (Id property in the response).",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "49D7a0xPQvGQ2DCMZgSe7w"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "meeting_security": {
                          "properties": {
                            "encryption_type": {
                              "description": "Specifies whether enhanced encryption or [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) is being used when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>\n`enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>\n\n`e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.",
                              "enum": [
                                "enhanced_encryption",
                                "e2ee"
                              ],
                              "type": "string",
                              "example": "e2ee"
                            },
                            "end_to_end_encrypted_meetings": {
                              "description": "Allows use of end-to-end encryption for meetings. If set to `true`, the encryption type is specified in `encryption_type` field.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "zoom_rooms": {
                          "properties": {
                            "allow_multiple_content_sharing": {
                              "description": "Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.",
                              "type": "boolean",
                              "example": true
                            },
                            "audio_device_daily_auto_test": {
                              "description": "Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_accept_incoming_call_and_fecc": {
                              "description": "Automatically accept incoming calls made from other Zoom Rooms or contacts in your account. Enabling this setting will also automatically allow far-end camera control.\n\nThis setting is returned only for location type - \"country\".",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_direct_sharing": {
                              "description": "Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_start_scheduled_meeting": {
                              "description": "Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_stop_scheduled_meeting": {
                              "description": "Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. ",
                              "type": "boolean",
                              "example": true
                            },
                            "count_attendees_number_in_room": {
                              "description": "Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.\n",
                              "type": "boolean",
                              "example": true
                            },
                            "display_feedback_survey": {
                              "description": "Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.",
                              "type": "boolean",
                              "example": true
                            },
                            "display_meeting_list": {
                              "description": " Show the same information on the TV that is shown on the controller.",
                              "type": "boolean",
                              "example": true
                            },
                            "display_top_banner": {
                              "description": "Allow to display room name, time and sharing key on the top portion of TV.",
                              "type": "boolean",
                              "example": true
                            },
                            "encrypt_shared_screen_content": {
                              "description": "Encrypt screen and content shared in meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "hide_id_for_private_meeting": {
                              "description": "If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.",
                              "type": "boolean",
                              "example": true
                            },
                            "hide_self_view": {
                              "description": "If enabled, you will not see your own video but other people in the meeting can still see your video.\n\nThis setting is returned only for location type - \"country\".",
                              "type": "boolean",
                              "example": true
                            },
                            "lock_speaker_volume_control": {
                              "description": "Lock speaker volume control on controller.\n\nThis setting is returned only for location type - \"country\".",
                              "type": "boolean",
                              "example": true
                            },
                            "send_whiteboard_to_internal_contact_only": {
                              "description": "Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.",
                              "type": "boolean",
                              "example": true
                            },
                            "show_alert_before_meeting": {
                              "description": "If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. ",
                              "type": "boolean",
                              "example": true
                            },
                            "show_call_history_in_room": {
                              "description": "Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.\n",
                              "type": "boolean",
                              "example": true
                            },
                            "show_contact_list_on_controller": {
                              "description": "If enabled, you can invite participants from the contact list during a meeting or when starting a meeting",
                              "type": "boolean",
                              "example": true
                            },
                            "show_non_video_participants": {
                              "description": "When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.",
                              "type": "boolean",
                              "example": true
                            },
                            "start_airplay_manually": {
                              "description": "Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.",
                              "type": "boolean",
                              "example": true
                            },
                            "start_airplay_mirroring": {
                              "description": "Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms",
                              "type": "boolean",
                              "example": true
                            },
                            "start_hdmi_content_share_manualy": {
                              "description": "Disable automatic detection and enable manual content sharing from a device to a Zoom Room. Learn more [here](https://support.zoom.us/hc/en-us/articles/201504265-Wired-HDMI-Screen-Share-via-Capture-Device).\n\nThis setting is returned only for location type - \"country\".",
                              "type": "boolean",
                              "example": true
                            },
                            "support_join_3rd_party_meeting": {
                              "description": "Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.",
                              "type": "boolean",
                              "example": true
                            },
                            "transform_meeting_to_private": {
                              "description": "If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display \"Your Name's Meeting\" instead of the real meeting topic.",
                              "type": "boolean",
                              "example": true
                            },
                            "upcoming_meeting_alert": {
                              "description": "If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.",
                              "type": "boolean",
                              "example": true
                            },
                            "voice_commands": {
                              "description": "Enable [voice commands](https://support.zoom.us/hc/en-us/articles/115000527983-Voice-Command-with-Zoom-Rooms) with Zoom Rooms.",
                              "type": "boolean",
                              "example": true
                            },
                            "weekly_system_restart": {
                              "description": "[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "client_alert": {
                          "description": "The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. ",
                          "properties": {
                            "detect_bluetooth_microphone_error_alert": {
                              "description": "Display an alert message when an issue is detected with a bluetooth microphone.",
                              "type": "boolean",
                              "example": true
                            },
                            "detect_bluetooth_speaker_error_alert": {
                              "description": "Display an alert message when an issue is detected with a bluetooth speaker.",
                              "type": "boolean",
                              "example": true
                            },
                            "detect_camera_error_alert": {
                              "description": "Display an alert message when an issue is detected with a camera.",
                              "type": "boolean",
                              "example": true
                            },
                            "detect_microphone_error_alert": {
                              "description": "Display an alert message when an issue is detected with microphone.",
                              "type": "boolean",
                              "example": true
                            },
                            "detect_speaker_error_alert": {
                              "description": "Display an alert message when an issue is detected with a speaker.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "digital_signage": {
                          "properties": {
                            "banner": {
                              "description": "Specifies the elements that you want to display in the top banner.",
                              "properties": {
                                "banner_room_name": {
                                  "description": "Display or hide banner room name.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "banner_sharing_key": {
                                  "description": "Display or hide banner sharing key.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "banner_time": {
                                  "description": "Display or hide time in the banner.",
                                  "type": "boolean",
                                  "example": true
                                }
                              },
                              "type": "object"
                            },
                            "display_period": {
                              "description": "Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.",
                              "properties": {
                                "start_displaying_content": {
                                  "description": "Start displaying digital signage content after certain duration after the meeting ends. The value of this field indicates the duration in minutes.",
                                  "type": "integer",
                                  "example": 1
                                },
                                "stop_displaying_content": {
                                  "description": "Stop displaying content {certain_duration} before a meeting is scheduled to begin. The value of this field indicates the duration in minutes.",
                                  "type": "integer",
                                  "example": 1
                                }
                              },
                              "type": "object"
                            },
                            "enable_digital_signage": {
                              "description": "[Indicates whether digital signage is on or off,](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>\n`true`: enable<br> `false`: disable",
                              "type": "boolean",
                              "example": true
                            },
                            "layout": {
                              "description": "Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.\n\n`standard`: Standard Center<br>\n`video_content`: Video + Content",
                              "type": "string",
                              "example": "standard"
                            },
                            "mute": {
                              "description": "Sound of all contents will be muted if the value of this field is set to `true`.",
                              "type": "boolean",
                              "example": true
                            },
                            "play_list": {
                              "description": "Content list.",
                              "items": {
                                "properties": {
                                  "action": {
                                    "description": "Specify an action for the content list. The value can be one of the following:<br>\n`add`: Add another content list.<br>\n`update`: Update existing content list.<br>\n`delete`: Delete content list.\n",
                                    "enum": [
                                      "add",
                                      "update",
                                      "delete"
                                    ],
                                    "type": "string",
                                    "example": "update"
                                  },
                                  "contents": {
                                    "items": {
                                      "description": "Content list.",
                                      "properties": {
                                        "content_id": {
                                          "description": "Content Id.",
                                          "type": "string",
                                          "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                        },
                                        "duration": {
                                          "description": "Duration for how long the content will be displayed.",
                                          "type": "integer",
                                          "example": 65
                                        },
                                        "id": {
                                          "type": "string",
                                          "example": "qMOLddnySIGGVycz8aX_JQ"
                                        },
                                        "name": {
                                          "description": "Name of the content.",
                                          "type": "string",
                                          "example": "content name"
                                        },
                                        "order": {
                                          "description": "Order of the content in the display.",
                                          "type": "integer",
                                          "example": 1
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "maxItems": 3,
                                    "type": "array"
                                  },
                                  "end_time": {
                                    "description": "Specify the display end time for the content list in GMT.",
                                    "type": "string",
                                    "example": "2021-03-18T05:41:36Z"
                                  },
                                  "id": {
                                    "description": "Unique identifier of the content list. This field is only required if you would like to remove or update the content list.",
                                    "type": "string",
                                    "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                  },
                                  "name": {
                                    "description": "Name of the content list.",
                                    "type": "string",
                                    "example": "content name"
                                  },
                                  "start_time": {
                                    "description": "Specify the display start time for the content list in GMT.",
                                    "type": "string",
                                    "example": "2021-03-18T05:41:36Z"
                                  }
                                },
                                "type": "object"
                              },
                              "maxItems": 2,
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "notification": {
                          "description": "[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. ",
                          "properties": {
                            "audio_meet_usability_threshold": {
                              "description": "Send an alert when the audio echo test result meets usability threshold.",
                              "type": "boolean",
                              "example": true
                            },
                            "audio_not_meet_usability_threshold": {
                              "description": "Send an alert when the audio echo test result does not meet usability threshold.",
                              "type": "boolean",
                              "example": true
                            },
                            "battery_is_charging": {
                              "description": "Send an alert when the battery starts charging.",
                              "type": "boolean",
                              "example": true
                            },
                            "battery_low_and_not_charging": {
                              "description": "Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.",
                              "type": "boolean",
                              "example": true
                            },
                            "battery_percentage": {
                              "description": "Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.",
                              "type": "string",
                              "example": "90"
                            },
                            "controller_scheduling_disconnected": {
                              "description": "Send an alert when the connection to the Controller or Scheduling Display cannot be detected.",
                              "type": "boolean",
                              "example": true
                            },
                            "controller_scheduling_reconnected": {
                              "description": "Send an alert when the Controller or Scheduling Display can be detected again.",
                              "type": "boolean",
                              "example": true
                            },
                            "cpu_usage_high_detected": {
                              "description": "Send an alert when CPU usage is above 90%.",
                              "type": "boolean",
                              "example": true
                            },
                            "mic_speaker_camera_disconnected": {
                              "description": "Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.",
                              "type": "boolean",
                              "example": true
                            },
                            "mic_speaker_camera_reconnected": {
                              "description": "Send an alert when the mic, speaker or camera is reconnected.",
                              "type": "boolean",
                              "example": true
                            },
                            "network_unstable_detected": {
                              "description": "Send an alert when low bandwidth network is detected",
                              "type": "boolean",
                              "example": true
                            },
                            "sip_registration_failed": {
                              "description": "Send an alert when SIP registration stops working. ",
                              "type": "boolean",
                              "example": true
                            },
                            "sip_registration_re_enabled": {
                              "description": "Send an alert after the SIP registration is re-enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "zoom_room_come_back_online": {
                              "description": "Send an alert when the Zoom Room is online after previously being offline.",
                              "type": "boolean",
                              "example": true
                            },
                            "zoom_room_display_disconnected": {
                              "description": "Send an alert when the TV display is disconnected",
                              "type": "boolean",
                              "example": true
                            },
                            "zoom_room_offline": {
                              "description": "Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room location settings returned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess Restricted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `4801`<br>\nLocation not found: {locationId}\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms Location"
        ],
        "description": "Get information on meeting or alert settings applied to Zoom Rooms located in a specific location. By default, only **Meeting Settings** are returned. To view only **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter.<br><br>\n**Prerequisites:**<br>\n* Zoom Room licenses\n* Owner or Admin privileges on the Zoom Account.<br>\n**Scopes:** `room:read:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "getZRLocationSettings",
        "summary": "Get location settings"
      },
      "patch": {
        "parameters": [
          {
            "description": "The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account.<br>\n`signage`: Digital signage settings.",
            "in": "query",
            "name": "setting_type",
            "required": true,
            "schema": {
              "default": "meeting",
              "type": "string",
              "example": "meeting"
            }
          },
          {
            "description": "Unique identifier of the location type. This can be retrieved using the [**List Zoom Room locations**](/api-reference/zoom-api/methods#operation/listZRLocations) (Id property in the response).",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "49D7a0xPQvGQ2DCMZgSe7w"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nLocation settings updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br>\nLocation not found: {locationId}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms Location"
        ],
        "description": "Update information on either meeting or alert settings applied to Zoom Rooms located in a specific location. To update **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter. Similarly, to update **Meeting Settings**, specify `meeting` as the value of the `setting_type` query parameter.<br><br>\n**Prerequisites:**<br>\n* Zoom Room licenses\n* Owner or Admin privileges on the Zoom Account.<br>\n**Scopes:** `room:write:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "updateZRLocationSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "properties": {
                      "meeting_security": {
                        "properties": {
                          "encryption_type": {
                            "description": "Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>\n`enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>\n\n`e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.",
                            "enum": [
                              "enhanced_encryption",
                              "e2ee"
                            ],
                            "type": "string",
                            "example": "e2ee"
                          },
                          "end_to_end_encrypted_meetings": {
                            "description": "Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "zoom_rooms": {
                        "properties": {
                          "allow_multiple_content_sharing": {
                            "description": "Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.",
                            "type": "boolean",
                            "example": true
                          },
                          "audio_device_daily_auto_test": {
                            "description": "Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_accept_incoming_call_and_fecc": {
                            "description": "Automatically accept incoming calls made from other Zoom Rooms or contacts in your account. Enabling this setting will also automatically allow far-end camera control.\n\nThis setting is returned only for location type - \"country\".",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_direct_sharing": {
                            "description": "Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_start_scheduled_meeting": {
                            "description": "Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_stop_scheduled_meeting": {
                            "description": "Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. ",
                            "type": "boolean",
                            "example": true
                          },
                          "count_attendees_number_in_room": {
                            "description": "Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.\n",
                            "type": "boolean",
                            "example": true
                          },
                          "display_feedback_survey": {
                            "description": "Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.",
                            "type": "boolean",
                            "example": true
                          },
                          "display_meeting_list": {
                            "description": " Show the same information on the TV that is shown on the controller.",
                            "type": "boolean",
                            "example": true
                          },
                          "display_top_banner": {
                            "description": "Allow to display room name, time and sharing key on the top portion of TV.",
                            "type": "boolean",
                            "example": true
                          },
                          "encrypt_shared_screen_content": {
                            "description": "Encrypt screen and content shared in meetings.",
                            "type": "boolean",
                            "example": true
                          },
                          "hide_id_for_private_meeting": {
                            "description": "If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.",
                            "type": "boolean",
                            "example": true
                          },
                          "hide_self_view": {
                            "description": "If enabled, you will not see your own video but other people in the meeting can still see your video.\n\nThis setting is returned only for location type - \"country\".",
                            "type": "boolean",
                            "example": true
                          },
                          "lock_speaker_volume_control": {
                            "description": "Lock speaker volume control on controller.\n\nThis setting is returned only for location type - \"country\".",
                            "type": "boolean",
                            "example": true
                          },
                          "send_whiteboard_to_internal_contact_only": {
                            "description": "Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.",
                            "type": "boolean",
                            "example": true
                          },
                          "show_alert_before_meeting": {
                            "description": "If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. ",
                            "type": "boolean",
                            "example": true
                          },
                          "show_call_history_in_room": {
                            "description": "Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.\n",
                            "type": "boolean",
                            "example": true
                          },
                          "show_contact_list_on_controller": {
                            "description": "If enabled, you can invite participants from the contact list during a meeting or when starting a meeting",
                            "type": "boolean",
                            "example": true
                          },
                          "show_non_video_participants": {
                            "description": "When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.",
                            "type": "boolean",
                            "example": true
                          },
                          "start_airplay_manually": {
                            "description": "Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.",
                            "type": "boolean",
                            "example": true
                          },
                          "start_airplay_mirroring": {
                            "description": "Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms",
                            "type": "boolean",
                            "example": true
                          },
                          "start_hdmi_content_share_manualy": {
                            "description": "Disable automatic detection and enable manual content sharing from a device to a Zoom Room. Learn more [here](https://support.zoom.us/hc/en-us/articles/201504265-Wired-HDMI-Screen-Share-via-Capture-Device).\n\nThis setting is returned only for location type - \"country\".",
                            "type": "boolean",
                            "example": true
                          },
                          "support_join_3rd_party_meeting": {
                            "description": "Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.",
                            "type": "boolean",
                            "example": true
                          },
                          "transform_meeting_to_private": {
                            "description": "If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display \"Your Name's Meeting\" instead of the real meeting topic.",
                            "type": "boolean",
                            "example": true
                          },
                          "upcoming_meeting_alert": {
                            "description": "If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.",
                            "type": "boolean",
                            "example": true
                          },
                          "voice_commands": {
                            "description": "Enable [voice commands](https://support.zoom.us/hc/en-us/articles/115000527983-Voice-Command-with-Zoom-Rooms) with Zoom Rooms.",
                            "type": "boolean",
                            "example": true
                          },
                          "weekly_system_restart": {
                            "description": "[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "client_alert": {
                        "description": "The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. ",
                        "properties": {
                          "detect_bluetooth_microphone_error_alert": {
                            "description": "Display an alert message when an issue is detected with a bluetooth microphone.",
                            "type": "boolean",
                            "example": true
                          },
                          "detect_bluetooth_speaker_error_alert": {
                            "description": "Display an alert message when an issue is detected with a bluetooth speaker.",
                            "type": "boolean",
                            "example": true
                          },
                          "detect_camera_error_alert": {
                            "description": "Display an alert message when an issue is detected with a camera.",
                            "type": "boolean",
                            "example": true
                          },
                          "detect_microphone_error_alert": {
                            "description": "Display an alert message when an issue is detected with microphone.",
                            "type": "boolean",
                            "example": true
                          },
                          "detect_speaker_error_alert": {
                            "description": "Display an alert message when an issue is detected with a speaker.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "digital_signage": {
                        "properties": {
                          "banner": {
                            "properties": {
                              "banner_room_name": {
                                "type": "boolean",
                                "example": true
                              },
                              "banner_sharing_key": {
                                "type": "boolean",
                                "example": true
                              },
                              "banner_time": {
                                "type": "boolean",
                                "example": true
                              }
                            },
                            "type": "object"
                          },
                          "display_period": {
                            "description": "Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.",
                            "properties": {
                              "start_displaying_content": {
                                "description": "Start displaying digital signage content after certain duration after the meeting ends. Specify the value of the duration in minutes in this field.",
                                "type": "integer",
                                "example": 1
                              },
                              "stop_displaying_content": {
                                "description": "Stop displaying content {certain_duration} before a meeting is scheduled to begin. Specify the value of duration in minutes in this field.",
                                "type": "integer",
                                "example": 1
                              }
                            },
                            "type": "object"
                          },
                          "enable_digital_signage": {
                            "description": "[Enable or disable digital signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>\n`true`: enable<br> `false`: disable",
                            "type": "boolean",
                            "example": true
                          },
                          "layout": {
                            "description": "Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.\n\n`standard`: Standard Center<br>\n`video_content`: Video + Content",
                            "type": "string",
                            "example": "standard"
                          },
                          "mute": {
                            "description": "Sound of all contents will be muted if the value of this field is set to `true`.",
                            "type": "boolean",
                            "example": true
                          },
                          "play_list": {
                            "description": "Content list.",
                            "items": {
                              "properties": {
                                "action": {
                                  "description": "Specify an action for the content list. The value can be one of the following:<br>\n`add`: Add another content list.<br>\n`update`: Update existing content list.<br>\n`delete`: Delete content list.\n",
                                  "enum": [
                                    "add",
                                    "update",
                                    "delete"
                                  ],
                                  "type": "string",
                                  "example": "update"
                                },
                                "contents": {
                                  "items": {
                                    "description": "Content list.",
                                    "properties": {
                                      "action": {
                                        "description": "Specify an action for the content in the content list. The value can be one of the following:<br>\n`add`: Add another content to the content list.<br>\n`update`: Update existing content's information in the content list.<br>\n`delete`: Delete content from the content list.\n\n",
                                        "type": "string",
                                        "example": "update"
                                      },
                                      "content_id": {
                                        "description": "Content Id.",
                                        "type": "string",
                                        "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                      },
                                      "duration": {
                                        "description": "By default each content is display for 5 seconds. Using this field, specify how long you would like to display the content.",
                                        "type": "integer",
                                        "example": 65
                                      },
                                      "id": {
                                        "description": "Unique identifier of the content. This field is only required if you would like to remove or update the content information.",
                                        "type": "string",
                                        "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                      },
                                      "name": {
                                        "description": "Name of the content.",
                                        "type": "string",
                                        "example": "content name"
                                      },
                                      "order": {
                                        "description": "Order of the content in the display.",
                                        "type": "integer",
                                        "example": 1
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "maxItems": 3,
                                  "type": "array"
                                },
                                "end_time": {
                                  "description": "Specify the display end time for the content list in GMT.",
                                  "type": "string",
                                  "example": "2021-03-18T05:41:36Z"
                                },
                                "id": {
                                  "description": "Unique identifier of the content list. This field is only required if you would like to remove or update the content list.",
                                  "type": "string",
                                  "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                },
                                "name": {
                                  "description": "Name of the content list.",
                                  "type": "string",
                                  "example": "content list"
                                },
                                "start_time": {
                                  "description": "Specify the display start time for the content list in GMT.",
                                  "type": "string",
                                  "example": "2021-03-18T05:41:36Z"
                                }
                              },
                              "type": "object"
                            },
                            "maxItems": 2,
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "notification": {
                        "description": "[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. ",
                        "properties": {
                          "audio_meet_usability_threshold": {
                            "description": "Send an alert when the audio echo test result meets usability threshold.",
                            "type": "boolean",
                            "example": true
                          },
                          "audio_not_meet_usability_threshold": {
                            "description": "Send an alert when the audio echo test result does not meet usability threshold.",
                            "type": "boolean",
                            "example": true
                          },
                          "battery_is_charging": {
                            "description": "Send an alert when the battery starts charging.",
                            "type": "boolean",
                            "example": true
                          },
                          "battery_low_and_not_charging": {
                            "description": "Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.",
                            "type": "boolean",
                            "example": true
                          },
                          "battery_percentage": {
                            "description": "Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.",
                            "type": "string",
                            "example": "90"
                          },
                          "controller_scheduling_disconnected": {
                            "description": "Send an alert when the connection to the Controller or Scheduling Display cannot be detected.",
                            "type": "boolean",
                            "example": true
                          },
                          "controller_scheduling_reconnected": {
                            "description": "Send an alert when the Controller or Scheduling Display can be detected again.",
                            "type": "boolean",
                            "example": true
                          },
                          "cpu_usage_high_detected": {
                            "description": "Send an alert when CPU usage is above 90%.",
                            "type": "boolean",
                            "example": true
                          },
                          "mic_speaker_camera_disconnected": {
                            "description": "Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.",
                            "type": "boolean",
                            "example": true
                          },
                          "mic_speaker_camera_reconnected": {
                            "description": "Send an alert when the mic, speaker or camera is reconnected.",
                            "type": "boolean",
                            "example": true
                          },
                          "network_unstable_detected": {
                            "description": "Send an alert when low bandwidth network is detected",
                            "type": "boolean",
                            "example": true
                          },
                          "sip_registration_failed": {
                            "description": "Send an alert when SIP registration stops working. ",
                            "type": "boolean",
                            "example": true
                          },
                          "sip_registration_re_enabled": {
                            "description": "Send an alert after the SIP registration is re-enabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "zoom_room_come_back_online": {
                            "description": "Send an alert when the Zoom Room is online after previously being offline.",
                            "type": "boolean",
                            "example": true
                          },
                          "zoom_room_display_disconnected": {
                            "description": "Send an alert when the TV display is disconnected",
                            "type": "boolean",
                            "example": true
                          },
                          "zoom_room_offline": {
                            "description": "Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update location settings"
      }
    },
    "/rooms/{id}/events": {
      "patch": {
        "parameters": [
          {
            "description": "Room ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "qMOLddnySIGGVycz8aX_JQ"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "**HTTP Status Code:** `202` **Accepted**<br>\nRequest processed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\n* Zoom Room is offline. Please ensure that the Zoom Room is online before checking in or checking out.\n* Invalid parameters.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1012` <br>\nRoom does not exist: {roomId}.\n\n\n"
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "The Zoom Rooms check-in feature helps maximize your room utilization. Use this API to either **check in** and confirm that you are utilizing the room reservation or to **check out** of the room so that the room gets released from the scheduled meeting and will be made available for others to use. Learn more from the [Using the Zoom Rooms check-in feature](https://support.zoom.us/hc/en-us/articles/360001147163-Using-the-Zoom-Rooms-check-in-feature) guide. \n\n**Prerequisites:**\n* [Zoom Rooms](https://support.zoom.us/hc/en-us/articles/207483343-Getting-started-with-Zoom-Rooms#:~:text=Zoom%20Rooms%20is%20a%20software,or%20from%20their%20mobile%20device) must have been set up for use for the account and must be online. \n* You must have access to the Calendar Integration APIs (either Microsoft Exchange or Google Calendar APIs) to get calendar information associated with the Room.\n\n**Scope:** `room:write:admin`",
        "operationId": "checkInRooms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "method": {
                    "description": "The value of this field can be one of the following:<br>\n* zoomroom.check_in\n* zoomroom.check_out",
                    "type": "string",
                    "example": "zoomroom.check_in"
                  },
                  "params": {
                    "properties": {
                      "calendar_id": {
                        "description": "This field is only required if Google Calendar is being used for the event associated with the Zoom Room. The value for this field can be retrieved by calling Google's [CalendarList:list API](https://developers.google.com/calendar/v3/reference/events/list) and referring to the \"id\" field included in the [calendarList resource](https://developers.google.com/calendar/v3/reference/calendarList#resource).\n\n ",
                        "type": "string",
                        "example": "mycalendar@example.com"
                      },
                      "change_key": {
                        "description": "This field is required only for Microsoft Exchange or Office 365  calendar. The change key represents the specific version of the calendar item and can be retrieved by using Microsoft's [FindItem Operation](https://docs.microsoft.com/en-us/exchange/client-developer/web-service-reference/finditem-operation) and referring to the ChangeKey field of the ItemId Element included in the operation response.<br>",
                        "type": "string",
                        "example": "test_change_key"
                      },
                      "event_id": {
                        "description": "Unique Identifier of the calendar event associated with the Zoom Room.<br><br>If the calendar integration being used is Microsoft Exchange, the value for this field can be retrieved by using Microsoft's [FindItem Operation](https://docs.microsoft.com/en-us/exchange/client-developer/web-service-reference/finditem-operation) and referring to the Id field of the ItemId Element included in the operation response.<br><br>If the Google calendar integration was used for this event, the event_id can be retrieved by calling Google's [Events:list API](https://developers.google.com/calendar/v3/reference/events/list) and referring to the \"id\" field included in the [events resource](https://developers.google.com/calendar/v3/reference/events#resource).\n\n",
                        "type": "string",
                        "example": "ebrg2b87a6uu9c678qhvsiahsc"
                      },
                      "resource_email": {
                        "description": "This field is only required for Microsoft Exchange / Office 365 Calendar. It is the [resource mailbox](https://support.microsoft.com/en-us/help/10063/creating-and-managing-resource-mailboxes-in-office-365) associated with the calendar.",
                        "format": "email",
                        "type": "string",
                        "example": "zroom1@example.com"
                      }
                    },
                    "required": [
                      "event_id"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Check-in or check-out of a Zoom Room"
      }
    },
    "/rooms/{roomId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique Identifier of a Zoom Room.",
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "qMOLddnySIGGVycz8aX_JQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content** <br>\nZoom Room deleted successfully.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.<br>\n\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found** <br><br>\n**Error Code:** `1012`<br>\nRoom not found:{roomId}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms"
        ],
        "description": "[Remove](https://support.zoom.us/hc/en-us/articles/360033432032-Zoom-Room-Device-Profiles#h_e55b2092-c418-4b02-819f-44de51448900) a specific Zoom Room profile from a Zoom account.<br><br>\n**Prerequisites:**<br>\n* Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>\n**Scopes**: `room:write:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteAZoomRoom",
        "summary": "Delete a Zoom Room"
      },
      "get": {
        "parameters": [
          {
            "description": "Unique Identifier of the Zoom Room. This can be retrieved from the response of the [**List Zoom Rooms**](/api-reference/zoom-api/methods#operation/listZoomRooms) API.",
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "qMOLddnySIGGVycz8aX_JQ"
            }
          },
          {
            "description": "Whether to regenerate an activation code for a Zoom Room. This value defaults to `false`.",
            "in": "query",
            "name": "regenerate_activation_code",
            "required": false,
            "schema": {
              "default": "false",
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "basic": {
                      "properties": {
                        "activation_code": {
                          "description": "Activation Code is the code that is used to complete the setup of the Zoom Room.",
                          "type": "string",
                          "example": "1315-2376-2198-7926"
                        },
                        "hide_room_in_contacts": {
                          "description": "Hide this Zoom Room from your Contact List. ",
                          "type": "boolean",
                          "example": true
                        },
                        "name": {
                          "description": "Name of the Zoom Room.",
                          "type": "string",
                          "example": "My Room"
                        },
                        "required_code_to_ext": {
                          "description": "Require code to exit out of Zoom Rooms application to switch between other apps.\n",
                          "type": "boolean",
                          "example": true
                        },
                        "room_passcode": {
                          "description": "1-16 digit number or characters that is used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or sign out.",
                          "maxLength": 16,
                          "minLength": 1,
                          "type": "string",
                          "example": "111111"
                        },
                        "support_email": {
                          "description": "The email address to be used for reporting Zoom Room issues.",
                          "format": "email",
                          "type": "string",
                          "example": "contact-it@example.com"
                        },
                        "support_phone": {
                          "description": "The phone number to be used for reporting Zoom Room issues.\n",
                          "type": "string",
                          "example": "18798769876"
                        }
                      },
                      "type": "object"
                    },
                    "device": {
                      "description": "Information about the device.",
                      "properties": {
                        "device_profile_id": {
                          "description": "The device's profile ID.",
                          "example": "J352JVkNRpyAgUaurxmrsh",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room profile returned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\n* Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.\n* Access restricted.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `1012`<br>\nRoom not found:{roomId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms"
        ],
        "description": "\nZoom Rooms is a software-based room system that provides an integrated experience for audio conferencing, wireless screen sharing and video conferencing. Use this API to get detailed information on a specific Zoom Room in a Zoom account.\n\n**Prerequisites:**<br>\n* Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>\n**Scopes**: `room:read:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "getZRProfile",
        "summary": "Get Zoom Room profile"
      },
      "patch": {
        "parameters": [
          {
            "description": "Unique Identifier of a Zoom Room.",
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "qMOLddnySIGGVycz8aX_JQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nRoom Profile information updated successfully.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.<br><br>\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nNot Found \n\n**Error Code:** `1012` <br>\nZoom Room not found: {roomId} \n\n**Error Code:** `8005` <br>\nZoom Room device profile does not exist: {roomId}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Update basic information on a specific Zoom Room in a Zoom account.<br>\n\n**Prerequisites:**<br>\n* Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>\n**Scopes**: `room:write:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "updateRoomProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "basic": {
                    "properties": {
                      "hide_room_in_contacts": {
                        "description": "Hide this Zoom Room from your Contact List. ",
                        "type": "boolean",
                        "example": true
                      },
                      "name": {
                        "description": "Name of the Zoom Room.",
                        "type": "string",
                        "example": "My Room"
                      },
                      "required_code_to_ext": {
                        "description": "Require code to exit out of Zoom Rooms application to switch between other apps.\n",
                        "type": "boolean",
                        "example": true
                      },
                      "room_passcode": {
                        "description": "1-16 digit number or characters that is used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or sign out.",
                        "maxLength": 16,
                        "minLength": 1,
                        "type": "string",
                        "example": "111111"
                      },
                      "support_email": {
                        "description": "The email address to be used for reporting Zoom Room issues.",
                        "format": "email",
                        "type": "string",
                        "example": "contact-it@example.com"
                      },
                      "support_phone": {
                        "description": "The phone number to be used for reporting Zoom Room issues.\n",
                        "type": "string",
                        "example": "18798769876"
                      }
                    },
                    "type": "object"
                  },
                  "device": {
                    "description": "Information about the device.",
                    "properties": {
                      "device_profile_id": {
                        "description": "The device's profile ID.",
                        "example": "J352JVkNRpyAgUaurxmrsh",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update a Zoom Room profile"
      }
    },
    "/rooms/{roomId}/device_profiles": {
      "get": {
        "parameters": [
          {
            "description": "The Zoom Room's ID.",
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "qMOLddnySIGGVycz8aX_JQ"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/paths/~1rooms~1%7BroomId%7D~1device_profiles~1%7BdeviceProfileId%7D/get/responses/200/content/application~1json/schema"
                  },
                  "type": "array"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\n Device profiles returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` \n* Zoom Room subscription not found. Purchase a Zoom Room subscription and try again. <br>\n* Access restricted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1012` <br>\n Zoom Room ID does not exist: {roomId}"
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to return a list of Zoom Room device profiles. \n\n **Scopes:** `room:read:admin` \n\n **Prerequisites:** \n* A Pro or a higher account with Zoom Rooms.",
        "operationId": "getRoomProfiles",
        "summary": "List device profiles"
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/paths/~1rooms~1%7BroomId%7D~1device_profiles/get/parameters/0"
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` <br>\n Device profile successfully created."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` \n* Zoom Room subscription not found. Purchase a Zoom Room subscription and try again. <br>\n* Access restricted. \n\n **Error Code:** `300` <br>\n Unable to create device profile because there is no microphone/speaker/camera available in the following Zoom Room: {roomId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1012` <br>\n Room does not exist: {roomId}"
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to create a Zoom Room device profile. \n\n **Scopes:** `room:write:admin` \n\n **Prerequisites:** \n* A Pro or a higher account with Zoom Rooms.",
        "operationId": "createRoomDeviceProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Information about the Zoom Room device profile.",
                "properties": {
                  "audio_processing": {
                    "type": "boolean",
                    "description": "Whether to enable audio processing.",
                    "example": false
                  },
                  "auto_adjust_mic_level": {
                    "type": "boolean",
                    "description": "Whether to enable microphone level auto adjust.",
                    "example": true
                  },
                  "camera_id": {
                    "type": "string",
                    "description": "The camera's device ID.",
                    "example": "usb#vid_0bda&pid_58fd&mi_00#6&1e7cbc97&0&0000#{65e8773d-8f56-11d0-a3b9-00a0c9223196}global"
                  },
                  "echo_cancellation": {
                    "type": "boolean",
                    "description": "Whether to enable echo cancellation.",
                    "example": true
                  },
                  "microphone_id": {
                    "type": "string",
                    "description": "The microphone's device ID.",
                    "example": "{0.0.2.00000000}.{eff76572-ac52-4c79-bd30-67f968bjb15f}"
                  },
                  "name": {
                    "type": "string",
                    "description": "The device profile's name.",
                    "example": "ZR1 Device"
                  },
                  "noise_suppression": {
                    "type": "string",
                    "description": "The noise suppression setting: \n* `moderate` — Moderate noise suppression. \n* `aggressive` — Aggressive noise suppression. \n* `none` — Noise suppression disabled.",
                    "enum": [
                      "moderate",
                      "aggressive",
                      "none"
                    ],
                    "example": "none"
                  },
                  "speaker_id": {
                    "type": "string",
                    "description": "The speaker's device ID.",
                    "example": "{0.0.0.00000000}.{4f9b30cb-872e-49ed-a1b9-a7ec352bf3e6}"
                  }
                }
              }
            }
          },
          "required": true
        },
        "summary": "Create a device profile"
      }
    },
    "/rooms/{roomId}/device_profiles/devices": {
      "get": {
        "parameters": [
          {
            "$ref": "#/paths/~1rooms~1%7BroomId%7D~1device_profiles/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "cameras": {
                      "description": "Information about the Zoom Room device's cameras.",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The camera's device ID.",
                            "example": "usb#vid_0bda&pid_58fd&mi_00#6&1e7cbc97&0&0000#{65e8773d-8f56-11d0-a3b9-00a0c9223196}global",
                            "type": "string"
                          },
                          "name": {
                            "description": "The camera's device name.",
                            "example": "Integrated Webcam",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "microphones": {
                      "description": "Information about the Zoom Room device's microphone.",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The microphone's device ID.",
                            "example": "{0.0.1.00000000}.{eff76542-ac52-4c78-bd90-67f968bab16f}",
                            "type": "string"
                          },
                          "name": {
                            "description": "The microphone's device name.",
                            "example": "Realtek(R) Audio",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "speakers": {
                      "description": "Information about the Zoom Room device's speakers.",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The speaker's device ID.",
                            "example": "{0.0.0.00000000}.{4f9b30cb-872e-49ed-a1b9-a7ec352bf3e6}",
                            "type": "string"
                          },
                          "name": {
                            "description": "The speaker's device name.",
                            "example": "Realtek(R) Audio",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\n Device information returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` \n* Zoom Room subscription not found. Purchase a Zoom Room subscription and try again. <br>\n* Access restricted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1012` <br>\n Zoom Room ID does not exist: {roomId}"
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to return information about a Zoom Room device. \n\n **Scopes:** `room:read:admin` \n\n **Prerequisites:** \n* A Pro or a higher account with Zoom Rooms.",
        "operationId": "getRoomDevices",
        "summary": "Get device information"
      }
    },
    "/rooms/{roomId}/device_profiles/{deviceProfileId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/paths/~1rooms~1%7BroomId%7D~1device_profiles/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1rooms~1%7BroomId%7D~1device_profiles~1%7BdeviceProfileId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\n Device profile deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` \n* Zoom Room subscription not found. Purchase a Zoom Room subscription and try again. <br>\n* Access restricted. \n\n **Error Code:** `300` <br>\n You cannot delete this device profile."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1012` <br>\n Room does not exist: {roomId}"
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to delete a Zoom Room device profile. \n\n **Scopes:** `room:write:admin` \n\n **Prerequisites:** \n* A Pro or a higher account with Zoom Rooms.",
        "operationId": "deleteRoomProfile",
        "summary": "Delete a device profile"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/paths/~1rooms~1%7BroomId%7D~1device_profiles/get/parameters/0"
          },
          {
            "description": "The Zoom Room device profile's ID.",
            "in": "path",
            "name": "deviceProfileId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "wPYhqpOYTsiWV0Ls0_xZRg"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Information about the Zoom Room's device profile.",
                  "properties": {
                    "audio_processing": {
                      "description": "Whether audio processing is enabled.",
                      "example": false,
                      "type": "boolean"
                    },
                    "auto_adjust_mic_level": {
                      "description": "Whether microphone level auto adjust is enabled.",
                      "example": true,
                      "type": "boolean"
                    },
                    "camera_id": {
                      "description": "The camera's device ID.",
                      "example": "usb#vid_0bda&pid_58fd&mi_00#6&1e7cbc97&0&0000#{65e8773d-8f56-11d0-a3b9-00a0c9223196}global",
                      "type": "string"
                    },
                    "echo_cancellation": {
                      "description": "Whether echo cancellation is enabled.",
                      "example": true,
                      "type": "boolean"
                    },
                    "id": {
                      "description": "The device's profile ID.",
                      "example": "Gz_fNcaSPByng-3vsqv_iQ",
                      "type": "string"
                    },
                    "microphone_id": {
                      "description": "The microphone's device ID.",
                      "example": "{0.0.2.00000000}.{eff76572-ac52-4c79-bd30-67f968bjb15f}",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The device profile's name.",
                      "example": "ZR1 Device"
                    },
                    "noise_suppression": {
                      "description": "The noise suppression setting: \n* `moderate` — Moderate noise suppression. \n* `aggressive` — Aggressive noise suppression. \n* `none` — Noise suppression disabled.",
                      "enum": [
                        "moderate",
                        "aggressive",
                        "none"
                      ],
                      "example": "aggressive",
                      "type": "string"
                    },
                    "speaker_id": {
                      "description": "The speaker's device ID.",
                      "example": "{0.0.0.00000000}.{4f9b30cb-872e-49ed-a1b9-a7ec352bf3e6}",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\n Device profile returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` \n* Zoom Room subscription not found. Purchase a Zoom Room subscription and try again. <br>\n* Access restricted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1012` <br>\n Room does not exist: {roomId} \n\n **Error Code:** `8005` <br>\n Zoom Room device profile does not exist: {roomId}"
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to return a Zoom Room device profile. \n\n **Scopes:** `room:read:admin` \n\n **Prerequisites:** \n* A Pro or a higher account with Zoom Rooms.",
        "operationId": "getRoomProfile",
        "summary": "Get a device profile"
      },
      "patch": {
        "summary": "Update a device profile",
        "description": "Use this API to update a Zoom Room device profile. \n\n **Scopes:** `room:write:admin` \n\n **Prerequisites:** \n* A Pro or a higher account with Zoom Rooms.",
        "operationId": "updateDeviceProfile",
        "tags": [
          "Zoom Rooms"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1rooms~1%7BroomId%7D~1device_profiles/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1rooms~1%7BroomId%7D~1device_profiles~1%7BdeviceProfileId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Information about the Zoom Room device profile.",
                "properties": {
                  "audio_processing": {
                    "type": "boolean",
                    "description": "Whether to enable audio processing.",
                    "example": false
                  },
                  "auto_adjust_mic_level": {
                    "type": "boolean",
                    "description": "Whether to enable microphone level auto adjust.",
                    "example": true
                  },
                  "camera_id": {
                    "type": "string",
                    "description": "The camera's device ID.",
                    "example": "usb#vid_0bda&pid_58fd&mi_00#6&1e7cbc97&0&0000#{65e8773d-8f56-11d0-a3b9-00a0c9223196}global"
                  },
                  "echo_cancellation": {
                    "type": "boolean",
                    "description": "Whether to enable echo cancellation.",
                    "example": true
                  },
                  "microphone_id": {
                    "type": "string",
                    "description": "The microphone's device ID.",
                    "example": "{0.0.2.00000000}.{eff76572-ac52-4c79-bd30-67f968bjb15f}"
                  },
                  "noise_suppression": {
                    "type": "string",
                    "description": "The noise suppression setting: \n* `moderate` — Moderate noise suppression. \n* `aggressive` — Aggressive noise suppression. \n* `none` — Noise suppression disabled.",
                    "enum": [
                      "moderate",
                      "aggressive",
                      "none"
                    ],
                    "example": "none"
                  },
                  "speaker_id": {
                    "type": "string",
                    "description": "The speaker's device ID.",
                    "example": "{0.0.0.00000000}.{4f9b30cb-872e-49ed-a1b9-a7ec352bf3e6}"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\n Device profile updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` \n* Zoom Room subscription not found. Purchase a Zoom Room subscription and try again. <br>\n* Access restricted. \n\n **Error Code:** `300` <br>\n You cannot change this device profile."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1012` <br>\nRoom does not exist: {roomId}.\n**Error Code:** `8005` <br>\nRoom device profile does not exist: {roomId}.\n\n\n"
          }
        }
      }
    },
    "/rooms/{roomId}/devices": {
      "get": {
        "parameters": [
          {
            "description": "Unique Identifier of the Zoom Room. This can be retrieved from the response of [**List Zoom Rooms**](/api-reference/zoom-api/methods#operation/listZoomRooms) API.",
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "qMOLddnySIGGVycz8aX_JQ"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "devices": {
                      "items": {
                        "properties": {
                          "app_version": {
                            "description": "App version of Zoom Rooms.",
                            "type": "string",
                            "example": "5.9.1 (2581)"
                          },
                          "device_system": {
                            "description": "Operating system of the device.",
                            "type": "string",
                            "example": "Win10 Build 19043.1266"
                          },
                          "device_type": {
                            "description": "Type of the device. The value of this field can be one of the following:<br>`Zoom Rooms Computer`,<br> `Controller`, `Scheduling Display`, `Zoom Rooms Control System`, `Companion Whiteboard`",
                            "enum": [
                              "Zoom Rooms Computer",
                              "Controller",
                              "Scheduling Display",
                              "Zoom Rooms Control System",
                              "Companion Whiteboard"
                            ],
                            "type": "string",
                            "example": "Controller"
                          },
                          "id": {
                            "description": "Unique identifier of the device.",
                            "type": "string",
                            "example": "{0.0.1.00000000}.{eff76542-ac52-4c78-bd90-67f968bab16f}"
                          },
                          "room_name": {
                            "description": "Name of the Zoom Room.",
                            "type": "string",
                            "example": "My Room"
                          },
                          "status": {
                            "description": "Status of the device. The value can be either `Online` or `Offline`.",
                            "enum": [
                              "Online",
                              "Offline"
                            ],
                            "type": "string",
                            "example": "Online"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\nDevices listed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms"
        ],
        "description": "List information about the devices that are being used for a specific [Zoom Room](https://support.zoom.us/hc/en-us/articles/207483343-Getting-Started-with-Zoom-Rooms) in an account.\n\n**Prerequisites:**<br>\n* Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>\n* Account owner or admin permissions.\n**Scopes**: `room:read:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listZRDevices",
        "summary": "List Zoom Room devices"
      }
    },
    "/rooms/{roomId}/devices/{deviceId}/app_version": {
      "put": {
        "parameters": [
          {
            "description": "Unique Identifier of the Zoom Room.",
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "qMOLddnySIGGVycz8aX_JQ"
            }
          },
          {
            "description": "Unique Identifier of the Mac or the Windows device. The value of this field can be retrieved from the [**List Zoom Room devices**](/api-reference/zoom-api/methods#operation/listZRDevices) API.",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "qsrpAOJCTm-VPkOf3bHXgw"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content** <br>\nRequest processed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `8001` <br> Cannot process this upgrade request. The Zoom Rooms Software in this device is either already up to date or is currently being updated.  <br>  <br> \n**Error Code:** `8002` <br> Cannot process the downgrade request. The target version for downgrading is not available or the downgrade process has already been initiated. <br>  <br> \n**Error Code:** `8003` <br>  The cancel request could not be processed because the Zoom Rooms Software in this device is not being downgraded or upgraded at the moment. The cancel action should only be used to cancel an ongoing upgrade or downgrade process. <br>  <br> \n**Error Code:** `8004` <br> A device with the provided Device ID: {deviceId} does not belong to the current room: {roomId}."
          }
        },
        "tags": [
          "Zoom Rooms Devices"
        ],
        "description": "Use this API to [upgrade or downgrade](https://support.zoom.us/hc/en-us/articles/204675449-Upgrade-or-Downgrade-Zoom-Rooms-Software) the version of your installed Zoom Rooms app on your Mac or Windows device. \n\n**Scopes:** `room:write:admin` \n\n**Prerequisites:** \n* A Pro or a higher account with Zoom Rooms. \n* The Zoom Rooms software must be installed on a Mac or a Windows device. This API does not support other devices.",
        "operationId": "changeZoomRoomsAppVersion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "description": "Specify one of the following values for this field:\n\n`upgrade`: Upgrade to the latest Zoom Rooms App Version.<br>\n`downgrade`: Downgrade the Zoom Rooms App Version.<br>\n`cancel`: Cancel an ongoing upgrade or downgrade process.",
                    "enum": [
                      "upgrade",
                      "downgrade",
                      "cancel"
                    ],
                    "type": "string",
                    "example": "update"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Change Zoom Rooms app version"
      }
    },
    "/rooms/{roomId}/location": {
      "put": {
        "parameters": [
          {
            "description": "Unique Identifier of the Zoom Room.",
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "qMOLddnySIGGVycz8aX_JQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nLocation of the Zoom Room changed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br>\nLocation not found: {location_id}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms"
        ],
        "description": "An account owner of a Zoom account can establish a [Zoom Rooms Location Hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) to better organize Zoom Rooms spread across various locations. The location can be structured in a hierarchy with Country being the top-level location, followed by city, campus, building, and floor. Use this API to assign a new location for a Zoom Room. Note that the Zoom Room can be assigned only to the lowest level location available in the hierarchy.\n**Prerequisite:**<br>\n* Account owner or admin permission\n* Zoom Rooms version 4.0 or higher<br>\n**Scopes:** `room:write:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "changeZRLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "location_id": {
                    "description": "Location ID of the location where Zoom Room is to be assigned. This can be retrieved from the `id` property in the response of [**List Zoom Rooms locations**](/api-reference/zoom-api/methods#operation/listZRLocations) API.",
                    "type": "string",
                    "example": "49D7a0xPQvGQ2DCMZgSe7w"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Change a Zoom Room's location"
      }
    },
    "/rooms/{roomId}/settings": {
      "get": {
        "parameters": [
          {
            "description": "The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account.",
            "in": "query",
            "name": "setting_type",
            "required": true,
            "schema": {
              "default": "meeting",
              "type": "string",
              "example": "meeting"
            }
          },
          {
            "description": "Unique identifier of the Zoom Room.",
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "qMOLddnySIGGVycz8aX_JQ"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "meeting_security": {
                          "properties": {
                            "encryption_type": {
                              "description": "Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>\n`enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>\n\n`e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.",
                              "enum": [
                                "enhanced_encryption",
                                "e2ee"
                              ],
                              "type": "string",
                              "example": "e2ee"
                            },
                            "end_to_end_encrypted_meetings": {
                              "description": "Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "zoom_rooms": {
                          "properties": {
                            "allow_multiple_content_sharing": {
                              "description": "Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.",
                              "type": "boolean",
                              "example": true
                            },
                            "audio_device_daily_auto_test": {
                              "description": "Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_direct_sharing": {
                              "description": "Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_start_scheduled_meeting": {
                              "description": "Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.",
                              "type": "boolean",
                              "example": true
                            },
                            "auto_stop_scheduled_meeting": {
                              "description": "Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. ",
                              "type": "boolean",
                              "example": true
                            },
                            "count_attendees_number_in_room": {
                              "description": "Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.\n",
                              "type": "boolean",
                              "example": true
                            },
                            "display_feedback_survey": {
                              "description": "Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.",
                              "type": "boolean",
                              "example": true
                            },
                            "display_meeting_list": {
                              "description": " Show the same information on the TV that is shown on the controller.",
                              "type": "boolean",
                              "example": true
                            },
                            "display_top_banner": {
                              "description": "Allow to display room name, time and sharing key on the top portion of TV.",
                              "type": "boolean",
                              "example": true
                            },
                            "encrypt_shared_screen_content": {
                              "description": "Encrypt screen and content shared in meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "hide_id_for_private_meeting": {
                              "description": "If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.",
                              "type": "boolean",
                              "example": true
                            },
                            "hide_share_instruction": {
                              "description": "Hide share instructions from TV.",
                              "type": "boolean",
                              "example": true
                            },
                            "send_whiteboard_to_internal_contact_only": {
                              "description": "Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.",
                              "type": "boolean",
                              "example": true
                            },
                            "show_alert_before_meeting": {
                              "description": "If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. ",
                              "type": "boolean",
                              "example": true
                            },
                            "show_call_history_in_room": {
                              "description": "Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.\n",
                              "type": "boolean",
                              "example": true
                            },
                            "show_contact_list_on_controller": {
                              "description": "If enabled, you can invite participants from the contact list during a meeting or when starting a meeting",
                              "type": "boolean",
                              "example": true
                            },
                            "show_non_video_participants": {
                              "description": "When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.",
                              "type": "boolean",
                              "example": true
                            },
                            "start_airplay_manually": {
                              "description": "Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.",
                              "type": "boolean",
                              "example": true
                            },
                            "start_airplay_mirroring": {
                              "description": "Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms",
                              "type": "boolean",
                              "example": true
                            },
                            "support_join_3rd_party_meeting": {
                              "description": "Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.",
                              "type": "boolean",
                              "example": true
                            },
                            "transform_meeting_to_private": {
                              "description": "If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display \"Your Name's Meeting\" instead of the real meeting topic.",
                              "type": "boolean",
                              "example": true
                            },
                            "upcoming_meeting_alert": {
                              "description": "If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.",
                              "type": "boolean",
                              "example": true
                            },
                            "weekly_system_restart": {
                              "description": "[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "client_alert": {
                          "description": "The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. ",
                          "properties": {
                            "detect_bluetooth_microphone_error_alert": {
                              "description": "Display an alert message when an issue is detected with a bluetooth microphone.",
                              "type": "boolean",
                              "example": true
                            },
                            "detect_bluetooth_speaker_error_alert": {
                              "description": "Display an alert message when an issue is detected with a bluetooth speaker.",
                              "type": "boolean",
                              "example": true
                            },
                            "detect_camera_error_alert": {
                              "description": "Display an alert message when an issue is detected with a camera.",
                              "type": "boolean",
                              "example": true
                            },
                            "detect_microphone_error_alert": {
                              "description": "Display an alert message when an issue is detected with microphone.",
                              "type": "boolean",
                              "example": true
                            },
                            "detect_speaker_error_alert": {
                              "description": "Display an alert message when an issue is detected with a speaker.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        },
                        "digital_signage": {
                          "properties": {
                            "banner": {
                              "description": "Specifies the elements that you want to display in the top banner.",
                              "properties": {
                                "banner_room_name": {
                                  "description": "Display or hide banner room name.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "banner_sharing_key": {
                                  "description": "Display or hide banner sharing key.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "banner_time": {
                                  "description": "Display or hide time in the banner.",
                                  "type": "boolean",
                                  "example": true
                                }
                              },
                              "type": "object"
                            },
                            "display_period": {
                              "description": "Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.",
                              "properties": {
                                "start_displaying_content": {
                                  "description": "Start displaying digital signage content after certain duration after the meeting ends. The value of this field indicates the duration in minutes.",
                                  "type": "integer",
                                  "example": 1
                                },
                                "stop_displaying_content": {
                                  "description": "Stop displaying content {certain_duration} before a meeting is scheduled to begin. The value of this field indicates the duration in minutes.",
                                  "type": "integer",
                                  "example": 1
                                }
                              },
                              "type": "object"
                            },
                            "enable_digital_signage": {
                              "description": "[Indicates whether digital signage is on or off,](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>\n`true`: enable<br> `false`: disable",
                              "type": "boolean",
                              "example": true
                            },
                            "layout": {
                              "description": "Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.\n\n`standard`: Standard Center<br>\n`video_content`: Video + Content",
                              "type": "string",
                              "example": "standard"
                            },
                            "mute": {
                              "description": "Sound of all contents will be muted if the value of this field is set to `true`.",
                              "type": "boolean",
                              "example": true
                            },
                            "play_list": {
                              "description": "Content list.",
                              "items": {
                                "properties": {
                                  "action": {
                                    "description": "Specify an action for the content list. The value can be one of the following:<br>\n`add`: Add another content list.<br>\n`update`: Update existing content list.<br>\n`delete`: Delete content list.\n",
                                    "enum": [
                                      "add",
                                      "update",
                                      "delete"
                                    ],
                                    "type": "string",
                                    "example": "update"
                                  },
                                  "contents": {
                                    "items": {
                                      "description": "Content list.",
                                      "properties": {
                                        "content_id": {
                                          "description": "Content Id.",
                                          "type": "string",
                                          "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                        },
                                        "duration": {
                                          "description": "Duration for how long the content will be displayed.",
                                          "type": "integer",
                                          "example": 65
                                        },
                                        "id": {
                                          "type": "string",
                                          "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                        },
                                        "name": {
                                          "description": "Name of the content.",
                                          "type": "string",
                                          "example": "content name"
                                        },
                                        "order": {
                                          "description": "Order of the content in the display.",
                                          "type": "integer",
                                          "example": 1
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "maxItems": 3,
                                    "type": "array"
                                  },
                                  "end_time": {
                                    "description": "Specify the display end time for the content list in GMT.",
                                    "type": "string",
                                    "example": "2021-03-18T05:41:36Z"
                                  },
                                  "id": {
                                    "description": "Unique identifier of the content list. This field is only required if you would like to remove or update the content list.",
                                    "type": "string",
                                    "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                  },
                                  "name": {
                                    "description": "Name of the content list.",
                                    "type": "string",
                                    "example": "content list"
                                  },
                                  "start_time": {
                                    "description": "Specify the display start time for the content list in GMT.",
                                    "type": "string",
                                    "example": "2021-03-18T05:41:36Z"
                                  }
                                },
                                "type": "object"
                              },
                              "maxItems": 2,
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "notification": {
                          "description": "[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. ",
                          "properties": {
                            "audio_meet_usability_threshold": {
                              "description": "Send an alert when the audio echo test result meets usability threshold.",
                              "type": "boolean",
                              "example": true
                            },
                            "audio_not_meet_usability_threshold": {
                              "description": "Send an alert when the audio echo test result does not meet usability threshold.",
                              "type": "boolean",
                              "example": true
                            },
                            "battery_is_charging": {
                              "description": "Send an alert when the battery starts charging.",
                              "type": "boolean",
                              "example": true
                            },
                            "battery_low_and_not_charging": {
                              "description": "Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.",
                              "type": "boolean",
                              "example": true
                            },
                            "battery_percentage": {
                              "description": "Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.",
                              "type": "string",
                              "example": "90"
                            },
                            "controller_scheduling_disconnected": {
                              "description": "Send an alert when the connection to the Controller or Scheduling Display cannot be detected.",
                              "type": "boolean",
                              "example": true
                            },
                            "controller_scheduling_reconnected": {
                              "description": "Send an alert when the Controller or Scheduling Display can be detected again.",
                              "type": "boolean",
                              "example": true
                            },
                            "cpu_usage_high_detected": {
                              "description": "Send an alert when CPU usage is above 90%.",
                              "type": "boolean",
                              "example": true
                            },
                            "mic_speaker_camera_disconnected": {
                              "description": "Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.",
                              "type": "boolean",
                              "example": true
                            },
                            "mic_speaker_camera_reconnected": {
                              "description": "Send an alert when the mic, speaker or camera is reconnected.",
                              "type": "boolean",
                              "example": true
                            },
                            "network_unstable_detected": {
                              "description": "Send an alert when low bandwidth network is detected",
                              "type": "boolean",
                              "example": true
                            },
                            "sip_registration_failed": {
                              "description": "Send an alert when SIP registration stops working. ",
                              "type": "boolean",
                              "example": true
                            },
                            "sip_registration_re_enabled": {
                              "description": "Send an alert after the SIP registration is re-enabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "zoom_room_come_back_online": {
                              "description": "Send an alert when the Zoom Room is online after previously being offline.",
                              "type": "boolean",
                              "example": true
                            },
                            "zoom_room_display_disconnected": {
                              "description": "Send an alert when the TV display is disconnected",
                              "type": "boolean",
                              "example": true
                            },
                            "zoom_room_offline": {
                              "description": "Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room settings returned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `1012`<br>\nRoom not found:{roomId}.\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Get information on meeting or alert settings applied to a specific Zoom Room. By default, only **Meeting Settings** are returned. To view only **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter.<br>\n**Prerequisites:**<br>\n* Zoom Room licenses\n* Owner or Admin privileges on the Zoom Account.<br>\n**Scopes:** `room:read:admin`\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br> ",
        "operationId": "getZRSettings",
        "summary": "Get Zoom Room settings"
      },
      "patch": {
        "parameters": [
          {
            "description": "Unique Identifier of the Zoom Room.",
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "qMOLddnySIGGVycz8aX_JQ"
            }
          },
          {
            "description": "The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Room.<br>\n`meeting`: Meeting settings of the Zoom Room.<br>\n`signage`: Digital signage settings applied on the Zoom Room.",
            "in": "query",
            "name": "setting_type",
            "schema": {
              "type": "string",
              "example": "alert"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nSettings updated successfully. "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Update either meeting or alert settings applied to a specific Zoom Room. To update **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter. To update **Meeting Settings**, specify `meeting` as the value of the `setting_type` query parameter.<br>\n**Prerequisites:**<br>\n* Zoom Room licenses\n* Owner or Admin privileges on the Zoom Account.<br>\n**Scopes:** `room:write:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "updateZRSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "properties": {
                      "meeting_security": {
                        "properties": {
                          "encryption_type": {
                            "description": "Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>\n`enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>\n\n`e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.",
                            "enum": [
                              "enhanced_encryption",
                              "e2ee"
                            ],
                            "type": "string",
                            "example": "e2ee"
                          },
                          "end_to_end_encrypted_meetings": {
                            "description": "Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "zoom_rooms": {
                        "properties": {
                          "allow_multiple_content_sharing": {
                            "description": "Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.",
                            "type": "boolean",
                            "example": true
                          },
                          "audio_device_daily_auto_test": {
                            "description": "Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_direct_sharing": {
                            "description": "Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_start_scheduled_meeting": {
                            "description": "Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.",
                            "type": "boolean",
                            "example": true
                          },
                          "auto_stop_scheduled_meeting": {
                            "description": "Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. ",
                            "type": "boolean",
                            "example": true
                          },
                          "count_attendees_number_in_room": {
                            "description": "Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.\n",
                            "type": "boolean",
                            "example": true
                          },
                          "display_feedback_survey": {
                            "description": "Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.",
                            "type": "boolean",
                            "example": true
                          },
                          "display_meeting_list": {
                            "description": " Show the same information on the TV that is shown on the controller.",
                            "type": "boolean",
                            "example": true
                          },
                          "display_top_banner": {
                            "description": "Allow to display room name, time and sharing key on the top portion of TV.",
                            "type": "boolean",
                            "example": true
                          },
                          "encrypt_shared_screen_content": {
                            "description": "Encrypt screen and content shared in meetings.",
                            "type": "boolean",
                            "example": true
                          },
                          "hide_id_for_private_meeting": {
                            "description": "If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.",
                            "type": "boolean",
                            "example": true
                          },
                          "hide_share_instruction": {
                            "description": "Hide share instructions from TV.",
                            "type": "boolean",
                            "example": true
                          },
                          "send_whiteboard_to_internal_contact_only": {
                            "description": "Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.",
                            "type": "boolean",
                            "example": true
                          },
                          "show_alert_before_meeting": {
                            "description": "If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. ",
                            "type": "boolean",
                            "example": true
                          },
                          "show_call_history_in_room": {
                            "description": "Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.\n",
                            "type": "boolean",
                            "example": true
                          },
                          "show_contact_list_on_controller": {
                            "description": "If enabled, you can invite participants from the contact list during a meeting or when starting a meeting",
                            "type": "boolean",
                            "example": true
                          },
                          "show_non_video_participants": {
                            "description": "When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.",
                            "type": "boolean",
                            "example": true
                          },
                          "start_airplay_manually": {
                            "description": "Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.",
                            "type": "boolean",
                            "example": true
                          },
                          "start_airplay_mirroring": {
                            "description": "Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms",
                            "type": "boolean",
                            "example": true
                          },
                          "support_join_3rd_party_meeting": {
                            "description": "Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.",
                            "type": "boolean",
                            "example": true
                          },
                          "transform_meeting_to_private": {
                            "description": "If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display \"Your Name's Meeting\" instead of the real meeting topic.",
                            "type": "boolean",
                            "example": true
                          },
                          "upcoming_meeting_alert": {
                            "description": "If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.",
                            "type": "boolean",
                            "example": true
                          },
                          "weekly_system_restart": {
                            "description": "[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "client_alert": {
                        "description": "The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. ",
                        "properties": {
                          "detect_bluetooth_microphone_error_alert": {
                            "description": "Display an alert message when an issue is detected with a bluetooth microphone.",
                            "type": "boolean",
                            "example": true
                          },
                          "detect_bluetooth_speaker_error_alert": {
                            "description": "Display an alert message when an issue is detected with a bluetooth speaker.",
                            "type": "boolean",
                            "example": true
                          },
                          "detect_camera_error_alert": {
                            "description": "Display an alert message when an issue is detected with a camera.",
                            "type": "boolean",
                            "example": true
                          },
                          "detect_microphone_error_alert": {
                            "description": "Display an alert message when an issue is detected with microphone.",
                            "type": "boolean",
                            "example": true
                          },
                          "detect_speaker_error_alert": {
                            "description": "Display an alert message when an issue is detected with a speaker.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      },
                      "digital_signage": {
                        "properties": {
                          "banner": {
                            "properties": {
                              "banner_room_name": {
                                "type": "boolean",
                                "example": true
                              },
                              "banner_sharing_key": {
                                "type": "boolean",
                                "example": true
                              },
                              "banner_time": {
                                "type": "boolean",
                                "example": true
                              }
                            },
                            "type": "object"
                          },
                          "display_period": {
                            "description": "Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.",
                            "properties": {
                              "start_displaying_content": {
                                "description": "Start displaying digital signage content after certain duration after the meeting ends. Specify the value of the duration in minutes in this field.",
                                "type": "integer",
                                "example": 1
                              },
                              "stop_displaying_content": {
                                "description": "Stop displaying content {certain_duration} before a meeting is scheduled to begin. Specify the value of duration in minutes in this field.",
                                "type": "integer",
                                "example": 1
                              }
                            },
                            "type": "object"
                          },
                          "enable_digital_signage": {
                            "description": "[Enable or disable digital signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>\n`true`: enable<br> `false`: disable",
                            "type": "boolean",
                            "example": true
                          },
                          "layout": {
                            "description": "Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.\n\n`standard`: Standard Center<br>\n`video_content`: Video + Content",
                            "type": "string",
                            "example": "standard"
                          },
                          "mute": {
                            "description": "Sound of all contents will be muted if the value of this field is set to `true`.",
                            "type": "boolean",
                            "example": true
                          },
                          "play_list": {
                            "description": "Content list.",
                            "items": {
                              "properties": {
                                "action": {
                                  "description": "Specify an action for the content list. The value can be one of the following:<br>\n`add`: Add another content list.<br>\n`update`: Update existing content list.<br>\n`delete`: Delete content list.\n",
                                  "enum": [
                                    "add",
                                    "update",
                                    "delete"
                                  ],
                                  "type": "string",
                                  "example": "update"
                                },
                                "contents": {
                                  "items": {
                                    "description": "Content list.",
                                    "properties": {
                                      "action": {
                                        "description": "Specify an action for the content in the content list. The value can be one of the following:<br>\n`add`: Add another content to the content list.<br>\n`update`: Update existing content's information in the content list.<br>\n`delete`: Delete content from the content list.\n\n",
                                        "type": "string",
                                        "example": "update"
                                      },
                                      "content_id": {
                                        "description": "Content Id.",
                                        "type": "string",
                                        "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                      },
                                      "duration": {
                                        "description": "By default each content is display for 5 seconds. Using this field, specify how long you would like to display the content.",
                                        "type": "integer",
                                        "example": 65
                                      },
                                      "id": {
                                        "description": "Unique identifier of the content. This field is only required if you would like to remove or update the content information.",
                                        "type": "string",
                                        "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                      },
                                      "name": {
                                        "description": "Name of the content.",
                                        "type": "string",
                                        "example": "content name"
                                      },
                                      "order": {
                                        "description": "Order of the content in the display.",
                                        "type": "integer",
                                        "example": 1
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "maxItems": 3,
                                  "type": "array"
                                },
                                "end_time": {
                                  "description": "Specify the display end time for the content list in GMT.",
                                  "type": "string",
                                  "example": "2021-03-18T05:41:36Z"
                                },
                                "id": {
                                  "description": "Unique identifier of the content list. This field is only required if you would like to remove or update the content list.",
                                  "type": "string",
                                  "example": "blKfsfQ-QSW7V_LPjZrIdg"
                                },
                                "name": {
                                  "description": "Name of the content list.",
                                  "type": "string",
                                  "example": "content list"
                                },
                                "start_time": {
                                  "description": "Specify the display start time for the content list in GMT.",
                                  "type": "string",
                                  "example": "2021-03-18T05:41:36Z"
                                }
                              },
                              "type": "object"
                            },
                            "maxItems": 2,
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "notification": {
                        "description": "[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. ",
                        "properties": {
                          "audio_meet_usability_threshold": {
                            "description": "Send an alert when the audio echo test result meets usability threshold.",
                            "type": "boolean",
                            "example": true
                          },
                          "audio_not_meet_usability_threshold": {
                            "description": "Send an alert when the audio echo test result does not meet usability threshold.",
                            "type": "boolean",
                            "example": true
                          },
                          "battery_is_charging": {
                            "description": "Send an alert when the battery starts charging.",
                            "type": "boolean",
                            "example": true
                          },
                          "battery_low_and_not_charging": {
                            "description": "Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.",
                            "type": "boolean",
                            "example": true
                          },
                          "battery_percentage": {
                            "description": "Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.",
                            "type": "string",
                            "example": "90"
                          },
                          "controller_scheduling_disconnected": {
                            "description": "Send an alert when the connection to the Controller or Scheduling Display cannot be detected.",
                            "type": "boolean",
                            "example": true
                          },
                          "controller_scheduling_reconnected": {
                            "description": "Send an alert when the Controller or Scheduling Display can be detected again.",
                            "type": "boolean",
                            "example": true
                          },
                          "cpu_usage_high_detected": {
                            "description": "Send an alert when CPU usage is above 90%.",
                            "type": "boolean",
                            "example": true
                          },
                          "mic_speaker_camera_disconnected": {
                            "description": "Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.",
                            "type": "boolean",
                            "example": true
                          },
                          "mic_speaker_camera_reconnected": {
                            "description": "Send an alert when the mic, speaker or camera is reconnected.",
                            "type": "boolean",
                            "example": true
                          },
                          "network_unstable_detected": {
                            "description": "Send an alert when low bandwidth network is detected",
                            "type": "boolean",
                            "example": true
                          },
                          "sip_registration_failed": {
                            "description": "Send an alert when SIP registration stops working. ",
                            "type": "boolean",
                            "example": true
                          },
                          "sip_registration_re_enabled": {
                            "description": "Send an alert after the SIP registration is re-enabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "zoom_room_come_back_online": {
                            "description": "Send an alert when the Zoom Room is online after previously being offline.",
                            "type": "boolean",
                            "example": true
                          },
                          "zoom_room_display_disconnected": {
                            "description": "Send an alert when the TV display is disconnected",
                            "type": "boolean",
                            "example": true
                          },
                          "zoom_room_offline": {
                            "description": "Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Zoom Room settings"
      }
    },
    "/sip_phones": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "description": "User name or email address of a user. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned.",
            "in": "query",
            "name": "search_key",
            "schema": {
              "type": "string",
              "example": "jchill@example.com"
            }
          },
          {
            "description": "The number of records returned within a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "example": 30
            }
          },
          {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "in": "query",
            "name": "next_page_token",
            "schema": {
              "type": "string",
              "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3"
                    },
                    "page_count": {
                      "description": "The number of pages returned for the request made.",
                      "type": "integer",
                      "example": 1
                    },
                    "page_number": {
                      "description": "The page number of the current results.",
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call.",
                      "type": "integer",
                      "example": 30
                    },
                    "phones": {
                      "description": "SIP phones object.",
                      "items": {
                        "properties": {
                          "authorization_name": {
                            "description": "Authorization name of the user  registered for SIP Phone.",
                            "type": "string",
                            "example": "testname"
                          },
                          "domain": {
                            "description": "The name or IP address of your provider's SIP domain.",
                            "type": "string",
                            "example": "example.com"
                          },
                          "id": {
                            "description": "Unique Identifier of the SIP Phone.",
                            "type": "string",
                            "example": "123456"
                          },
                          "password": {
                            "description": "The password generated for the user in the SIP account.\n",
                            "type": "string",
                            "example": "apassword1"
                          },
                          "proxy_server": {
                            "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.",
                            "type": "string",
                            "example": "192.0.2.2"
                          },
                          "proxy_server2": {
                            "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.",
                            "type": "string",
                            "example": "192.0.2.4"
                          },
                          "proxy_server3": {
                            "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.",
                            "type": "string",
                            "example": "192.0.2.6"
                          },
                          "register_server": {
                            "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.",
                            "type": "string",
                            "example": "192.0.2.1"
                          },
                          "register_server2": {
                            "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.",
                            "type": "string",
                            "example": "192.0.2.3"
                          },
                          "register_server3": {
                            "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.",
                            "type": "string",
                            "example": "192.0.2.5"
                          },
                          "registration_expire_time": {
                            "description": "The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server. ",
                            "type": "integer",
                            "example": 60
                          },
                          "transport_protocol": {
                            "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                            "enum": [
                              "UDP",
                              "TCP",
                              "TLS",
                              "AUTO"
                            ],
                            "type": "string",
                            "example": "UDP"
                          },
                          "transport_protocol2": {
                            "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                            "enum": [
                              "UDP",
                              "TCP",
                              "TLS",
                              "AUTO"
                            ],
                            "type": "string",
                            "example": "UDP"
                          },
                          "transport_protocol3": {
                            "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                            "enum": [
                              "UDP",
                              "TCP",
                              "TLS",
                              "AUTO"
                            ],
                            "type": "string",
                            "example": "UDP"
                          },
                          "user_email": {
                            "description": "The email address of the user to associate with the SIP Phone. Can add `.win`, `.mac`, `.android`, `.ipad`, `.iphone`, `.linux`, `.pc`, `.mobile`, `.pad` at the end of the email (for example, `user@example.com.mac`) to add accounts for different platforms for the same user.",
                            "format": "email",
                            "type": "string",
                            "example": "jchill@example.com"
                          },
                          "user_name": {
                            "description": "The phone number associated with the user in the SIP account. ",
                            "type": "string",
                            "example": "Jill Chill"
                          },
                          "voice_mail": {
                            "description": "The number to dial for checking voicemail.",
                            "type": "string",
                            "example": "4000"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_records": {
                      "description": "The total number of all the records available across pages.",
                      "type": "integer",
                      "example": 20
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nSIP Phones listed successfully.\n\n**Error Code:** `200`<br>\nPermission missing: Enable SIP Phone Integration by contacting a Zoom Admin first."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br> Bad Request\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "SIP Phone"
        ],
        "description": "Zoom's Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to list SIP phones on an account.<br><br>\n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:read:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n",
        "operationId": "listSipPhones",
        "summary": "List SIP phones"
      },
      "post": {
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nSIP Phone Created.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `200`<br> Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.<br>\n**Error Code:** `300`<br>SIP Phone with the same email already exists.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br> User {userId} not exist or not belong to this account.\n\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "SIP Phone"
        ],
        "description": "Zoom's Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to enable a user to use SIP phone.<br><br>\n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:write:admin`\n<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "createSIPPhone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "authorization_name": {
                    "description": "Authorization name of the user registered for SIP Phone.",
                    "maxLength": 64,
                    "type": "string",
                    "example": "testname"
                  },
                  "domain": {
                    "description": "The name or IP address of your provider's SIP domain. (example: CDC.WEB).",
                    "maxLength": 64,
                    "type": "string",
                    "example": "example.com"
                  },
                  "password": {
                    "description": "The password generated for the user in the SIP account.",
                    "type": "string",
                    "example": "123456"
                  },
                  "proxy_server": {
                    "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.",
                    "type": "string",
                    "example": "192.0.2.2"
                  },
                  "proxy_server2": {
                    "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.",
                    "type": "string",
                    "example": "192.0.2.4"
                  },
                  "proxy_server3": {
                    "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.",
                    "type": "string",
                    "example": "192.0.2.6"
                  },
                  "register_server": {
                    "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.",
                    "type": "string",
                    "example": "192.0.2.1"
                  },
                  "register_server2": {
                    "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.",
                    "type": "string",
                    "example": "192.0.2.3"
                  },
                  "register_server3": {
                    "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.",
                    "type": "string",
                    "example": "192.0.2.5"
                  },
                  "registration_expire_time": {
                    "default": 60,
                    "description": "The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server.",
                    "maximum": 127,
                    "minimum": 1,
                    "type": "integer",
                    "example": 60
                  },
                  "transport_protocol": {
                    "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                    "enum": [
                      "UDP",
                      "TCP",
                      "TLS",
                      "AUTO"
                    ],
                    "type": "string",
                    "example": "UDP"
                  },
                  "transport_protocol2": {
                    "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                    "enum": [
                      "UDP",
                      "TCP",
                      "TLS",
                      "AUTO"
                    ],
                    "type": "string",
                    "example": "UDP"
                  },
                  "transport_protocol3": {
                    "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                    "enum": [
                      "UDP",
                      "TCP",
                      "TLS",
                      "AUTO"
                    ],
                    "type": "string",
                    "example": "UDP"
                  },
                  "user_email": {
                    "description": "The email address of the user to associate with the SIP Phone. Can add `.win`, `.mac`, `.android`, `.ipad`, `.iphone`, `.linux`, `.pc`, `.mobile`, `.pad` at the end of the email (for example, `user@example.com.mac`) to add accounts for different platforms for the same user.",
                    "format": "email",
                    "maxLength": 64,
                    "type": "string",
                    "example": "jchill@example.com"
                  },
                  "user_name": {
                    "description": "The phone number associated with the user in the SIP account.",
                    "maxLength": 64,
                    "type": "string",
                    "example": "Jill Chill"
                  },
                  "voice_mail": {
                    "description": "The number to dial for checking voicemail.",
                    "maxLength": 255,
                    "type": "string",
                    "example": "4000"
                  }
                },
                "required": [
                  "domain",
                  "register_server",
                  "proxy_server",
                  "user_name",
                  "password",
                  "authorization_name",
                  "user_email",
                  "voice_mail"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Enable SIP phone"
      }
    },
    "/sip_phones/{phoneId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique Identifier of the SIP Phone. It can be retrieved from the List SIP Phones API.",
            "in": "path",
            "name": "phoneId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "123456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first."
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nSIP Phone deleted."
          },
          "300": {
            "description": "**Error Code:** `300`The SIP phone with this phoneId was not found on this account."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "SIP Phone"
        ],
        "description": "Use this API to delete a Zoom account's SIP phone. \n\n **Scopes:** `sip_phone:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n**Prerequisites**: \n* Currently only supported on Cisco and Avaya PBX systems. \n* The user must enable **SIP Phone Integration** by contacting the [Zoom Sales](https://zoom.us/contactsales) team.",
        "operationId": "deleteSIPPhone",
        "summary": "Delete SIP phone"
      },
      "patch": {
        "parameters": [
          {
            "description": "Unique Identifier of the SIP Phone. This can be retrieved from the List SIP Phones API.",
            "in": "path",
            "name": "phoneId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "123456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nPermission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.\n"
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nSIP Phone information updated successfully.\n"
          },
          "300": {
            "description": "**Error Code:** `300`<br>\n SIP phone not found: phoneId.<br>\n The SIP phone with this phoneId was not found on this account.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request.\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "SIP Phone"
        ],
        "description": "Zoom's Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to update information of a specific SIP Phone on a Zoom account.<br><br>\n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:write:admin`\n<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateSIPPhone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "authorization_name": {
                    "description": "Authorization name of the user  registered for SIP Phone.",
                    "maxLength": 64,
                    "type": "string",
                    "example": "testname"
                  },
                  "domain": {
                    "description": "The name or IP address of your provider's SIP domain. (example: CDC.WEB).",
                    "maxLength": 64,
                    "type": "string",
                    "example": "example.com"
                  },
                  "password": {
                    "description": "The password generated for the user in the SIP account.",
                    "type": "string",
                    "example": "123456"
                  },
                  "proxy_server": {
                    "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.",
                    "type": "string",
                    "example": "192.0.2.2"
                  },
                  "proxy_server2": {
                    "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.",
                    "type": "string",
                    "example": "192.0.2.4"
                  },
                  "proxy_server3": {
                    "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.",
                    "type": "string",
                    "example": "192.0.2.6"
                  },
                  "register_server": {
                    "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.",
                    "type": "string",
                    "example": "192.0.2.1"
                  },
                  "register_server2": {
                    "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.",
                    "type": "string",
                    "example": "192.0.2.3"
                  },
                  "register_server3": {
                    "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.",
                    "type": "string",
                    "example": "192.0.2.5"
                  },
                  "registration_expire_time": {
                    "default": 60,
                    "description": "The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server.",
                    "maximum": 127,
                    "minimum": 1,
                    "type": "integer",
                    "example": 60
                  },
                  "transport_protocol": {
                    "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                    "enum": [
                      "UDP",
                      "TCP",
                      "TLS",
                      "AUTO"
                    ],
                    "type": "string",
                    "example": "UDP"
                  },
                  "transport_protocol2": {
                    "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                    "enum": [
                      "UDP",
                      "TCP",
                      "TLS",
                      "AUTO"
                    ],
                    "type": "string",
                    "example": "UDP"
                  },
                  "transport_protocol3": {
                    "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                    "enum": [
                      "UDP",
                      "TCP",
                      "TLS",
                      "AUTO"
                    ],
                    "type": "string",
                    "example": "UDP"
                  },
                  "user_name": {
                    "description": "The phone number associated with the user in the SIP account.",
                    "maxLength": 64,
                    "type": "string",
                    "example": "Jill Chill"
                  },
                  "voice_mail": {
                    "description": "The number to dial for checking voicemail.",
                    "maxLength": 255,
                    "type": "string",
                    "example": "4000"
                  }
                },
                "required": [
                  "domain",
                  "register_server",
                  "proxy_server",
                  "register_server2",
                  "proxy_server2",
                  "register_server3",
                  "proxy_server3",
                  "user_name",
                  "password",
                  "authorization_name",
                  "voice_mail"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update SIP phone"
      }
    },
    "/tracking_fields": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingFieldList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nList of Tracking Fields returned."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Tracking Field"
        ],
        "description": "Use this API to list all the [tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) on your Zoom account. Tracking fields let you analyze usage by various fields within an organization. \n\n**Scopes:** `tracking_fields:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.",
        "operationId": "trackingfieldList",
        "summary": "List tracking fields"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "Tracking Field ID",
                          "type": "string",
                          "example": "a32CJji-weJ92"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/TrackingField"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `201`<br>\nTracking Field created"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Tracking Field"
        ],
        "description": "Use this API to create a new [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). Tracking fields let you analyze usage by various fields within an organization. When scheduling a meeting, tracking fields will be included in the meeting options. \n\n**Scope:** `tracking_fields:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.",
        "operationId": "trackingfieldCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackingField"
              }
            }
          },
          "description": "Tracking Field",
          "required": true
        },
        "summary": "Create a tracking field"
      }
    },
    "/tracking_fields/{fieldId}": {
      "delete": {
        "parameters": [
          {
            "description": "The Tracking Field ID",
            "in": "path",
            "name": "fieldId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a32CJji-weJ92"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nTracking Field deleted"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nTracking Field not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Tracking Field"
        ],
        "description": "Use this API to delete a [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). \n\n**Scope:** `tracking_fields:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.",
        "operationId": "trackingfieldDelete",
        "summary": "Delete a tracking field"
      },
      "get": {
        "parameters": [
          {
            "description": "The Tracking Field ID",
            "in": "path",
            "name": "fieldId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a32CJji-weJ92"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "Tracking Field ID",
                          "type": "string",
                          "example": "a32CJji-weJ92"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/TrackingField"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nTracking Field object returned"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nTracking Field not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Tracking Field"
        ],
        "description": "Use this API to return information about a [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). \n\n**Scopes:** `tracking_fields:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.",
        "operationId": "trackingfieldGet",
        "summary": "Get a tracking field"
      },
      "patch": {
        "parameters": [
          {
            "description": "The Tracking Field ID",
            "in": "path",
            "name": "fieldId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a32CJji-weJ92"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nTracking Field updated"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nTracking Field not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Tracking Field"
        ],
        "description": "Use this API to update a [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). \n\n**Scope:** `tracking_fields:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.",
        "operationId": "trackingfieldUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackingField"
              }
            }
          },
          "required": true
        },
        "summary": "Update a tracking field"
      }
    },
    "/tsp": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dial_in_number_unrestricted": {
                      "description": "Control restriction on account users adding a TSP number outside of account's dial in numbers.",
                      "type": "boolean",
                      "example": false
                    },
                    "dial_in_numbers": {
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Country Code",
                            "type": "string",
                            "example": "1"
                          },
                          "number": {
                            "description": "Dial-in number, length is less than 16",
                            "maxLength": 16,
                            "type": "string",
                            "example": "+1 1000200200"
                          },
                          "type": {
                            "description": "Dial-in number type.",
                            "type": "string",
                            "example": "toll"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "enable": {
                      "description": "Enable Telephony Service Provider for account users.",
                      "type": "boolean",
                      "example": true
                    },
                    "master_account_setting_extended": {
                      "description": "For master account, extend its TSP setting to all sub accounts. For sub account, extend TSP setting from master account.",
                      "type": "boolean",
                      "example": true
                    },
                    "modify_credential_forbidden": {
                      "description": "Control restriction on account users being able to modify their TSP credentials.",
                      "type": "boolean",
                      "example": true
                    },
                    "tsp_bridge": {
                      "description": "Telephony bridge zone",
                      "enum": [
                        "US_TSP_TB",
                        "EU_TSP_TB"
                      ],
                      "type": "string",
                      "example": "US_TSP_TB"
                    },
                    "tsp_enabled": {
                      "description": "Enable TSP feature for account. This has to be enabled to use any other tsp settings/features.",
                      "type": "boolean",
                      "example": true
                    },
                    "tsp_provider": {
                      "description": "Telephony Service Provider.",
                      "type": "string",
                      "example": "someprovidername"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nTSP account detail returned successfully."
          }
        },
        "tags": [
          "TSP"
        ],
        "description": "Get information on Telephony Service Provider on an account level.<br><br>\n**Scopes:** `tsp:read:admin` <br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**<br>\n* A Pro or a higher plan.",
        "operationId": "tsp",
        "summary": "Get account's TSP information"
      },
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nTSP Account updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n\n**Error Code:** `300`<br>\nInvalid parameter: tsp_bridge."
          }
        },
        "tags": [
          "TSP"
        ],
        "description": "Update information of the Telephony Service Provider set up on an account.<br>\n**Prerequisites**:<br>\nTSP account option should be enabled.<br>\n**Scopes:** `tsp:write:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId": "tspUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "dial_in_number_unrestricted": {
                    "description": "Control restriction on account users adding a TSP number outside of account's dial in numbers.",
                    "type": "boolean",
                    "example": true
                  },
                  "enable": {
                    "description": "Enable 3rd party audio conferencing for account users",
                    "type": "boolean",
                    "example": true
                  },
                  "master_account_setting_extended": {
                    "description": "For master account, extend its TSP setting to all sub accounts. For sub account, extend TSP setting from master account.",
                    "type": "boolean",
                    "example": true
                  },
                  "modify_credential_forbidden": {
                    "description": "Control restriction on account users being able to modify their TSP credentials.",
                    "type": "boolean",
                    "example": true
                  },
                  "tsp_bridge": {
                    "description": "Telephony bridge",
                    "enum": [
                      "US_TSP_TB",
                      "EU_TSP_TB"
                    ],
                    "type": "string",
                    "example": "US_TSP_TB"
                  },
                  "tsp_enabled": {
                    "description": "Enable TSP feature for account. This has to be enabled to use any other tsp settings/features.",
                    "type": "boolean",
                    "example": true
                  },
                  "tsp_provider": {
                    "description": "3rd party audio conferencing provider",
                    "type": "string",
                    "example": "someprovidername"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "TSP Account",
          "required": true
        },
        "summary": "Update account's TSP information"
      }
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "description": "The user's status: \n* `active` — An active user. \n* `inactive` — A deactivated user. \n* `pending` — A pending user.\n\nThis value defaults to `active`.",
            "in": "query",
            "name": "status",
            "schema": {
              "default": "active",
              "enum": [
                "active",
                "inactive",
                "pending"
              ],
              "type": "string",
              "example": "active"
            },
            "x-enum-descriptions": [
              "Users with an active status",
              "Users with an inactive status",
              "Users with a pending status"
            ]
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "description": "The role's unique ID. Use this parameter to filter the response by a specific role. You can use the [**List roles**](/api-reference/zoom-api/methods#operation/roles) API to get a role's unique ID value.",
            "in": "query",
            "name": "role_id",
            "schema": {
              "type": "string",
              "example": "0"
            }
          },
          {
            "description": "The page number of the current page in the returned records.",
            "in": "query",
            "name": "page_number",
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "description": "Use this parameter to display one of the following attributes in the API call's response: \n* `custom_attributes` — Return the user's custom attributes. \n* `host_key` — Return the user's [host key](https://support.zoom.us/hc/en-us/articles/205172555-Using-your-host-key).",
            "in": "query",
            "name": "include_fields",
            "schema": {
              "enum": [
                "custom_attributes",
                "host_key"
              ],
              "type": "string",
              "example": "custom_attributes"
            }
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string",
                      "example": "8V8HigQkzm2O5r9RUn31D9ZyJHgrmFfbLa2"
                    },
                    "page_count": {
                      "description": "The number of pages returned for the request made.",
                      "type": "integer",
                      "example": 100
                    },
                    "page_number": {
                      "default": 1,
                      "description": "The page number of the current results.",
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "default": 30,
                      "description": "The number of records returned within a single API call.",
                      "maximum": 300,
                      "type": "integer",
                      "example": 30
                    },
                    "total_records": {
                      "description": "The total number of all the records available across pages.",
                      "type": "integer",
                      "example": 8482
                    },
                    "users": {
                      "description": "Information about the users.",
                      "items": {
                        "properties": {
                          "created_at": {
                            "description": "The time at which the user's account was created.",
                            "format": "date-time",
                            "type": "string",
                            "example": "2019-06-01T07:58:03Z"
                          },
                          "custom_attributes": {
                            "description": "Information about the user's custom attributes.\n\nThis field is **only** returned if users are assigned custom attributes and you provided the `custom_attributes` value for the `include_fields` query parameter in the API request.",
                            "items": {
                              "properties": {
                                "key": {
                                  "description": "The custom attribute's unique ID.",
                                  "type": "string",
                                  "example": "cbf_cywdkexrtqc73f97gd4w6g"
                                },
                                "name": {
                                  "description": "The custom attribute's name.",
                                  "type": "string",
                                  "example": "A1"
                                },
                                "value": {
                                  "description": "The custom attribute's value.",
                                  "type": "string",
                                  "example": "2323"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "dept": {
                            "description": "The user's department.",
                            "type": "string",
                            "example": "Developers"
                          },
                          "email": {
                            "description": "The user's email address.",
                            "format": "email",
                            "type": "string",
                            "example": "jchill@example.com"
                          },
                          "employee_unique_id": {
                            "description": "The employee's unique ID. The this field only returns when: \n* SAML single sign-on (SSO) is enabled. \n* The `login_type` value is `101` (SSO).",
                            "type": "string",
                            "example": "HqDyI037Qjili1kNsSIrIg"
                          },
                          "first_name": {
                            "description": "The user's first name.",
                            "maxLength": 64,
                            "type": "string",
                            "example": "Jill"
                          },
                          "group_ids": {
                            "description": "The IDs of groups where the user is a member.",
                            "items": {
                              "type": "string",
                              "example": "t-_-d56CSWG-7BF15LLrOw"
                            },
                            "type": "array"
                          },
                          "host_key": {
                            "description": "The user's [host key](https://support.zoom.us/hc/en-us/articles/205172555-Using-your-host-key).\n\nThis field is **only** returned if users are assigned a host key and you provided the `host_key` value for the `include_fields` query parameter in the API request.",
                            "type": "string",
                            "example": "299492849"
                          },
                          "id": {
                            "description": "The user's ID. \n\nThe API does **not** return this value for users with the `pending` status.",
                            "type": "string",
                            "example": "KDcuGIm1QgePTO8WbOqwIQ"
                          },
                          "im_group_ids": {
                            "description": "The IDs of IM directory groups where the user is a member.",
                            "items": {
                              "type": "string",
                              "example": "t-_-d56CSWG-7BF15LLrOw"
                            },
                            "type": "array"
                          },
                          "last_client_version": {
                            "description": "The last client version that user used to log in.",
                            "type": "string",
                            "example": "5.2.45120.0906(win)"
                          },
                          "last_login_time": {
                            "description": "The user's last login time. This field has a three-day buffer period.\n\nFor example, if user first logged in on `2020-01-01` and then logged out and logged in on `2020-01-02`, this value will still reflect the login time of `2020-01-01`. However, if the user logs in on `2020-01-04`, the value of this field will reflect the corresponding login time since it exceeds the three-day buffer period.",
                            "format": "date-time",
                            "type": "string",
                            "example": "2022-03-25T05:40:55Z"
                          },
                          "last_name": {
                            "description": "The user's last name.",
                            "maxLength": 64,
                            "type": "string",
                            "example": "Chill"
                          },
                          "plan_united_type": {
                            "description": "This field is returned if the user is enrolled in the [Zoom United](https://zoom.us/pricing/zoom-bundles) plan.",
                            "type": "string",
                            "example": "0"
                          },
                          "pmi": {
                            "description": "The user's [PMI (personal meeting ID)](https://support.zoom.us/hc/en-us/articles/201362843-What-is-Personal-Meeting-ID-PMI-and-Personal-Link-).",
                            "format": "int64",
                            "type": "integer",
                            "example": 6589310093
                          },
                          "role_id": {
                            "description": "The unique ID of the user's assigned [role](/api-reference/zoom-api/methods#operation/roles).",
                            "type": "string",
                            "example": "0"
                          },
                          "status": {
                            "description": "The user's status: \n* `active` — An active user. \n* `inactive` — A deactivated user. \n* `pending` — A pending user.",
                            "enum": [
                              "active",
                              "inactive",
                              "pending"
                            ],
                            "example": "active",
                            "type": "string"
                          },
                          "timezone": {
                            "description": "The user's timezone.",
                            "type": "string",
                            "example": "Asia/Shanghai"
                          },
                          "type": {
                            "description": "The user's assigned plan type: \n* `1` — Basic. \n* `2` — Licensed. \n* `3` — On-prem. \n* `99` — None (this can only be set with `ssoCreate`).",
                            "enum": [
                              1,
                              2,
                              3,
                              99
                            ],
                            "example": 1,
                            "type": "integer"
                          },
                          "verified": {
                            "description": "Display whether the user's email address for the Zoom account is verified: \n* `1` — A verified user email. \n* `0` — The user's email **not** verified.",
                            "enum": [
                              1,
                              0
                            ],
                            "type": "integer",
                            "example": 1
                          }
                        },
                        "required": [
                          "email",
                          "type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nUser list returned."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to list your account's users. \n\n**Scopes:** `user:read:admin` \n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "users",
        "summary": "List users"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "email": {
                      "description": "User email address.",
                      "type": "string",
                      "example": "jchill@example.com"
                    },
                    "first_name": {
                      "description": "User's first name.",
                      "maxLength": 64,
                      "type": "string",
                      "example": "Jill"
                    },
                    "id": {
                      "description": "User ID.",
                      "type": "string",
                      "example": "KDcuGIm1QgePTO8WbOqwIQ"
                    },
                    "last_name": {
                      "description": "User's last name.",
                      "maxLength": 64,
                      "type": "string",
                      "example": "Chill"
                    },
                    "type": {
                      "description": "User type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).\n",
                      "enum": [
                        1,
                        2,
                        3,
                        99
                      ],
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201`<br>\nUser created."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br> Bad Request \n\n **Error Code:** `300` <br> Invalid parameter: password \n\n **Error Code:** `200` <br> No privilege. <br> No permission, please contact Zoom customer support. \n\n **Error Code:** `1000` <br> The user cannot be changed because they are a Call-queue manager or Auto-receptionist operator. \n\n **Error Code:**`300` <br> Your request could not be completed because the name contains an invalid word: {name} <br> The value provided for plan_united_type parameter is invalid. Try again with a valid value. \n\n **Error Code:** `1009` <br> The user $email already holds an active account. \n\n **Error Code:** `1107` <br> Email domain is blocked \n\n **Error Code:** `2034` <br> Your request to add a new {0} user could not be approved at this time because your account has reached the permitted maximum number of {1} users. Please purchase additional licenses or contact the Zoom support team to provision additional users in your account. \n\n **Error Code:** `2033` <br> Your request to add a basic user was not approved because you have already reached the maximum basic user limit allowed in your account. For additional help regarding this issue, contact the Zoom Customer Support team. \n\n **Error Code:** `3412` <br> Your request to add a basic user could not be approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber basic users. Please remove existing basic user(s) from your Users list or the Pending Users list before attempting to add another user. <br> Your request to add a new $userType user could not be approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber paying users. Please purchase additional licenses or contact the Zoom support team to provision additional users in your account. \n\n **Error Code:** `1108` <br> Permission requirements to change the user type of this user were not met. \n\n **Error Code:** `1116` <br> Email address $email doesn't match limited domains: $domains \n\n **Error Code:** `2002` <br> SSO has not been enabled for this account. Contact the Zoom support team to enable this option. \n\n **Error Code:** `2032` <br> The ssoCreate option is only available for SSO Partners that have enabled the pre-provision option. Contact the Zoom Support team to learn more. \n\n **Error Code:** `2035` <br> GPA accounts cannot add users. \n\n **Error Code:** `2036` <br> Other accounts cannot invite GPA account owners."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nNot Found \n\n**Error Code:** `4130` <br>\nGroup does not exist: $groupId \n\n**Error Code:** `1102` <br>\nYou cannot enable the \"Zoom Phone\" feature because you do not have any available licenses."
          },
          "409": {
            "description": "**HTTP Status Code:** `409` <br>\nUser with that email already exists. \n\n**Error Code:** `1005` <br>\n Email \"$email\" has already been used."
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\nYou have exceeded the daily rate limit ({0}) of user invite requests permitted for this account. You may resume these requests at GMT 00:00:00."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to add a new user to your Zoom account. \n\n**Scopes:** `user:write:admin`, `user:write` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Note:** The following rate limits apply when you use the `create` value for the `action` field: \n* 50 requests per day for **Free** accounts. \n* 1,500 requests per day for **Pro** accounts. \n* 10,000 requests per day for **Business+** accounts. \n\n**Prerequisites:** \n* A Pro or higher plan.",
        "operationId": "userCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "description": "The action to take to create the new user: \n* `create` — The user receives an email from Zoom containing a confirmation link. The user must then use the link to activate their Zoom account. The user can then set or change their password. \n* `autoCreate` — This action is for Enterprise customers with a managed domain. This feature is disabled by default because of the security risk involved in creating a user who does not belong to your domain. \n* `custCreate` — Users created with this action do not have passwords and will **not** have the ability to log into the Zoom web portal or the Zoom client. These users can still host and join meetings using the `start_url` and `join_url` respectively. To use this option, you must [contact the Integrated Software Vendor (ISV) sales team](https://docs.google.com/forms/d/e/1FAIpQLSe8FundLOYp8TMptSwWYeFt7QGKlp4yw4YHilta9M0ycxdoNw/viewform). \n* `ssoCreate` — This action is provided for the enabled “Pre-provisioning SSO User” option. A user created this way has no password. If it is **not** a Basic user, a personal vanity URL with the username (no domain) of the provisioning email is generated. If the username or PMI is invalid or occupied, it uses a random number or random personal vanity URL.",
                    "enum": [
                      "create",
                      "autoCreate",
                      "custCreate",
                      "ssoCreate"
                    ],
                    "type": "string",
                    "example": "create"
                  },
                  "user_info": {
                    "properties": {
                      "email": {
                        "description": "User email address.",
                        "maxLength": 128,
                        "type": "string",
                        "example": "jchill@example.com"
                      },
                      "first_name": {
                        "description": "User's first name: cannot contain more than 5 Chinese words.",
                        "maxLength": 64,
                        "type": "string",
                        "example": "Jill"
                      },
                      "last_name": {
                        "description": "User's last name: cannot contain more than 5 Chinese words.",
                        "maxLength": 64,
                        "type": "string",
                        "example": "Chill"
                      },
                      "password": {
                        "description": "User password. Only used for the \"autoCreate\" function. The password has to have a minimum of 8 characters and maximum of 32 characters. By default (basic requirement), password must have at least one letter (a, b, c..), at least one number (1, 2, 3...) and include both uppercase and lowercase letters. It should not contain only one identical character repeatedly ('11111111' or 'aaaaaaaa') and it cannot contain consecutive characters ('12345678' or 'abcdefgh').\n\n**Note:** If the account owner or admin has enabled [enhanced password requirements](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_fa9186e4-6818-4f7a-915c-2e25c19f0acd), the value provided in this field must meet those requirements. These requirements can be retrieved by calling the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API and referring to the `password_requirement` field present in the `security` object.",
                        "format": "password",
                        "maxLength": 32,
                        "minLength": 8,
                        "type": "string",
                        "example": "if42!LfH@"
                      },
                      "type": {
                        "description": "User type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).",
                        "enum": [
                          1,
                          2,
                          3,
                          99
                        ],
                        "type": "integer",
                        "example": 1
                      },
                      "feature": {
                        "description": "Information about the user's features.",
                        "type": "object",
                        "properties": {
                          "zoom_phone": {
                            "type": "boolean",
                            "description": "Whether the user has the **Zoom Phone** feature enabled.",
                            "example": ""
                          }
                        }
                      }
                    },
                    "required": [
                      "email",
                      "type"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "action"
                ],
                "type": "object"
              }
            }
          },
          "description": "User",
          "required": true
        },
        "summary": "Create users"
      }
    },
    "/users/email": {
      "get": {
        "parameters": [
          {
            "description": "The email address to be verified.",
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "example": "jchill@example.com"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "existed_email": {
                      "description": "Indicates whether or not the email already exists in Zoom.",
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nSuccess."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `300`<br> Email is required."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Verify if a user's email is registered with Zoom.<br><br>\n\n<b>Note: </b>You can successfully check if a user is a registered Zoom user only if the user **signed up for Zoom via email and is within your account.** If you provide an email address of a user who is not in your account, the value of \"existed_email\" parameter will be \"false\" irrespective of whether or not the user is registered with Zoom. The response of this API call will not include users who joined Zoom using options such as \"Sign in with SSO\", \"Sign in with Google\" or \"Sign in with Facebook\" even if they are in the same account as yours.\n\n**Scopes:** `user:read:admin` `user:read`\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId": "userEmail",
        "summary": "Check a user email"
      }
    },
    "/users/me/zak": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "token": {
                      "description": "The user's ZAK.",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "**HTTP Status Code:** `404` <br>\n\n**Error Code:** `1001`<br>\nUser not exist.<br>\nUser {userId} does not exist or does not belong to this account."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Get the Zoom Access Token (ZAK) for the authenticated user associated with the access token in the API request. You can use a ZAK to start or join a meeting on behalf of this user.\n\nZAKs obtained with this endpoint expire five minutes after receipt.\n\nTo get a ZAK for a different user or with a different expiration, use the [Get a user token](https://marketplace.zoom.us/docs/api-reference/zoom-api/methods#operation/userToken) API with the `zak` `type` query parameter.\n\nSee [Getting a Zoom Access Token (ZAK)](https://marketplace.zoom.us/docs/sdk/native-sdks/auth#generating-zoom-access-token-zak) for details.\n\n**Scope:** `user_zak:read`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "userZak",
        "summary": "Get user's ZAK"
      }
    },
    "/users/vanity_name": {
      "get": {
        "parameters": [
          {
            "description": "Personal meeting room name.",
            "in": "query",
            "name": "vanity_name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Jill"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "existed": {
                      "description": "If `true`, it indicates that the personal meeting room with the given name exists.<br> `false` - The room name does not exist.",
                      "type": "boolean",
                      "example": false
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nSuccess."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>Vanity name is required."
          }
        },
        "tags": [
          "Users"
        ],
        "description": "A personal meeting room is a virtual meeting room that can be permanently assigned to a user.\nUse this API to check if a personal meeting room with the given name exists or not.<br><br>\n**Scopes:** `user:read:admin` `user:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` ",
        "operationId": "userVanityName",
        "summary": "Check a user's PM room"
      }
    },
    "/users/{userId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "description": "Delete action options:<br>`disassociate` - Disassociate a user.<br>`delete`-  Permanently delete a user.<br>Note: To delete pending user in the account, use `disassociate`",
            "in": "query",
            "name": "action",
            "schema": {
              "default": "disassociate",
              "enum": [
                "disassociate",
                "delete"
              ],
              "type": "string",
              "example": "delete"
            },
            "x-enum-descriptions": [
              "Disassociate a user",
              "Permanently delete a user"
            ]
          },
          {
            "description": "Whether the email address passed for the `userId` value is an encrypted email address: \n\n * `true` — The email address is encrypted. \n * `false` — The email address is not encrypted. \n\n If you do not query this parameter, this value defaults to null (`false`).",
            "in": "query",
            "name": "encrypted_email",
            "schema": {
              "default": false,
              "type": "boolean",
              "example": false
            }
          },
          {
            "$ref": "#/components/parameters/TransferEmail"
          },
          {
            "$ref": "#/components/parameters/TransferMeeting"
          },
          {
            "$ref": "#/components/parameters/TransferWebinar"
          },
          {
            "$ref": "#/components/parameters/TransferRecording"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nUser deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300`<br>The transfer-to email address cannot be the same as the unlinked or deleted user's email address.<br> Unable to unlink API user(s).<br> This user has published events on Zoom Events and cannot be deleted or unlinked.<br> This user has published events on Zoom Events and you do not specify a target user to transfer data.<br> The destination user does not have a Zoom Events license and cannot receive this data.<br> The destination user does not have a $license or higher license and cannot receive this data.<br><br>\n**Error Code:** `200`<br>Cannot delete a user out of your account. <br>Cannot delete a Zoom Rooms user. <br>Unable to delete this deactivated user. Please contact Zoom support team for more information. <br><br>\n**Error Code:** `1000`<br>\nThe user cannot be changed because they are a Call-queue manager or Auto-receptionist operator.<br><br>\n**Error Code:** `1107`<br>You can not disassociate a user with managed domain.<br><br>\n**Error Code:** `1117`<br>You can not disassociate an Admin user.<br><br>\n**Error Code:** `1120`<br>A valid invitation to join the Zoom account was not found for this user. <br>This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Use this API to disassociate (unlink) a user or permanently delete a user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Deleting** a user **permanently** removes the user and their data from Zoom. Users can create a new Zoom account using the same email address. An account owner or an account admin can transfer meetings, webinars and cloud recordings to another Zoom user account before deleting.\n\n**Disassociating** a user unlinks the user from the associated Zoom account and provides the user their own basic free Zoom account. The disassociated user can then purchase their own Zoom licenses. An account owner or account admin can transfer the user's meetings, webinars, and cloud recordings to another user before disassociation.\n\n**Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "userDelete",
        "summary": "Delete a user"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/LoginType"
          },
          {
            "description": "Whether the email address passed for the `userId` value is an encrypted email address: \n\n * `true` — The email address is encrypted. \n * `false` — The email address is not encrypted. \n\n If you do not query this parameter, this value defaults to null (`false`).",
            "in": "query",
            "name": "encrypted_email",
            "schema": {
              "default": false,
              "type": "boolean",
              "example": false
            }
          },
          {
            "description": "Whether the queried `userId` value is an employee unique ID: \n* `true` — The queried ID is an employee's unique ID. \n* `false` — The queried ID is not an employee's unique ID. \n\nThis value defaults to `false` (null).",
            "in": "query",
            "name": "search_by_unique_id",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "User ID.",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/User"
                    },
                    {
                      "properties": {
                        "account_id": {
                          "description": "User's account ID.",
                          "type": "string",
                          "example": "q6gBJVO5TzexKYTb_I2rpg"
                        },
                        "account_number": {
                          "description": "The user's account number.",
                          "format": "int64",
                          "type": "integer",
                          "example": 10009239
                        },
                        "cms_user_id": {
                          "description": "CMS ID of user, only enabled for Kaltura integration.",
                          "type": "string",
                          "example": "KDcuGIm1QgePTO8WbOqwIQ"
                        },
                        "company": {
                          "description": "User's company.",
                          "type": "string",
                          "example": "Jill"
                        },
                        "created_at": {
                          "description": "The date and time at which this user was created.",
                          "format": "date-time",
                          "type": "string",
                          "example": "2018-10-31T04:32:37Z"
                        },
                        "custom_attributes": {
                          "description": "Custom attribute(s) that have been assigned to the user.",
                          "properties": {
                            "key": {
                              "description": "Identifier for the custom attribute.",
                              "type": "string",
                              "example": "cbf_cywdkexrtqc73f97gd4w6g"
                            },
                            "name": {
                              "description": "Name of the custom attribute.",
                              "type": "string",
                              "example": "A1"
                            },
                            "value": {
                              "description": "Value of the custom attribute.",
                              "type": "string",
                              "example": "1"
                            }
                          },
                          "type": "object"
                        },
                        "employee_unique_id": {
                          "description": "The employee's unique ID. This field only returns when: \n* SAML single sign-on (SSO) is enabled. \n* The `login_type` value is `101` (SSO).",
                          "type": "string",
                          "example": "HqDyI037Qjili1kNsSIrIg"
                        },
                        "group_ids": {
                          "description": "IDs of the web groups user belongs to. ",
                          "items": {
                            "type": "string",
                            "example": "RSMaSp8sTEGK0_oamiA2_w"
                          },
                          "type": "array"
                        },
                        "host_key": {
                          "description": "User's host key.",
                          "type": "string",
                          "example": "299492849"
                        },
                        "im_group_ids": {
                          "description": "IM IDs of the groups user belongs to.",
                          "items": {
                            "type": "string",
                            "example": "t-_-d56CSWG-7BF15LLrOw"
                          },
                          "type": "array"
                        },
                        "jid": {
                          "type": "string",
                          "example": "jchill@example.com"
                        },
                        "job_title": {
                          "description": "User's job title.",
                          "type": "string",
                          "example": "API Developer"
                        },
                        "language": {
                          "description": "Default language for the Zoom Web Portal.",
                          "type": "string",
                          "example": "en-US"
                        },
                        "location": {
                          "description": "User's location.",
                          "type": "string",
                          "example": "Paris"
                        },
                        "login_type": {
                          "description": "The user's login method:\n\n`0` — Facebook OAuth</br>`1` — Google OAuth</br>`24` — Apple OAuth</br>`27` — Microsoft OAuth</br>`97` — Mobile device</br>`98` — RingCentral OAuth</br>`99` — API user</br>`100` — Zoom Work email</br>`101` — Single Sign-On (SSO)\n\nThe following login methods are only available in China:\n\n`11` — Phone number</br>`21` — WeChat</br>`23` — Alipay",
                          "enum": [
                            0,
                            1,
                            11,
                            21,
                            23,
                            24,
                            27,
                            97,
                            98,
                            99,
                            100,
                            101
                          ],
                          "type": "integer",
                          "example": 101
                        },
                        "manager": {
                          "description": "The manager for the user.",
                          "format": "email",
                          "type": "string",
                          "example": "thill@example.com"
                        },
                        "personal_meeting_url": {
                          "description": "User's personal meeting url.",
                          "type": "string",
                          "example": "example.com"
                        },
                        "phone_country": {
                          "deprecated": true,
                          "description": "**Note:** This field has been **deprecated** and will not be supported in the future. Use the **phone_numbers** field instead of this field. <br> User's country for Company Phone Number.",
                          "type": "string",
                          "example": "US"
                        },
                        "phone_number": {
                          "deprecated": true,
                          "description": "**Note:** This field has been **deprecated** and will not be supported in the future. Use the **phone_numbers** field instead of this field. <br> User's phone number.",
                          "type": "string",
                          "example": "+1 800000000"
                        },
                        "phone_numbers": {
                          "items": {
                            "properties": {
                              "code": {
                                "description": "The phone number's country code. For example, for United States phone numbers, this will be a `+1` value.",
                                "type": "string",
                                "example": "+1"
                              },
                              "country": {
                                "description": "The phone number's [country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries). For example, if the phone number provided in the `number` field is a Brazil-based number, this will be the `BR` value.",
                                "type": "string",
                                "example": "US"
                              },
                              "label": {
                                "description": "The phone number's label:\n* `Mobile`\n* `Office`\n* `Home`\n * `Fax`",
                                "enum": [
                                  "Mobile",
                                  "Office",
                                  "Home",
                                  "Fax"
                                ],
                                "type": "string",
                                "example": "Mobile"
                              },
                              "number": {
                                "description": "The user's phone number.",
                                "type": "string",
                                "example": "800000000"
                              },
                              "verified": {
                                "description": "Whether Zoom has verified the phone number.",
                                "type": "boolean",
                                "example": true
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "pic_url": {
                          "description": "The URL for user's profile picture.",
                          "type": "string",
                          "example": "example.com"
                        },
                        "plan_united_type": {
                          "description": "United plan [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-united-plans). Only returned if user is enrolled in the Zoom United plan.",
                          "type": "string",
                          "example": "16"
                        },
                        "pronouns": {
                          "description": "The user's pronouns.",
                          "type": "string",
                          "example": "3123"
                        },
                        "pronouns_option": {
                          "description": "The user's display pronouns setting:\n* `1` — Ask the user every time they join meetings and webinars. \n* `2` — Always display pronouns in meetings and webinars. \n* `3` — Do not display pronouns in meetings and webinars.",
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "type": "integer",
                          "example": 1
                        },
                        "role_id": {
                          "description": "Unique identifier of the [role](/api-reference/zoom-api/methods#operation/roles) assigned to the user.",
                          "type": "string",
                          "example": "0"
                        },
                        "status": {
                          "description": "Status of user's account.",
                          "enum": [
                            "pending",
                            "active",
                            "inactive"
                          ],
                          "type": "string",
                          "x-enum-descriptions": [
                            "Pending User",
                            "Active User",
                            "Deactivated User"
                          ],
                          "example": "pending"
                        },
                        "use_pmi": {
                          "default": false,
                          "description": "Displays `true` if user has enabled PMI for instant meetings, `false` otherwise.",
                          "type": "boolean",
                          "example": false
                        },
                        "vanity_url": {
                          "description": "Personal meeting room URL, if the user has one.",
                          "type": "string",
                          "example": "example.com"
                        },
                        "verified": {
                          "description": "Displays whether user is verified or not. <br>\n`1` - Account verified.<br>\n`0` - Account not verified.",
                          "type": "integer",
                          "example": 1
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nUser object returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\nBad request<br>\n**Error Code:** `1120`<br>\nA valid invitation to join the Zoom account was not found for this user. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Use this API to view a user's information on a Zoom account. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. \n\n**Note:** Users who have not activated their account will have a `pending` status. These users' `created_at` timestamp will also display the time at which the API call was made, **not** the account's creation date. \n\n**Scopes:** `user:read:admin`, `user:read`, `user_info:read` <br> \n* **Note:** The `user_info:read` scope is only available when you pass the `me` value for the `$userId` value. \n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "user",
        "summary": "Get a user"
      },
      "patch": {
        "summary": "Update a user",
        "description": "Use this API to update a user's [Zoom profile](https://support.zoom.us/hc/en-us/articles/201363203-My-Profile) information. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `user:write:admin` `user:write`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "userUpdate",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "description": "The user's profile information.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/LoginType"
          },
          {
            "name": "remove_tsp_credentials",
            "in": "query",
            "description": "Whether to remove the user's TSP credentials: \n* `true` — The queried ID is an employee's unique ID. \n* `false` — The queried ID is not an employee's unique ID. \n\n This value defaults to `false` (null).",
            "schema": {
              "type": "boolean",
              "nullable": true,
              "example": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nUser updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\nBad Request \n\n**Error Code:** `200` \n* A Zoom Room user cannot be updated to a free user type: $userId \n* A Zoom Room user cannot be updated to a no-meeting-license user type: $userId. \n* You cannot update PMI information for a \"No Meetings License\" user. \n* Only an account administrator can change a user's name. \n* Only an account administrator can change the host key. \n* Only an account administrator can change a Personal Meeting ID (PMI). \n* Only an account administrator can change a vanity name. \n\n**Error Code:**`300` \n* Your request could not be completed because the name contains an invalid word: {name} \n* You cannot change the user type to \"Basic\" because this user has an upcoming Zoom Events scheduled. \n* Invalid parameter: password \n* The value provided for \"plan_united_type\" parameter is invalid. Try again with a valid value. \n\n**Error Code:** `1108` <br>\nPermission requirements to change the user type of this user were not met. \n\n**Error Code:** `1109` <br>\nHost is not a paid user. \n\n**Error Code:** `1120` <br>\nA valid invitation to join the Zoom account was not found for this user. This error is thrown if you added a user in your account but the user did not accept the invitation and the invitation expired. This makes the `userId` invalid. \n\n**Error Code:** `2034` <br>\nYour request to convert the plan type of this user to \"{0}\" was not approved at this time because your account has reached the permitted maximum number of \"{1}\" users. You must purchase additional licenses or contact the Zoom support team to provision additional users in your account. \n\n**Error Code:** `2033` <br>\nYour request to convert the user type to \"Basic\" was not approved because you have already reached the maximum basic user limit allowed in your account. For additional help regarding this issue, contact the Zoom Customer Support team. \n\n**Error Code:** `3412` \n* Your request to convert the user type of this \"{$userType}\" user to a \"Basic\" user was not approved at this time because your account has reached the permitted maximum number of \"{$maxAllowedNumber}\" Basic users. Remove existing basic user(s) from your \"Users\" list or the \"Pending Users\" list before attempting to convert a user to a Basic user. \n* Your request to convert the user type of a \"Basic\" user to a \"{$userType}\" user was not approved at this time because your account has reached the permitted maximum number of \"{$maxAllowedNumber}\" paying users. Please purchase additional licenses or remove existing paying user(s) from your \"Users\" list or the \"Pending Users\" list before attempting to convert a user to a paying user. \n* Your request to convert the user type of a \"{$userType}\" user to a \"No-Meeting License\" user was not approved at this time because your account has reached the permitted maximum number of \"{$maxAllowedNumber\"} No-Meeting License users. Remove the existing No-Meeting License user(s) from your \"Users\" list or the \"Pending Users\" list before attempting to convert a user to a No-Meeting License user. \n\n**Error Code:** `4100` <br>\nUser is already taken by a user from your account. Choose another \"Personal Link Name\"."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nNot Found \n\n**Error Code:** `1001` <br>\nUser does not exist: $userId"
          }
        }
      }
    },
    "/users/{userId}/assistants": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nAssistants deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Delete all assistants of the current user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nAssistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.\n\n**Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* The user as well as the assistant must have Licensed or an On-prem license.\n* Assistants must be under the current user's account.",
        "operationId": "userAssistantsDelete",
        "summary": "Delete user assistants"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAssistantsList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nSuccess."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "List a user's assistants. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nAssistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.\n\n**Scopes:** `user:read:admin`, `user:read`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* Current user as well as the assistant must have Licensed or an On-prem license.\n* Assistants must be under the current user's account.",
        "operationId": "userAssistants",
        "summary": "List user assistants"
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "add_at": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2018-10-31T04:32:37Z"
                    },
                    "ids": {
                      "description": "User ID.",
                      "type": "string",
                      "example": "KDcuGIm1QgePTO8WbOqwIQ"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201`<br>\nAssistant added."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nCurrent account must be paid account: $userId <br>\nThe user must either be a Licensed user or an On-prem user : $userId. <br>\nCan't assign scheduling privilege to yourself.<br>\nCan't find user $email.<br>\nUser $email has already granted scheduling privilege.<br>\nThe user must either be a Licensed user or an On-prem user : $email."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to assign assistants to a user. In the request body, provide either the user's ID or the user's email address. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. \n\n Assistants are users to whom the current user has assigned the [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meetings on behalf of the current user. Assistants can also manage and act as an alternative host for the user's meetings if the administrator has enabled the [co-host feature](https://support.zoom.us/hc/en-us/articles/206330935-Enabling-and-adding-a-co-host) on the account.\n\n**Scopes:** `user:write:admin`, `user:write` </br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \n\n**Prerequisites:** \n* The user and the assistant must have a Licensed or an On-prem license. \n* Assistants must be under the current user's account or in the same organization with the current user's account.",
        "operationId": "userAssistantCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAssistantsList"
              }
            }
          },
          "description": "User assistant.",
          "required": true
        },
        "summary": "Add assistants"
      }
    },
    "/users/{userId}/assistants/{assistantId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "description": "Assistant ID.",
            "in": "path",
            "name": "assistantId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KDcuGIm1QgePTO8WbOqwIQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **OK**<br>\nAssistant deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Delete a specific assistant of a user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nAssistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.\n\n**Scopes:** `user:write:admin`, `user:write`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* The user as well as the assistant must have Licensed or an On-prem license.\n* Assistants must be under the current user's account.",
        "operationId": "userAssistantDelete",
        "summary": "Delete a user assistant"
      }
    },
    "/users/{userId}/email": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nEmail updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Not Found**<br>\n<br>**Error Code:** `200`<br>\nOnly an account administrator can change email.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n<br>**Error Code:** `1001`<br>\nUser does not exist: $email.<br>"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Change a user's [email address](https://support.zoom.us/hc/en-us/articles/201362563-How-Do-I-Change-the-Email-on-My-Account-) on a Zoom account that has managed domain set up. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n* If the Zoom account in which the user belongs has multiple [managed domains](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-), then the email to be updated **must** match one of the managed domains.\n* A user's email address can **only** be changed for a maximum of 3 times in a day (24 hours).\n\n**Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Managed domain must be enabled in the account. \n* The new email address should not already exist in Zoom.",
        "operationId": "userEmailUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "description": "User's email. The length should be less than 128 characters.",
                    "format": "email",
                    "type": "string",
                    "example": "jchill@example.com"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            }
          },
          "description": "User email.",
          "required": true
        },
        "summary": "Update a user's email"
      }
    },
    "/users/{userId}/pac": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pac_accounts": {
                      "description": "Information about the PAC accounts.",
                      "items": {
                        "properties": {
                          "conference_id": {
                            "description": "The conference ID.",
                            "example": 111111,
                            "type": "integer"
                          },
                          "dedicated_dial_in_number": {
                            "description": "Information about the account's dedicated dial-in numbers.",
                            "items": {
                              "properties": {
                                "country": {
                                  "description": "The dial-in country code.",
                                  "example": "USA",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "The dial-in number.",
                                  "example": "5550110",
                                  "maxLength": 16,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "global_dial_in_numbers": {
                            "description": "Information about the account's global dial-in numbers.",
                            "items": {
                              "properties": {
                                "country": {
                                  "description": "The global dial-in country code.",
                                  "example": "USA",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "The global dial-in number.",
                                  "example": "5550100",
                                  "maxLength": 16,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "listen_only_password": {
                            "description": "The listen-only password, up to six characters in length.",
                            "example": "3c2b1a",
                            "maxLength": 6,
                            "type": "string"
                          },
                          "participant_password": {
                            "description": "The participant password, up to six characters in length.",
                            "example": "a1b2c3",
                            "maxLength": 6,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\nPAC account list returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\nBad Request \n\n**Error Code:** `2024` <br>\nUser does not have PAC enabled."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nNot Found \n\n**Error Code:** `1001` <br>\nUser does not exist: $userId"
          }
        },
        "tags": [
          "PAC"
        ],
        "description": "Use this API to list a user's [Personal Audio Conference (PAC)](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) accounts. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. \n\n PAC allows Pro or higher account holders to host meetings through PSTN (phone dial-in) only. \n\n **Scopes:** `pac:read:admin`, `pac:read` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* A Pro or higher plan with an [Audio Conferencing](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) subscription. \n* The [**Personal Audio Conference**](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference#h_01F5BPM447M6QDJXX50RSFXKJ3) setting enabled in the user's profile.",
        "operationId": "userPACs",
        "summary": "List a user's PAC accounts"
      }
    },
    "/users/{userId}/password": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **OK**<br>\nPassword updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300` <br>Your new password can not match the old password.<br>This password cannot be changed because it has already been changed the maximum number of times over the past 24 hours.<br><br> **Error Code:** `1117` <br>Can not update Admin's password<br><br> **Error Code:** `1123`<br>Can only update password of Zoom work email account<br><br> **Error Code:** `1124` <br>Minimum of 6 characters.<br> Have at least {lengthRule} characters<br><br> **Error Code:** `1125` <br>Have at least 1 letter (a, b, c…)<br><br> **Error Code:** `1126` <br>Have at least 1 number (1, 2, 3…)<br><br> **Error Code:** `1127` <br>Have at least 1 special character (!, @, #…)<br><br>\n**Error Code:** `1128` <br>Include both Upper case and Lower case characters<br><br>**Error Code:** `1129` Users cannot reuse any of the last $formerPwdCount passwords created.<br><br> **Error Code:** `1130`<br>Password can't use the same character.<br><br>\n**Error Code:** `1131`<br>Password can't use continuation character.Such as 'abcdef','123456'.<br><br>\n**Error Code:** `1136`<br>\nYour password is too easy to guess. Try another one.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Update the [password](https://support.zoom.us/hc/en-us/articles/206344385-Change-a-User-s-Password) of a user using which the user can login to Zoom. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nAfter this request is processed successfully, an email notification will be sent to the user stating that the password was changed.<br>\n**Scopes:** `user:write:admin` `user:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n**Prerequisites:**<br>\n* Owner or admin of the Zoom account.",
        "operationId": "userPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "password": {
                    "description": "User password. Should be less than 32 characters.\n\n**Note:** If the account owner or admin has enabled [enhanced password requirements](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_fa9186e4-6818-4f7a-915c-2e25c19f0acd), the value provided in this field must meet those requirements. These requirements can be retrieved by calling the [**Get account settings](/api-reference/zoom-api/ma#operation/accountSettings) API and referring to the `password_requirement` field present in the `security` object.",
                    "minimum": 8,
                    "type": "string",
                    "example": "if42!LfH@"
                  }
                },
                "required": [
                  "password"
                ],
                "type": "object"
              }
            }
          },
          "description": "User password.",
          "required": true
        },
        "summary": "Update a user's password"
      }
    },
    "/users/{userId}/permissions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissions"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nUser permissions returned."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Use this API to get permissions that have been granted to the user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nUsers can be assigned a set of permissions that allows them to access only the pages/information that a user needs to view or edit.\n\n**Scopes:** `user:read:admin`, `user:read`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "userPermission",
        "summary": "Get user permissions"
      }
    },
    "/users/{userId}/picture": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nNo Content<br>\nUser picture deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br><br>\n**Error Code:** `200`<br>\nOnly an account administrator can change a profile picture.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nNot Found<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Use this API to delete a user's profile picture. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. \n\n**Scopes:** `user:write:admin`, `user:write` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "userPictureDelete",
        "summary": "Delete a user's profile picture"
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>Picture uploaded."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `300`<br>\nYour request was not accepted because the profile picture contains invalid or explicit content.<br>\n**Error Code:** `200`<br>\nOnly an account administrator can change a profile picture.<br>\n**Error Code:** `120`<br>\nFile is empty.<br>\nFile size cannot exceed 2M.<br>\nOnly jpg/jpeg or png image file can be uploaded.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Upload a user's profile picture. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nProvide `multipart/form-data` as the value of the `content-type` header for this request. This API supports `.jpeg` and `.png` file formats.\n\n**Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "userPicture",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "pic_file"
                ],
                "properties": {
                  "pic_file": {
                    "type": "string",
                    "description": "The file's path.",
                    "example": "profile.png"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Upload a user's profile picture"
      }
    },
    "/users/{userId}/presence_status": {
      "put": {
        "summary": "Update a user's presence status",
        "description": "Use this API to update a user's presence status. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nA user's status **cannot** be updated more than once per minute. For example, you can only submit a maximum of one update request per minute for a single user.\n\nUsers in the Zoom desktop client and mobile apps are assigned with a [presence status](https://support.zoom.us/hc/en-us/articles/360032554051-Status-Icons). The presence status informs users of their contact's availability. Users can also change their own presence status to one the following:\n* **Away**\n* **Do not disturb**\n* **Available**\n* **In a calendar event**\n* **Presenting**\n* **In a Zoom meeting**\n* **On a call**\n\nNote that a user's presence status **cannot** be updated via this API if the user is not logged in to the Zoom client.\n\n**Scopes:** `user:write`, `user:write:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "updatePresenceStatus",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KDcuGIm1QgePTO8WbOqwIQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "duration": {
                    "type": "integer",
                    "minimum": 20,
                    "maximum": 1440,
                    "description": "If updating the user's status to `Do_Not_Disturb`, the duration for which the status should remain as `Do_Not_Disturb`, in minutes.",
                    "example": 1000
                  },
                  "status": {
                    "type": "string",
                    "description": "The user's presence status: \n* `Away` \n* `Do_Not_Disturb` \n* `Available` \n* `In_Calendar_Event` \n* `Presenting` \n* `In_A_Zoom_Meeting` \n* `On_A_Call` \n\nUsers who are on Zoom Client with a version **lower than 5.3.0** can update the status from: \n* `Away` to `Do_Not_Disturb` \n* `Available` to `Do_Not_Disturb` \n\nUsers who are on **Zoom Client 5.3.0 or higher** can update the status from: \n* `Do_Not_Disturb` to `Away`\n* `Do_Not_Disturb` to `Available` \n* `Available` to `Away` \n* `Away` to `Available`",
                    "enum": [
                      "Do_No_Disturb",
                      "Away",
                      "Available",
                      "In_Calendar_Event",
                      "Presenting",
                      "In_A_Zoom_Meeting",
                      "On_A_Call"
                    ],
                    "example": "Do_Not_Disturb"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nStatus updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\nBad Request \n\n**Error Code:** `5301` <br>\nRequest to update the presence status of this user failed. \n\n**Error Code:** `5411` <br>\nUnauthorized request. You do not have permission to update the presence status of this user."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nNot Found \n\n**Error Code:** `1001` <br>\nUser does not exist: {userId}"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n* Too many requests submitted to update the presence status of this user. Please wait for the request to be processed and try again later."
          }
        }
      }
    },
    "/users/{userId}/recordings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/components/parameters/Mc"
          },
          {
            "$ref": "#/components/parameters/Trash"
          },
          {
            "description": "The start date in 'yyyy-mm-dd' UTC format for the date range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the “from” and “to” parameters, by default the value of 'from' field will be “2020-06-30” and the value of the 'to' field will be “2020-07-01”. \n\n**Note**: The \"trash\" files cannot be filtered by date range and thus, the \"from\" and \"to\" fields should not be used for trash files.",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date",
              "type": "string",
              "example": "2020-06-30"
            }
          },
          {
            "description": "End date in 'yyyy-mm-dd' 'yyyy-mm-dd' UTC format. ",
            "in": "query",
            "name": "to",
            "schema": {
              "format": "date",
              "type": "string",
              "example": "2020-06-30"
            }
          },
          {
            "$ref": "#/components/parameters/trash_type"
          },
          {
            "description": "The meeting ID.",
            "in": "query",
            "name": "meeting_id",
            "schema": {
              "type": "integer",
              "example": 6840331990
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordingMeetingList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nList of recording objects returned."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Cloud Recording"
        ],
        "description": "Use this API to list all [cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) of a user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note:</b> To access a user's password protected cloud recording, add an <code>access_token</code> parameter to the download URL and provide either the <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app\">JWT</a> or the user's OAuth access token as the value of the <code>access_token</code> parameter.</p>\n\nWhen a user records a meeting or a webinar by choosing the **Record to the Cloud** option, the video, audio, and chat text are recorded in the Zoom cloud.\n\n**Scopes:** `recording:read:admin`, `recording:read`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* Pro or a higher plan.\n* Cloud Recording must be enabled on the user's account.",
        "operationId": "recordingsList",
        "summary": "List all recordings"
      }
    },
    "/users/{userId}/schedulers": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {}
            },
            "description": "**HTTP Status Code:** `204`<br> All schedulers deleted.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Delete all of a user's schedulers. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nSchedulers are users on whose behalf the current user (assistant) can schedule meetings for. By calling this API, the current user will no longer be a scheduling assistant of any user. \n\n**Scopes:** `user:write:admin`, `user:write`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Current user (assistant) must be under the same account as the scheduler.",
        "operationId": "userSchedulersDelete",
        "summary": "Delete user schedulers"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchedulersList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>Successfully listed all schedulers of the user."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "List all the schedulers of a user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nSchedulers in this context are the users for whom the current user can schedule meetings for. For example, if the current user (the user whose `userId` was passed in the `path` parameter) is \"user A\", the response of this API will contain a list of user(s), for whom user A can schedule and manage meetings. User A is the assistant of these users and thus has scheduling privilege for these user(s).\n\n**Scopes:** `user:read:admin`, `user:read`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* Current user must be under the same account as the scheduler.",
        "operationId": "userSchedulers",
        "summary": "List user schedulers"
      }
    },
    "/users/{userId}/schedulers/{schedulerId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "description": "Scheduler's ID.",
            "in": "path",
            "name": "schedulerId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KDcuGIm1QgePTO8WbOqwIQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nScheduler deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Delete a scheduler. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nSchedulers are users on whose behalf the current user (assistant) can schedule meetings for. By calling this API, the current user will no longer be a scheduling assistant of this scheduler.\n\n**Scopes:** `user:write:admin`, `user:write`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Current user must be under the same account as the scheduler.",
        "operationId": "userSchedulerDelete",
        "summary": "Delete a scheduler"
      }
    },
    "/users/{userId}/settings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/LoginType"
          },
          {
            "allowEmptyValue": true,
            "description": "Optional query parameters: \n* `meeting_authentication` — Use this query parameter to view the [meeting authentication settings](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied to the user's account. \n* `recording_authentication` — Use this query parameter to view the [recording authentication settings](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied to the user's account. \n* `meeting_security` — Use this query parameter to view the meeting security settings applied to the user's account.",
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                "meeting_authentication",
                "recording_authentication",
                "meeting_security"
              ],
              "type": "string",
              "example": "meeting_security"
            }
          },
          {
            "description": "Provide the name of the field by which you would like to filter the response. For example, if you provide \"host_video\" as the value of this field, you will get a response similar to the following:<br>\n{\n    \"schedule_meeting\": {\n        \"host_video\": false\n    }\n}\n<br>You can provide multiple values by separating them with commas(example: \"host_video,participant_video”).",
            "in": "query",
            "name": "custom_query_fields",
            "schema": {
              "type": "string",
              "example": "host_video"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserSettings"
                    },
                    {
                      "properties": {
                        "authentication_options": {
                          "properties": {
                            "meeting_authentication": {
                              "description": "The user's [meeting authentication settings](https://support.zoom.us/hc/en-us/articles/360037117472).",
                              "properties": {
                                "allow_authentication_exception": {
                                  "description": "Whether the [**Allow authentication exception**](https://support.zoom.us/hc/en-us/articles/360037117472#h_01F13A9N1FQFNVESC9C21NRHXY) setting is enabled. This lets hosts invite users who can bypass authentication.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "authentication_options": {
                                  "description": "The user's [**Meeting Authentication Options**](https://support.zoom.us/hc/en-us/articles/360060549492-Allowing-only-authenticated-users-in-meetings#h_01F51KGPWJNQBDMFSJ3ZJQ4AA2) settings.",
                                  "items": {
                                    "properties": {
                                      "default_option": {
                                        "description": "Whether the authentication option is the default authentication option.",
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "domains": {
                                        "description": "A comma-separated list of approved authentication domains.",
                                        "type": "string",
                                        "example": "example.com"
                                      },
                                      "id": {
                                        "description": "The authentication option's ID.",
                                        "type": "string",
                                        "example": "efq4g43gqwrvwr-20f2432fr"
                                      },
                                      "name": {
                                        "description": "The authentication option's name.",
                                        "type": "string",
                                        "example": "The authentication option's name"
                                      },
                                      "type": {
                                        "description": "The authentication type: \n* `enforce_login` — Only users logged in to Zoom can join meetings. \n* `enforce_login_with_domains` — Only users from specific domains can join meetings. The list of domains is defined in the `domains` field. \n* `enforce_login_with_same_account` — Only the Zoom account's users can join meetings.",
                                        "enum": [
                                          "enforce_login",
                                          "enforce_login_with_domains",
                                          "enforce_login_with_same_account"
                                        ],
                                        "type": "string",
                                        "example": "enforce_login_with_same_account"
                                      },
                                      "visible": {
                                        "description": "Whether the authentication option is visible.",
                                        "type": "boolean",
                                        "example": true
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "meeting_authentication": {
                                  "description": "Whether only authenticated users can join meetings.",
                                  "type": "boolean",
                                  "example": true
                                }
                              },
                              "type": "object"
                            },
                            "recording_authentication": {
                              "description": "The user's recording authentication settings.",
                              "properties": {
                                "authentication_options": {
                                  "description": "The user's authentication options.",
                                  "items": {
                                    "properties": {
                                      "default_option": {
                                        "description": "Whether the authentication option is the default authentication option.",
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "domains": {
                                        "description": "A comma-separated list of approved authentication domains.",
                                        "type": "string",
                                        "example": "example.com"
                                      },
                                      "id": {
                                        "description": "The authentication option's ID.",
                                        "type": "string",
                                        "example": "svqeg34g43g43g4343g4343g4334"
                                      },
                                      "name": {
                                        "description": "The authentication option's name.",
                                        "type": "string",
                                        "example": "The authentication option's name"
                                      },
                                      "type": {
                                        "description": "The authentication type: \n * `enforce_login` — Only users logged in to Zoom can view the recordings. \n * `enforce_login_with_domains` — Only users from specific domains can view the recordings. The list of domains is defined in the `domains` field. \n * `internally` — Only the Zoom account's users can view the recordings.",
                                        "enum": [
                                          "enforce_login",
                                          "enforce_login_with_domains",
                                          "internally"
                                        ],
                                        "type": "string",
                                        "example": "enforce_login"
                                      },
                                      "visible": {
                                        "description": "Whether the authentication option is visible.",
                                        "type": "boolean",
                                        "example": true
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "recording_authentication": {
                                  "description": "Whether only authenticated users can view cloud recordings.",
                                  "type": "boolean",
                                  "example": true
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "User Meeting and Recording Authentication Settings",
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/GroupUserSettingsAuthentication"
                    },
                    {
                      "description": "The meeting and webinar security settings.",
                      "properties": {
                        "meeting_security": {
                          "properties": {
                            "auto_security": {
                              "description": "Whether all meetings must be secured with at least one security option. \n\n This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts.",
                              "type": "boolean",
                              "example": true
                            },
                            "block_user_domain": {
                              "description": "Whether users in specific domains are blocked from joining meetings and webinars.",
                              "type": "boolean",
                              "example": true
                            },
                            "block_user_domain_list": {
                              "description": "The blocked domains.",
                              "items": {
                                "maxLength": 30,
                                "minLength": 5,
                                "type": "string",
                                "example": "example.com"
                              },
                              "maxItems": 20,
                              "type": "array"
                            },
                            "embed_password_in_join_link": {
                              "description": "Whether the meeting password is encrypted and included in the invitation link. The provided link will allow participants to join the meeting without having to enter the password.",
                              "type": "boolean",
                              "example": true
                            },
                            "encryption_type": {
                              "description": "The type of encryption used when starting a meeting: \n* `enhanced_encryption` — Enhanced encryption. Encryption data is stored in the cloud. \n* `e2ee` — End-to-end encryption. The encryption key is stored on the local device and cannot be obtained by anyone else. Enabling E2EE also [**disables** certain features](https://support.zoom.us/hc/en-us/articles/360048660871), such as cloud recording, live streaming, and allowing participants to join before the host.",
                              "enum": [
                                "enhanced_encryption",
                                "e2ee"
                              ],
                              "type": "string",
                              "example": "e2ee"
                            },
                            "end_to_end_encrypted_meetings": {
                              "description": "Whether end-to-end encryption is enabled for meetings.",
                              "type": "boolean",
                              "example": true
                            },
                            "meeting_password": {
                              "description": "Whether all instant and scheduled meetings that users can join via client or Zoom Rooms systems are password-protected. [Personal Meeting ID (PMI)](https://support.zoom.us/hc/en-us/articles/203276937) meetings are **not** included in this setting.",
                              "type": "boolean",
                              "example": true
                            },
                            "meeting_password_requirement": {
                              "description": "Information about the meeting and webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).",
                              "properties": {
                                "consecutive_characters_length": {
                                  "description": "The maximum length of consecutive characters (for example, `abcdef`) allowed in a password: \n* `4` through `8` — The maximum consecutive characters length. The length is `n` minus `1`, where `n` is the value. For example, if the value is `4`, there can only be a maximum of `3` consecutive characters in a password (for example, `abc1x@8fdh`). \n* `0` — No consecutive character restriction.",
                                  "enum": [
                                    0,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8
                                  ],
                                  "type": "integer",
                                  "example": 8
                                },
                                "have_letter": {
                                  "description": "Whether passwords must contain at least one letter character.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "have_number": {
                                  "description": "Whether passwords must contain at least one numeric character.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "have_special_character": {
                                  "description": "Whether passwords must contain at least one special character. For example, `!`, `@`, and/or `#` characters.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "have_upper_and_lower_characters": {
                                  "description": "Whether passwords must include uppercase and lowercase characters.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "length": {
                                  "description": "The minimum password length.",
                                  "type": "integer",
                                  "example": 10
                                },
                                "only_allow_numeric": {
                                  "description": "Whether passwords must contain **only** numeric characters.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "weak_enhance_detection": {
                                  "description": "Whether users are informed when the provided password is weak.",
                                  "type": "boolean",
                                  "example": true
                                }
                              },
                              "type": "object"
                            },
                            "only_authenticated_can_join_from_webclient": {
                              "description": "Whether to specify that only authenticated users can join the meeting from the web client.",
                              "type": "boolean",
                              "example": true
                            },
                            "phone_password": {
                              "description": "Whether passwords are required for participants joining by phone. \n\n If enabled and the meeting is password-protected, a numeric password is required for participants to join by phone. For meetings with alphanumeric passwords, a numeric password will be generated.",
                              "type": "boolean",
                              "example": true
                            },
                            "pmi_password": {
                              "description": "Whether all Personal Meeting ID (PMI) meetings that users can join via client or Zoom Rooms systems are password-protected.",
                              "type": "boolean",
                              "example": true
                            },
                            "require_password_for_scheduled_meeting": {
                              "description": "Whether passwords are required for meetings that have already been scheduled.",
                              "type": "boolean",
                              "example": true
                            },
                            "require_password_for_scheduled_webinar": {
                              "description": "Whether passwords are required for webinars that have already been scheduled.",
                              "type": "boolean",
                              "example": true
                            },
                            "waiting_room": {
                              "description": "Whether participants are placed in the [**Waiting Room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) when they join a meeting. \n\n If the **Waiting Room** feature is enabled, the [**Allow participants to join before host**](https://support.zoom.us/hc/en-us/articles/202828525-Allow-participants-to-join-before-host) setting is automatically disabled.",
                              "type": "boolean",
                              "example": true
                            },
                            "waiting_room_settings": {
                              "description": "Information about the Waiting Room settings.",
                              "properties": {
                                "participants_to_place_in_waiting_room": {
                                  "description": "The type of participants to be admitted to the Waiting Room: \n* `0` — All attendees. \n* `1` — Users who are not in your account. \n* `2` — Users who are not in your account and are not part of your [allowed domains list](https://support.zoom.us/hc/en-us/articles/360037117472-Configuring-authentication-profiles#h_e3cf0d5f-eec7-4c2a-ad29-ef2a5079a7da).",
                                  "enum": [
                                    0,
                                    1,
                                    2
                                  ],
                                  "type": "integer",
                                  "example": 1
                                },
                                "users_who_can_admit_participants_from_waiting_room": {
                                  "description": "The users who can admit participants from the Waiting Room: \n* `0` — Host and co-hosts only. \n* `1` — Host, co-hosts, and anyone who bypassed the Waiting Room if the host and co-hosts are not present.",
                                  "enum": [
                                    0,
                                    1
                                  ],
                                  "type": "integer",
                                  "example": 1
                                },
                                "whitelisted_domains_for_waiting_room": {
                                  "description": "If the `participants_to_place_in_waiting_room` field is `2`, a comma-separated list of the domains that can bypass the Waiting Room (`\"example.com,example2.com\"`).",
                                  "type": "string",
                                  "example": "example.com"
                                }
                              },
                              "type": "object"
                            },
                            "webinar_password": {
                              "description": "Whether to generate a password when scheduling webinars. Participants must use the generated password to join the scheduled webinar.",
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "Meeting/Webinar Security Settings",
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nUser settings returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `1120`<br>\nA valid invitation to join the Zoom account was not found for this user. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Retrieve a user's settings. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `user:read:admin`, `user:read`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "userSettings",
        "summary": "Get user settings"
      },
      "patch": {
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Optional query parameters: \n* `meeting_authentication` — Use this query parameter to view the [meeting authentication settings](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied to the user's account. \n* `recording_authentication` — Use this query parameter to view the [recording authentication settings](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied to the user's account. \n* `meeting_security` — Use this query parameter to view the meeting security settings applied to the user's account.",
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                "meeting_authentication",
                "recording_authentication",
                "meeting_security"
              ],
              "type": "string",
              "example": "meeting_security"
            }
          },
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `200`<br>\nUser settings updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `1108`<br> Only Licensed or On-prem users can enable the large meeting feature.<br><br>\n**Error Code:** `1204`<br> You can't enable the Webinar feature because you already have the Zoom Events feature.<br><br>\n**Error Code:** `1205`<br> You can't enable the Zoom Events feature because you already have the Webinar feature.<br><br>\n**Error Code:** `1206`<br> You can only enable the Zoom Events feature for Licensed or On-prem users.<br><br>\n**Error Code:** `1120`<br> A valid invitation to join the Zoom account was not found for this user. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.<br><br>**Error Code:** `1122`<br>\nWebinar feature can only be enabled for Licensed or On-prem users.<br><br>\n**Error Code:** `200`<br>\nYou can't add paid users.<br>\nYou can add max $maxNumber paid users.<br>\nYou can add max $maxNumber free users.<br>\nYou can add max $maxNumber Webinar 100 users.<br>\nYou can add max $maxNumber Webinar 500 users.<br>\nYou can add max $maxNumber Webinar 1000 users.<br>\nYou can add max $maxNumber Webinar 3000 users.<br>\nYou can add max $maxNumber Webinar 5000 users.<br>\nYou can add max $maxNumber Webinar 10000 users.<br>\nYou can add max $maxNumber Large 100 users.<br>\nYou can add max $maxNumber Large 200 users.<br>\nYou can add max $maxNumber Large 300 users.<br>\nYou can add max $maxNumber Large 500 users.<br>\nYou can add max $maxNumber Large 1000 users.<br>\nYou can add max $maxNumber paid users.<br><br>\n**Error Code:** `300`<br> You cannot downgrade the Zoom Events feature to \"$downgradeCapacity\" capacity because there is an upcoming Zoom Events scheduled with \"$maxCapacity\" capacity. <br> You cannot remove the Zoom Events feature for this user because the user has an upcoming Zoom Events scheduled.<br><br>\n**Error Code:** `1207`<br> You can only enable the \"Concurrent Meeting\" feature for Licensed users or On-prem users.<br><br>\n**Error Code:** `1208`<br>You can't enable the \"Concurrent Meeting Basic\" feature.<br><br>\n**Error Code:** `1209`<br> You can add a maximum of {0} \"Concurrent Meeting Basic\" users.<br><br>\n**Error Code:** `1210`<br>You can't enable the \"Concurrent Meeting Plus\" feature.<br><br>\n**Error Code:** `1211`<br>You can add a maximum of {0} \"Concurrent Meeting Plus\" users."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Update a user's settings. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "userSettingsUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UserSettingsUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/GroupUserSettingsAuthenticationUpdate"
                  },
                  {
                    "description": "The updated meeting and webinar security settings.",
                    "properties": {
                      "meeting_security": {
                        "properties": {
                          "auto_security": {
                            "description": "Whether to require that all meetings are secured with at least one security option. \n\n This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts.",
                            "type": "boolean",
                            "example": true
                          },
                          "block_user_domain": {
                            "description": "Whether to block users in specific domains from joining meetings and webinars.",
                            "type": "boolean",
                            "example": true
                          },
                          "block_user_domain_list": {
                            "description": "The domain to block, up to 20 domains. For example, the `*.example.com` domain.",
                            "items": {
                              "maxLength": 30,
                              "minLength": 5,
                              "type": "string",
                              "example": "*.example.com"
                            },
                            "maxItems": 20,
                            "type": "array"
                          },
                          "embed_password_in_join_link": {
                            "description": "Whether the meeting password will be encrypted and included in the invitation link. The provided link will allow participants to join the meeting without having to enter the password.",
                            "type": "boolean",
                            "example": true
                          },
                          "encryption_type": {
                            "description": "The type of encryption to use when starting a meeting: \n* `enhanced_encryption` — Use enhanced encryption. Encryption data is stored in the cloud. \n* `e2ee` — End-to-end encryption. The encryption key is stored on the local device and cannot be obtained by anyone else. Enabling E2EE also [**disables** certain features](https://support.zoom.us/hc/en-us/articles/360048660871), such as cloud recording, live streaming, and allowing participants to join before the host.",
                            "enum": [
                              "enhanced_encryption",
                              "e2ee"
                            ],
                            "type": "string",
                            "example": "e2ee"
                          },
                          "end_to_end_encrypted_meetings": {
                            "description": "Whether to enable end-to-end encryption for meetings. If enabled, you can specify the type of encryption in the `encryption_type` field.",
                            "type": "boolean",
                            "example": true
                          },
                          "meeting_password": {
                            "description": "Whether all instant and scheduled meetings that users can join via client or Zoom Rooms systems are password-protected. [Personal Meeting ID (PMI)](https://support.zoom.us/hc/en-us/articles/203276937) meetings are **not** included in this setting.",
                            "type": "boolean",
                            "example": true
                          },
                          "meeting_password_requirement": {
                            "description": "Information about the meeting and webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).",
                            "properties": {
                              "consecutive_characters_length": {
                                "description": "The maximum length of consecutive characters (for example, `abcdef`) allowed in a password: \n* `4` through `8` — The maximum consecutive characters length. The length is `n` minus `1`, where `n` is the provided value. For example, if you provide the `4` value, there can only be a maximum of `3` consecutive characters in a password (for example, `abc1x@8fdh`). \n* `0` — Do not apply a consecutive character restriction.",
                                "enum": [
                                  0,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8
                                ],
                                "type": "integer",
                                "example": 8
                              },
                              "have_letter": {
                                "description": "Whether the password must contain at least one letter character.",
                                "type": "boolean",
                                "example": true
                              },
                              "have_number": {
                                "description": "Whether the password must contain at least one numeric character.",
                                "type": "boolean",
                                "example": true
                              },
                              "have_special_character": {
                                "description": "Whether the password must contain at least one special character. For example, `!`, `@`, and/or `#` characters.",
                                "type": "boolean",
                                "example": true
                              },
                              "have_upper_and_lower_characters": {
                                "description": "Whether the password must include uppercase and lowercase characters.",
                                "type": "boolean",
                                "example": true
                              },
                              "length": {
                                "description": "The password's minimum length.",
                                "type": "integer",
                                "example": 10
                              },
                              "only_allow_numeric": {
                                "description": "Whether the password must contain **only** numeric characters.",
                                "type": "boolean",
                                "example": true
                              },
                              "weak_enhance_detection": {
                                "description": "Whether users will be informed when the provided password is weak.",
                                "type": "boolean",
                                "example": true
                              }
                            },
                            "type": "object"
                          },
                          "only_authenticated_can_join_from_webclient": {
                            "description": "Whether to specify that only authenticated users can join the meeting from the web client.",
                            "type": "boolean",
                            "example": true
                          },
                          "phone_password": {
                            "description": "Whether to require a password for participants joining by phone. \n\n If enabled and the meeting is password-protected, a numeric password is required for participants to join by phone. For meetings with alphanumeric passwords, a numeric password will be generated.",
                            "type": "boolean",
                            "example": true
                          },
                          "pmi_password": {
                            "description": "Whether all Personal Meeting ID (PMI) meetings that users can join via client or Zoom Rooms systems are password-protected.",
                            "type": "boolean",
                            "example": true
                          },
                          "require_password_for_scheduled_meeting": {
                            "description": "Whether to require a password for meetings that have already been scheduled.",
                            "type": "boolean",
                            "example": true
                          },
                          "require_password_for_scheduled_webinar": {
                            "description": "Whether to require a password for webinars that have already been scheduled.",
                            "type": "boolean",
                            "example": true
                          },
                          "waiting_room": {
                            "description": "Whether participants are placed in the [**Waiting Room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) when they join a meeting. \n\n If the **Waiting Room** feature is enabled, the [**Allow participants to join before host**](https://support.zoom.us/hc/en-us/articles/202828525-Allow-participants-to-join-before-host) setting is automatically disabled.",
                            "type": "boolean",
                            "example": true
                          },
                          "waiting_room_settings": {
                            "description": "Information about the Waiting Room settings.",
                            "properties": {
                              "participants_to_place_in_waiting_room": {
                                "description": "The type of participants to be admitted to the Waiting Room: \n* `0` — All attendees. \n* `1` — Users who are not in your account. \n* `2` — Users who are not in your account and are not part of your [allowed domains list](https://support.zoom.us/hc/en-us/articles/360037117472-Configuring-authentication-profiles#h_e3cf0d5f-eec7-4c2a-ad29-ef2a5079a7da).",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ],
                                "type": "integer",
                                "example": 1
                              },
                              "users_who_can_admit_participants_from_waiting_room": {
                                "description": "The users who can admit participants from the Waiting Room: \n* `0` — Host and co-hosts only. \n* `1` — Host, co-hosts, and anyone who bypassed the Waiting Room if the host and co-hosts are not present.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "type": "integer",
                                "example": 1
                              },
                              "whitelisted_domains_for_waiting_room": {
                                "description": "If the `participants_to_place_in_waiting_room` field is `2`, a comma-separated list of the domains that can bypass the Waiting Room (`\"example.com,example2.com\"`).",
                                "type": "string",
                                "example": "example.com"
                              }
                            },
                            "type": "object"
                          },
                          "webinar_password": {
                            "description": "Whether to generate a password when scheduling webinars. Participants must use the generated password to join the scheduled webinar.",
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "Meeting/Webinar Security Settings",
                    "type": "object"
                  }
                ]
              }
            }
          },
          "description": "User Settings",
          "required": true
        },
        "summary": "Update user settings"
      }
    },
    "/users/{userId}/settings/virtual_backgrounds": {
      "delete": {
        "parameters": [
          {
            "description": "A comma-separated list of the Virtual Background file IDs to delete.",
            "in": "query",
            "name": "file_ids",
            "schema": {
              "type": "string",
              "example": "_l0MP1U7Qn2JgJ4oEJbVZQ"
            }
          },
          {
            "description": "The user's ID. To get a user's ID, use the [**List users**](/api-reference/zoom-api/ma#operation/users) API. For user-level apps, pass the `me` value instead of the user ID value.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KDcuGIm1QgePTO8WbOqwIQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\n* No content. \n* Deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n Invalid parameter: file_ids"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n* User does not exist. \n* User \"{userId}\" does not exist or does not belong to this account."
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Use this API to delete a user's Virtual Background files. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. \n\n **Scopes:** `user:write`, `user:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* The [Virtual Background feature](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) must be enabled on the account.",
        "operationId": "delUserVB",
        "summary": "Delete Virtual Background files"
      },
      "post": {
        "parameters": [
          {
            "description": "The user's ID. To get a user's ID, use the [**List users**](/api-reference/zoom-api/ma#operation/users) API. For user-level apps, pass the `me` value instead of the user ID value.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "KDcuGIm1QgePTO8WbOqwIQ"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "The virtual background file's ID.",
                      "type": "string",
                      "example": "_l0MP1U7Qn2JgJ4oEJbVZQ"
                    },
                    "is_default": {
                      "description": "Whether the virtual background file is set as the default virtual background: \n* `true` — The default virtual background. \n* `false` — Not the default virtual background.",
                      "type": "boolean",
                      "example": true
                    },
                    "name": {
                      "description": "The virtual background file's name.",
                      "type": "string",
                      "example": "profile.png"
                    },
                    "size": {
                      "description": "The virtual background file's size, in bytes.",
                      "type": "string",
                      "example": "8510"
                    },
                    "type": {
                      "description": "The virtual background file's file type: \n* `image` — An image file. \n* `video` — A video file.",
                      "enum": [
                        "image",
                        "video"
                      ],
                      "type": "string",
                      "example": "image"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** \n\n**Error Code:** `120`<br>\nNo file uploaded, verify that a file has been uploaded.<br>\nFile size cannot exceed 15M.<br>\nA maximum of 10 files are allowed for a user.<br>\nOnly jpg/jpeg, gif or png image file can be uploaded.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found** <br>\nGroup not found."
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Use this API to [upload a Virtual Background files](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background) to a user's profile. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. \n\n **Note:** \n* A user profile cannot exceed more than 10 Virtual Background files. \n* You can only upload image files that are in JPG/JPEG, GIF or PNG format. \n* Video files must be in MP4 or MOV file format with a minimum resolution of 480 by 360 pixels (360p) and a maximum resolution of 1920 by 1080 pixels (1080p). \n* The Virtual Background file size cannot exceed 15 megabytes (MB). \n\n **Scopes:** `user:write`, `user:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \n\n**Prerequisites:** \n* The [Virtual Background feature](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) must be enabled on the account.",
        "operationId": "uploadVBuser",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "The Virtual Background's file path.",
                    "type": "string",
                    "example": "profile.png"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Upload Virtual Background files"
      }
    },
    "/users/{userId}/status": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "content": {
              "application/json": {}
            },
            "description": "**HTTP Status Code:** `204`<br>\nStatus updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room and Admin users' status cannot be activated or deactivated.<br><br>\n**Error Code:** `300`<br>\nYou cannot deactivate this user because the user has an upcoming Zoom Events scheduled.<br><br>\n**Error Code:** `3412`<br>Your request to activate the user was not approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber basic users. Please remove existing basic user(s) from your Users list or the Pending Users list before attempting to activate this user.<br>\n**Error Code:** `2033`<br>Your request to activate the basic user was not approved because you have already reached the maximum basic user limit allowed in your account. For additional help regarding this issue, contact the Zoom Customer Support team.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to [deactivate](https://support.zoom.us/hc/en-us/articles/115005269946-Remove-User-from-your-Account#h_6a9bc1c3-d739-4945-b1f2-00b3b88fb5cc) an active user or to [reactivate](https://support.zoom.us/hc/en-us/articles/115005269946-Remove-User-from-your-Account#h_16319724-d120-4be6-af5d-31582d134ea0) a deactivated user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nAn account owner or admins can deactivate as well as activate a user in a Zoom account. Deactivating a user will remove all licenses associated with a user. It will prevent the deactivated user from logging into their Zoom account. A deactivated user can be reactivated. Reactivating a user grants the user access to login to their Zoom account.\n\n**Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "userStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The action.",
                "properties": {
                  "action": {
                    "description": "The action types:<br>`activate` - Activate a deactivated user.<br>`deactivate` - Deactivate a user.",
                    "enum": [
                      "activate",
                      "deactivate"
                    ],
                    "type": "string",
                    "x-enum-descriptions": [
                      "set users status to active",
                      "set users status to inactive"
                    ],
                    "example": "activate"
                  }
                },
                "required": [
                  "action"
                ],
                "type": "object"
              }
            }
          },
          "description": "User status.",
          "required": true
        },
        "summary": "Update user status"
      }
    },
    "/users/{userId}/token": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nToken deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Revoke a user's SSO token. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nAfter calling this API, the SSO user will be logged out of their current Zoom session.\n\n**Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "userSSOTokenDelete",
        "summary": "Revoke a user's SSO token"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "description": "The user token type: \n* `zak` — A Zoom Access Token (ZAK) is used to generate a URL to start meetings. See [Getting a Zoom Access Token (ZAK)](https://marketplace.zoom.us/docs/sdk/native-sdks/auth#generating-zoom-access-token-zak) for details. The ZAK's expiration time is two hours. For API users, the expiration time is 90 days. An API user is a user created via the `custCreate` action in the **[Create users](/api-reference/zoom-api/methods#operation/userCreate)** API. The maximum length of this value is `512`. \n* `token` — **Deprecated.** A Zoom token. This token expires in 14 days. You must make the request again after expiration to receive a new token. This query parameter returns a null value if the user signed in to Zoom via Google or Facebook. The maximum length of this value is `512`. \n\n This value defaults to `token`.",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "token",
              "enum": [
                "token",
                "zak"
              ],
              "maxLength": 512,
              "type": "string",
              "example": "zak"
            }
          },
          {
            "description": "The ZAK expiration time to live (TTL). The value of this query parameter denotes the expiry time of the ZAK, in seconds. To update the user's ZAK TTL, use this field with the `zak` value for the `type` query parameter. \n\n This value defaults to `7200` or `7776000` (90 days) for API users. The maximum value is one year.",
            "in": "query",
            "name": "ttl",
            "schema": {
              "default": 7200,
              "type": "integer",
              "example": 7200
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "token": {
                      "description": "The user's ZAK or token value.",
                      "example": "6IjAwMDAwMSIsInptX3NrbSI6InptX",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\n Token returned."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User does not exist: $userId"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to get a user's Zoom token or Zoom Access Token (ZAK). For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. \n\n **Scopes:** `user:read:admin`, `user:read` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "userToken",
        "summary": "Get a user's token"
      }
    },
    "/users/{userId}/tsp": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "tsp_accounts": {
                      "items": {
                        "description": "List of TSP accounts.",
                        "properties": {
                          "conference_code": {
                            "description": "Conference code: numeric value, length is less than 16.",
                            "maxLength": 16,
                            "minLength": 1,
                            "type": "string",
                            "example": "0125"
                          },
                          "dial_in_numbers": {
                            "description": "List of dial in numbers.",
                            "items": {
                              "properties": {
                                "code": {
                                  "description": "Country code.",
                                  "maxLength": 6,
                                  "type": "string",
                                  "example": "1"
                                },
                                "country_label": {
                                  "description": "Country Label, if passed, will display in place of code.",
                                  "maxLength": 10,
                                  "type": "string",
                                  "example": "America"
                                },
                                "number": {
                                  "description": "Dial-in number: length is less than 16.",
                                  "maxLength": 16,
                                  "minLength": 1,
                                  "type": "string",
                                  "example": "+1 1000200200"
                                },
                                "type": {
                                  "description": "Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>\n`media_link` - Media link",
                                  "enum": [
                                    "toll",
                                    "tollfree",
                                    "media_link"
                                  ],
                                  "type": "string",
                                  "x-enum-descriptions": [
                                    "Toll number <br/>",
                                    "Toll free number <br/>",
                                    "Media link phone number <br/>"
                                  ],
                                  "example": "toll"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "id": {
                            "description": "The TSP credential ID.",
                            "enum": [
                              "1",
                              "2"
                            ],
                            "type": "string",
                            "example": "1"
                          },
                          "leader_pin": {
                            "description": "Leader PIN: numeric value, length is less than 16.",
                            "maxLength": 16,
                            "minLength": 1,
                            "type": "string",
                            "example": "11189898"
                          },
                          "tsp_bridge": {
                            "description": "Telephony bridge\n",
                            "enum": [
                              "US_TSP_TB",
                              "EU_TSP_TB"
                            ],
                            "type": "string",
                            "example": "US_TSP_TB"
                          }
                        },
                        "required": [
                          "conference_code",
                          "leader_pin"
                        ],
                        "title": "TSP Accounts List",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nTSP account list returned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `2024`<br>\nAccount has not enabled TSP.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          }
        },
        "tags": [
          "TSP"
        ],
        "description": "A user can have a maximum of two TSP accounts. Use this API to list all TSP accounts of a user.<br><br>\n**Scopes:** `tsp:read:admin` `tsp:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "userTSPs",
        "summary": "List user's TSP accounts"
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TSP"
                }
              }
            },
            "description": "**HTTP Status Code:** `201`<br>\nTSP account added."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad Request.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP.<br>\n**Error Code:**`300`<br>\nMedia link is required for AT&T TSP accounts.<br>\n**Error Code:** `300`<br>\nYou can add a max of two tsp configs.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          }
        },
        "tags": [
          "TSP"
        ],
        "description": "Add a user's TSP account.<br><br>\n**Scopes:** `tsp:write:admin` `tsp:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId": "userTSPCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TSP"
              }
            }
          },
          "description": "TSP account.",
          "required": true
        },
        "summary": "Add a user's TSP account"
      }
    },
    "/users/{userId}/tsp/settings": {
      "patch": {
        "parameters": [
          {
            "description": "The userId or email address of the user.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6dfgdfgdg444447b0egga"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**Status Code:** `204` **No Content** <br>\nURL set successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code**: `2000`<br>\nNot TSP special account.<br>\n\nThs error means that the account does not have special TSP privilege. Contact Zoom Developer Support for details.<br>\n**Error Code**: `2024`<br>\n Account not enable TSP"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nUser ID not found.<br>\n**Error Code**: `1001`<br>\nUser {userId} not exist or not belong to this account.\n**Error Code**: `1120`<br>\nInvite not exist.\n\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "TSP"
        ],
        "description": "A global dial-in page can provide a list of global access numbers using which audio conferencing can be conducted. By calling this API, you can set the url for the global dial-in page of a user whose Zoom account has TSP and special TSP with third-party audio conferencing options enabled. <p></p>\n**Scopes:**`tsp:write:admin` `tsp:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId": "tspUrlUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tsp-global-dial-in"
              }
            }
          },
          "description": "Global dial-in URL of the user."
        },
        "summary": "Set global dial-in URL for a TSP user"
      }
    },
    "/users/{userId}/tsp/{tspId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/TSPId"
          }
        ],
        "responses": {
          "204": {
            "description": "**Status Code:** `204` **No Content**<br>\nTSP account deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:**`2024`<br>\nAccount not enable TSP.<br>\n**Error Code:** `300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:** `300`<br>\nTSP Config does not exist.<br>\n**Error Code:** `300`<br>\nAt least one tsp config must be available."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          }
        },
        "tags": [
          "TSP"
        ],
        "description": "Delete a user's TSP account.<br><br>\n**Scopes:** `tsp:write:admin` `tsp:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId": "userTSPDelete",
        "summary": "Delete a user's TSP account"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/TSPId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "TSP account of the user.",
                  "properties": {
                    "conference_code": {
                      "description": "Conference code: numeric value, length is less than 16.",
                      "maxLength": 16,
                      "minLength": 1,
                      "type": "string",
                      "example": "0125"
                    },
                    "dial_in_numbers": {
                      "description": "List of dial in numbers.",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Country code.",
                            "maxLength": 6,
                            "type": "string",
                            "example": "1"
                          },
                          "country_label": {
                            "description": "Country Label, if passed, will display in place of code.",
                            "maxLength": 10,
                            "type": "string",
                            "example": "America"
                          },
                          "number": {
                            "description": "Dial-in number: length is less than 16.",
                            "maxLength": 16,
                            "minLength": 1,
                            "type": "string",
                            "example": "+1 1000200200"
                          },
                          "type": {
                            "description": "Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number. <br> `media_link` - Media link phone number. This is used for PSTN integration instead of a paid bridge number.",
                            "enum": [
                              "toll",
                              "tollfree",
                              "media_link"
                            ],
                            "type": "string",
                            "x-enum-descriptions": [
                              "Toll number <br/>",
                              "Toll free number <br/>",
                              "Media link phone number <br/>"
                            ],
                            "example": "toll"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "id": {
                      "description": "The TSP account ID.",
                      "type": "string",
                      "example": "1"
                    },
                    "leader_pin": {
                      "description": "Leader PIN: numeric value, length is less than 16.",
                      "maxLength": 16,
                      "minLength": 1,
                      "type": "string",
                      "example": "11189898"
                    },
                    "tsp_bridge": {
                      "description": "Telephony bridge",
                      "enum": [
                        "US_TSP_TB",
                        "EU_TSP_TB"
                      ],
                      "type": "string",
                      "example": "US_TSP_TB"
                    }
                  },
                  "required": [
                    "conference_code",
                    "leader_pin"
                  ],
                  "title": "TSP Account",
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nTSP account retrieved successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:** `300`<br>\nTSP Config does not exist.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          }
        },
        "tags": [
          "TSP"
        ],
        "description": "Each user can have a maximum of two TSP accounts. Use this API to retrieve details of a specific TSP account enabled for a specific user.<br><br>\n**Scopes:** `tsp:read:admin` `tsp:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId": "userTSP",
        "summary": "Get a user's TSP account"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/TSPId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:**`204` **No Content**<br>\nTSP account updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP.<br>\n**Error Code:**`300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:**`300`<br>\nTSP Config does not exist.<br>\n**Error Code:**`300`<br>\nAt least one tsp config must be available.<br>\n**Error Code:**`300`<br>\nMedia link is required for AT&T TSP accounts.\n**Error Code:**`300`<br>\nInvalid parameter: tsp_bridge.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          }
        },
        "tags": [
          "TSP"
        ],
        "description": "Update a user's TSP account.<br><br>\n**Scopes:** `tsp:write:admin` `tsp:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId": "userTSPUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "TSP account.",
                "properties": {
                  "conference_code": {
                    "description": "Conference code: numeric value, length is less than 16.",
                    "maxLength": 16,
                    "minLength": 1,
                    "type": "string",
                    "example": "0125"
                  },
                  "dial_in_numbers": {
                    "description": "List of dial in numbers.",
                    "items": {
                      "properties": {
                        "code": {
                          "description": "Country code.",
                          "maxLength": 6,
                          "type": "string",
                          "example": "1"
                        },
                        "country_label": {
                          "description": "Country Label, if passed, will display in place of code.",
                          "maxLength": 10,
                          "type": "string",
                          "example": "America"
                        },
                        "number": {
                          "description": "Dial-in number: length is less than 16.",
                          "maxLength": 16,
                          "minLength": 1,
                          "type": "string",
                          "example": "+1 1000200200"
                        },
                        "type": {
                          "description": "Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>`media_link` - Media Link Phone Number. It is used for PSTN integration instead of paid bridge number.",
                          "enum": [
                            "toll",
                            "tollfree",
                            "media_link"
                          ],
                          "type": "string",
                          "x-enum-descriptions": [
                            "Toll number <br/>",
                            "Toll free number <br/>",
                            "Media link phone number <br/>"
                          ],
                          "example": "toll"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "leader_pin": {
                    "description": "Leader PIN: numeric value, length is less than 16.",
                    "maxLength": 16,
                    "minLength": 1,
                    "type": "string",
                    "example": "11189898"
                  },
                  "tsp_bridge": {
                    "description": "Telephony bridge",
                    "enum": [
                      "US_TSP_TB",
                      "EU_TSP_TB"
                    ],
                    "type": "string",
                    "example": "US_TSP_TB"
                  }
                },
                "required": [
                  "conference_code",
                  "leader_pin"
                ],
                "title": "TSP Account",
                "type": "object"
              }
            }
          },
          "description": "TSP account.",
          "required": true
        },
        "summary": "Update a TSP account"
      }
    },
    "/users/{userId}/webinar_templates": {
      "get": {
        "summary": "List webinar templates",
        "description": "Use this API to list a user's [webinar templates](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates). For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. \n\nWhen you schedule a webinar, you can save the settings for that webinar as a template for scheduling future webinars.  To use a template when scheduling a webinar, use the `id` value in this API response in the `template_id` field of the [**Create a webinar**](/api-reference/zoom-api/methods#operation/webinarCreate) API. \n\n**Scopes:** `webinar:read`, `webinar:read:admin` \n\n**Prerequisites:** \n* A Pro or a higher account with the [Zoom Webinar plan](https://zoom.us/pricing/webinar).",
        "operationId": "listWebinarTemplates",
        "tags": [
          "Webinars"
        ],
        "parameters": [
          {
            "description": "The user's ID. To get a user's ID, use the [**List users**](/api-reference/zoom-api/ma#operation/users) API. For user-level apps, pass the `me` value instead of the user ID value.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "abcD3ojfdbjfg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK** <br>\nList of existing templates returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "templates": {
                      "type": "array",
                      "description": "Information about the webinar templates.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The webinar template's ID.",
                            "example": "ull6574eur"
                          },
                          "name": {
                            "type": "string",
                            "description": "The webinar template's name.",
                            "example": "Weekly Meeting Template"
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `200`<br> Cannot use webinar API, you need to subscribe webinar plan and then enable webinar for this user:{userId}.<br>\n**Error Code:** `1001`<br>\n* User not exist: {userId}.\n* User {userId} does not exist or does not belong to this account."
          }
        }
      }
    },
    "/users/{userId}/webinars": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebinarList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nList of webinar objects returned."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Use this API to list all the webinars scheduled by or on-behalf a user (webinar host). For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. \n\n Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing webinars. Webinars allow a host to broadcast a Zoom meeting to up to 10,000 attendees. \n\n**Note:** This API only returns a user's [unexpired webinars](https://support.zoom.us/hc/en-us/articles/201362373-Meeting-ID#h_c73f9b08-c1c0-4a1a-b538-e01ebb98e844). \n\n **Scopes:** `webinar:read:admin`, `webinar:read` </br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \n\n **Prerequisites:** \n* A Pro or higher plan with the Webinar add-on.",
        "operationId": "webinars",
        "summary": "List webinars"
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "host_email": {
                          "description": "Email address of the meeting host.",
                          "format": "email",
                          "type": "string",
                          "example": "jchill@example.com"
                        },
                        "host_id": {
                          "description": "ID of the user set as host of the webinar.",
                          "type": "string",
                          "example": "30R7kT7bTIKSNUFEuH_Qlg"
                        },
                        "id": {
                          "description": "Webinar ID in \"**long**\" format(represented as int64 data type in JSON), also known as the webinar number.",
                          "format": "int64",
                          "type": "integer",
                          "example": 95204914252
                        },
                        "registrants_confirmation_email": {
                          "description": "Specify whether or not registrants of this Webinar should receive confirmation emails.",
                          "type": "boolean",
                          "example": true
                        },
                        "template_id": {
                          "description": "Unique identifier of the Webinar template. Use this field only if you would like to [schedule the webinar using an existing template](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates#schedule). The value of this field can be retrieved from [**List webinar templates**](/api-reference/zoom-api/methods#operation/listWebinarTemplates) API.\nYou must provide the user ID of the host instead of the email address in the `userId` path parameter in order to use a template for scheduling a Webinar.",
                          "type": "string",
                          "example": "ull6574eur"
                        },
                        "uuid": {
                          "description": "Unique identifier of a Webinar. Each Webinar instance will generate its own UUID(i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Once a Webinar ends, the value of uuid for the same webinar will be different from when it was scheduled.",
                          "type": "string",
                          "example": "Bznyg8KZTdCVbQxvS/oZ7w=="
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/WebinarInfo"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `201`<br>\nWebinar created."
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>\nA maximum of \"{rateLimitNumber}\" webinars can be created and updated for a single user in one day."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`\nSubscription plan for webinar is missing. Enable webinar for this user once the subscription plan is added:{userId}.<br>\n* Users in '{0}' have been blocked from joining meetings and webinars. To unblock them, go to the Settings page in the Zoom web portal and update 'Block users in specific domains from joining meetings and webinars'.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Use this API to schedule a webinar for a user (webinar host). For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. \n\nZoom users with a [Webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. Webinars allow a host to broadcast a Zoom meeting to up to 10,000 attendees. \n\n**Scopes:** `webinar:write:admin`, `webinar:write`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n* This API has a daily rate limit of **100 requests per day**. The rate limit is applied to the `userId` of the **webinar host** used to make the request. \n\n**Prerequisites:** \n* A Pro or higher plan with a Webinar add-on.",
        "operationId": "webinarCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/create_webinar"
                  }
                ],
                "description": "Webinar object.",
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Create a webinar"
      }
    },
    "/webinars/{webinarId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          },
          {
            "$ref": "#/components/parameters/OccurrenceId"
          },
          {
            "description": "`true`: Notify panelists and registrants about the webinar cancellation via email. \n\n`false`: Do not send any email notification to webinar registrants and panelists. \n\nThe default value of this field is `false`.",
            "in": "query",
            "name": "cancel_webinar_reminder",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nSuccess"
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nWebinar deleted."
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Invalid webinar ID."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3002`<br>\nSorry, you cannot delete this webinar since it is in progress.<br>\n**Error Code:** `3003`<br>\nYou are not the webinar host.<br>\n**Error Code:** `3007`<br>\nSorry, you cannot delete this webinar since it has ended.<br>\n**Error Code:** `3018`<br>\nNot allowed to delete PMI.<br>\n**Error Code:** `3037`<br>\nNot allowed to delete PAC.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Delete a Webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**<br>\n* Pro or higher plan with a Webinar Add-on.",
        "operationId": "webinarDelete",
        "summary": "Delete a webinar"
      },
      "get": {
        "parameters": [
          {
            "description": "The webinar's ID or universally unique ID (UUID).",
            "in": "path",
            "name": "webinarId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "95204914252"
            }
          },
          {
            "description": "Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [**Create a webinar**](/api-reference/zoom-api/methods#operation/webinarCreate) API, you can retrieve the Occurrence ID from the response of the API call.",
            "in": "query",
            "name": "occurrence_id",
            "schema": {
              "type": "string",
              "example": "1648538280000"
            }
          },
          {
            "description": "Set the value of this field to `true` if you would like to view Webinar details of all previous occurrences of a recurring Webinar.",
            "in": "query",
            "name": "show_previous_occurrences",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "host_email": {
                          "description": "Email address of the meeting host.",
                          "format": "email",
                          "type": "string",
                          "example": "jchill@example.com"
                        },
                        "host_id": {
                          "description": "ID of the user set as host of webinar.",
                          "type": "string",
                          "example": "30R7kT7bTIKSNUFEuH_Qlg"
                        },
                        "id": {
                          "description": "Webinar ID in \"**long**\" format(represented as int64 data type in JSON), also known as the webinar number.",
                          "format": "int64",
                          "type": "integer",
                          "example": 97871060099
                        },
                        "uuid": {
                          "description": "Unique Webinar ID. Each Webinar instance will generate its own Webinar UUID (i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). You can retrieve a list of UUIDs from past Webinar instances using the [**List past webinar instances**](/api-reference/zoom-api/methods#operation/pastWebinars) API. Please double encode your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it.\n\n",
                          "type": "string",
                          "example": "m3WqMkvuRXyYqH+eKWhk9w=="
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/WebinarInfo"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nSuccess"
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Invalid webinar ID."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.<br>Use this API to get details of a scheduled webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>**Prerequisites:**\n* Pro or higher plan with a Webinar Add-on.",
        "operationId": "webinar",
        "summary": "Get a webinar"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          },
          {
            "description": "Webinar occurrence id. Support change of agenda, start_time, duration, settings: {host_video, panelist_video, hd_video, watermark, auto_recording}",
            "in": "query",
            "name": "occurrence_id",
            "schema": {
              "type": "string",
              "example": "1648538280000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar subscription plan is missing. Enable webinar for this user once the subscription is added:{userId}."
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nWebinar updated."
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Invalid webinar Id.<br>\nInvalid recurrence settings.<br>\nA maximum of \"{rateLimitNumber}\" webinars can be created and updated for a single user in one day."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n* Users in '{0}' have been blocked from joining meetings and webinars. To unblock them, go to the Settings page in the Zoom web portal and update 'Block users in specific domains from joining meetings and webinars'.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Use this API to make updates to a scheduled webinar. \n\n**Scopes:** `webinar:write:admin`, `webinar:write` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n* This API has a daily rate limit of **100 requests per day**. The rate limit is applied to the `userId` of the **webinar host** used to make the request. \n\n**Prerequisites:** \n* A Pro or higher plan with a Webinar add-on.",
        "operationId": "webinarUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebinarUpdate"
              }
            }
          },
          "description": "Webinar.",
          "required": true
        },
        "summary": "Update a webinar"
      }
    },
    "/webinars/{webinarId}/batch_registrants": {
      "post": {
        "parameters": [
          {
            "description": "Unique identifier of the webinar.",
            "in": "path",
            "name": "webinarId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "97871060099"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "registrants": {
                      "items": {
                        "properties": {
                          "email": {
                            "description": "Email address of the registrant.",
                            "type": "string",
                            "example": "jchill@example.com"
                          },
                          "join_url": {
                            "description": "Unique URL using which registrant can join the webinar.",
                            "type": "string",
                            "example": "https://example.com/j/11111"
                          },
                          "registrant_id": {
                            "description": "Unique identifier of the registrant.",
                            "type": "string",
                            "example": "-rOym-zdTHOdbT3A7u7u5g"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK** <br>\nRegistrants added."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\nBad Request \n\n**Error Code:** `200` <br>\nWebinar plan is missing. You must subscribe to the Webinar plan and enable webinars for the \"{0}\" user to perform this action. \n\n**Error Code:** `300` <br>\nThis API can only be used for scheduled webinars (type 5). Batch registration is not supported for other webinar types. \n\n**Error Code:** `3038` <br>\nThe webinar is over. You cannot register now. If you have any questions, contact the Webinar host. \n\n**Error Code:** `3000` <br>\nRegistration not enabled for this webinar: {0} \n\n**Error Code:** `3000` <br>\nYou have reached the limit for the number of attendees you can add. Contact Zoom Support for more information. \n\n**Error Code:** `3000` <br>\n The Zoom REST API does not support paid registration."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `3001`<br>\nWebinar does not exist: {0}.<br><br>\n**Error Code:** `3043`<br>\nWebinar has reached maximum attendee capacity.<br><br>\n**Error Code:** `404`<br>\nRegistration has not been enabled for this meeting: {meetingId}."
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\nYou have exceeded the daily rate limit of \"{0}\" for webinar **Perform batch registration** API requests for the registrant \"{1}\". You can resume these API requests at GMT 00:00:00."
          }
        },
        "security": [
          {
            "OAuth": []
          },
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Use this API to register up to 30 registrants at once for a scheduled webinar that requires [registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-webinar-with-registration). <br>\n\n**Prerequisites:**<br>\n* The webinar host must be a Licensed user.\n* The webinar should be of type `5`, i.e., it should be a scheduled webinar. Other types of webinars are not supported by this API.<br><br>\n**Scope:** `webinar:write`, `webinar:write:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n\n\n\n\n\n\n\n",
        "operationId": "addBatchWebinarRegistrants",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "auto_approve": {
                    "description": "If a meeting was scheduled with approval_type `1` (manual approval), but you would like to automatically approve the registrants that are added via this API, you can set the value of this field to `true`. \n\nYou **cannot** use this field to change approval setting for a meeting  that was originally scheduled with approval_type `0` (automatic approval).",
                    "type": "boolean",
                    "example": true
                  },
                  "registrants": {
                    "items": {
                      "properties": {
                        "email": {
                          "description": "Email address of the registrant.",
                          "format": "email",
                          "type": "string",
                          "example": "jchill@example.com"
                        },
                        "first_name": {
                          "description": "First name of the registrant.",
                          "type": "string",
                          "example": "Jill"
                        },
                        "last_name": {
                          "description": "Last name of the registrant.",
                          "type": "string",
                          "example": "Chill"
                        }
                      },
                      "required": [
                        "first_name",
                        "email"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Perform batch registration"
      }
    },
    "/webinars/{webinarId}/invite_links": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InviteLinkResponse"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `201` <br>\nWebinar Invite Links Created"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\n* Webinar Id does not exist.<br>\n* Invalid Webinar Id.<br>\n**Error Code:** `3001` Webinar does not exist: {webinarId}.<br>\n**Error Code:** `1001` User does not exist: {userId}.<br>\n**Error Code:** `200` Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Use this API to create a batch of invitation links for a webinar.\n\n**Scopes**: `webinar:write:admin`, `webinar:write`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n\n* Business, Education or API Plan with Webinar add-on.",
        "operationId": "webinarInviteLinksCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InviteLink"
                  }
                ]
              }
            }
          },
          "description": "Webinar invite link object",
          "required": true
        },
        "summary": "Create webinar's invite links"
      }
    },
    "/webinars/{webinarId}/livestream": {
      "get": {
        "parameters": [
          {
            "description": "The webinar's unique ID.",
            "in": "path",
            "name": "webinarId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "95204914252"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "page_url": {
                      "description": "Live streaming page URL. This is the URL using which anyone can view the live stream of the webinar.",
                      "type": "string",
                      "example": "https://example.com/livestream/123"
                    },
                    "stream_key": {
                      "description": "Stream Key.",
                      "type": "string",
                      "example": "contact-it@example.com"
                    },
                    "stream_url": {
                      "description": "Stream URL.",
                      "type": "string",
                      "example": "https://example.com/livestream"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**<br>\nLive Stream details returned.\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` <br>\n* Webinar Id does not exist.<br>\n* Invalid Webinar Id.<br>\n**Error Code:** `3001` Webinar does not exist: {webinarId}.<br>\n**Error Code:** `1001` User does not exist: {userId}.<br>\n**Error Code:** `200` <br>\n* Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}.<br>\n* The current user has not enabled the custom live streaming feature of the webinar."
          }
        },
        "tags": [
          "Webinars"
        ],
        "description": "Zoom allows users to [live stream a webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Use this API to get a webinar's live stream configuration details such as Stream URL, Stream Key and Page URL.<br><br>\n**Prerequisites:**<br>\n* Pro or higher plan with a Webinar Add-on.<br>\n* Live streaming details must have been [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n\n\n",
        "operationId": "getWebinarLiveStreamDetails",
        "summary": "Get live stream details"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nMeeting live stream updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` <br>\n* Webinar Id does not exist.<br>\n* Invalid Webinar Id.<br>\n**Error Code:** `3001` Webinar does not exist: {webinarId}.<br>\n**Error Code:** `1001` User does not exist: {userId}.<br>\n**Error Code:** `200` <br>\n* Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}.<br>\n* The current user has not enabled the custom live streaming feature of the webinar."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Zoom allows users to [live stream a webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Use this API to update a webinar's live stream information.<br><br>\n**Prerequisites:**<br>\n* Pro or higher plan with a Webinar Add-on.<br>\n* Live streaming details must have been [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n\n",
        "operationId": "webinarLiveStreamUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebinarLiveStream"
              }
            }
          },
          "description": "Webinar",
          "required": true
        },
        "summary": "Update a live stream"
      }
    },
    "/webinars/{webinarId}/livestream/status": {
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nMeeting live stream updated.\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` <br>\n* Webinar Id does not exist.<br>\n* Invalid Webinar Id.<br>\n**Error Code:** `3001` Webinar does not exist: {webinarId}.<br>\n**Error Code:** `1001` User does not exist: {userId}.<br>\n**Error Code:** `200` <br>\n* Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}.<br>\n* The current user has not enabled the custom live streaming feature of the webinar.<br>\n* Webinar {0} has not started. <br>\n**Error Code:** `3000` The current webinar is not configured with a custom streaming service."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Zoom allows users to [live stream a webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Use this API to update the status of a webinar's live stream.<br><br>\n**Prerequisites:**<br>\n* Pro or higher plan with a Webinar Add-on.<br>\n* Live streaming details must have been [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n",
        "operationId": "webinarLiveStreamStatusUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebinarLiveStreamStatus"
              }
            }
          },
          "description": "Webinar",
          "required": true
        },
        "summary": "Update Live Stream Status"
      }
    },
    "/webinars/{webinarId}/panelists": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nPanelists removed."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Remove all the panelists from a Webinar.<br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br> ",
        "operationId": "webinarPanelistsDelete",
        "summary": "Remove panelists"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebinarPanelistList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription missing. Enable webinar for this user once the subscription is added."
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Panelists in a Webinar can view and send video, screen share, annotate, etc and do much more compared to attendees in a Webinar. \n\nUse this API to list all the panelists of a Webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br> ",
        "operationId": "webinarPanelists",
        "summary": "List panelists"
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription missing. Enable webinar for this user once the subscription is added."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Webinar Id.",
                      "type": "string",
                      "example": "95204914252"
                    },
                    "updated_at": {
                      "description": "The time at which the panelist was added.",
                      "format": "date-time",
                      "type": "string",
                      "example": "2022-03-26T07:30:16Z"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201`<br>\nPanelist created."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3000`<br>\nYou have reached the limit for the number of panelists you can add. Contact Zoom Support for more information.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br> You have exceeded the daily rate limit of \"{0}\" for webinar **Add panelists** API requests for the panelist \"{1}\". You can resume these API requests at GMT 00:00:00."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Panelists in a Webinar can view and send video, screen share, annotate, etc and do much more compared to attendees in a webinar.<br>Use this API to [add panelists](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_7550d59e-23f5-4703-9e22-e76bded1ed70) to a scheduled webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n\n**Prerequisites:**\n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br> ",
        "operationId": "webinarPanelistCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebinarPanelist"
              }
            }
          },
          "required": true
        },
        "summary": "Add panelists"
      }
    },
    "/webinars/{webinarId}/panelists/{panelistId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          },
          {
            "description": "The panelist ID or panelist email.",
            "in": "path",
            "name": "panelistId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Tg2b6GhcQKKbV7nSCbDKug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}."
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nPanelists removed."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {email} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "[Remove](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_de31f237-a91c-4fb2-912b-ecfba8ec5ffb) a single panelist from a webinar.<br> You can retrieve the `panelistId` by calling **List Panelists API**.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n\n**Prerequisites:**<br>\n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br> ",
        "operationId": "webinarPanelistDelete",
        "summary": "Remove a panelist"
      }
    },
    "/webinars/{webinarId}/polls": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          },
          {
            "description": "Whether to query for polls with the **Anonymous** option enabled: \n* `true` — Query for polls with the **Anonymous** option enabled. \n* `false` — Do not query for polls with the **Anonymous** option enabled.",
            "in": "query",
            "name": "anonymous",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PollList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nList polls of a Webinar  returned"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br>\n **Error Code:** `4400` <br> Webinar polls disabled. To enable this feature, enable the \"Webinar Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "List all the [polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) of a Webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId": "webinarPolls",
        "summary": "List a webinar's polls "
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "Webinar Poll ID",
                          "type": "string",
                          "example": "QalIoKWLTJehBJ8e1xRrbQ"
                        },
                        "status": {
                          "description": "Status of the Webinar Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results",
                          "enum": [
                            "notstart",
                            "started",
                            "ended",
                            "sharing"
                          ],
                          "type": "string",
                          "x-enum-descriptions": [
                            "Poll not start",
                            "Poll started",
                            "Poll ended",
                            "Poll is sharing"
                          ],
                          "example": "notstart"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/Poll"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `201`<br>\nWebinar Poll Created"
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Invalid webinarId."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br>\n **Error Code:** `4400` <br>\n* Webinar polls disabled. To enable this feature, enable the \"Webinar Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n* Advanced webinar polls disabled. To enable this feature, enable the \"Allow host to create advanced polls and quizzes\" setting in the Zoom web portal's \"Settings\" interface."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Create a [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) for a webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId": "webinarPollCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Poll"
                  }
                ]
              }
            }
          },
          "description": "Webinar poll object",
          "required": true
        },
        "summary": "Create a webinar's poll"
      }
    },
    "/webinars/{webinarId}/polls/{pollId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          },
          {
            "description": "The poll ID",
            "in": "path",
            "name": "pollId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "QalIoKWLTJehBJ8e1xRrbQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nWebinar Poll deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br>\n **Error Code:** `4400` <br> Webinar polls disabled. To enable this feature, enable the \"Webinar Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar poll not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Delete a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId": "webinarPollDelete",
        "summary": "Delete a webinar poll"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          },
          {
            "description": "The poll ID",
            "in": "path",
            "name": "pollId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "QalIoKWLTJehBJ8e1xRrbQ"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "Webinar Poll ID",
                          "type": "string",
                          "example": "QalIoKWLTJehBJ8e1xRrbQ"
                        },
                        "status": {
                          "description": "Status of the Webinar Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results",
                          "enum": [
                            "notstart",
                            "started",
                            "ended",
                            "sharing"
                          ],
                          "type": "string",
                          "x-enum-descriptions": [
                            "Poll not start",
                            "Poll started",
                            "Poll ended",
                            "Poll is sharing"
                          ],
                          "example": "notstart"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/Poll"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nWebinar Poll object returned"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br>\n **Error Code:** `4400` <br> Webinar polls disabled. To enable this feature, enable the \"Webinar Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Get a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) details.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId": "webinarPollGet",
        "summary": "Get a webinar poll"
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          },
          {
            "description": "The poll ID",
            "in": "path",
            "name": "pollId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "QalIoKWLTJehBJ8e1xRrbQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nWebinar Poll Updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br>\n **Error Code:** `4400` <br>\n* Webinar polls disabled. To enable this feature, enable the \"Webinar Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n* Advanced webinar polls disabled. To enable this feature, enable the \"Allow host to create advanced polls and quizzes\" setting in the Zoom web portal's \"Settings\" interface."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar poll not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Update a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId": "webinarPollUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Poll"
                  }
                ]
              }
            }
          },
          "description": "Webinar Poll",
          "required": true
        },
        "summary": "Update a webinar poll"
      }
    },
    "/webinars/{webinarId}/registrants": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          },
          {
            "$ref": "#/components/parameters/OccurrenceId"
          },
          {
            "$ref": "#/components/parameters/RegistrantStatus"
          },
          {
            "$ref": "#/components/parameters/TrackingSourceId"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebinarRegistrantList"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}."
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Invalid webinar ID."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the Webinar.<br>\nUse this API to list all the users that have registered for a webinar.<br><br>\n**Prerequisites:**\n* Pro or higher plan with a Webinar Add-on.<br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n",
        "operationId": "webinarRegistrants",
        "summary": "List webinar registrants"
      },
      "post": {
        "summary": "Add a webinar registrant",
        "description": "Use this API to create and submit a user's registration for a webinar. Zoom users with a [Webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. Webinars allow hosts to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the webinar. \n\n**Scopes:** `webinar:write:admin`, `webinar:write` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n**Prerequisites:** \n* A Pro or higher plan with the Webinar add-on.",
        "operationId": "webinarRegistrantCreate",
        "tags": [
          "Webinars"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Information about the webinar registrant.",
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RegistrantPost"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string",
                        "description": "The registrant's language preference for confirmation emails: \n* `en-US` — English (US) \n* `de-DE` — German (Germany) \n* `es-ES` — Spanish (Spain) \n* `fr-FR` — French (France) \n* `jp-JP` — Japanese \n* `pt-PT` — Portuguese (Portugal) \n* `ru-RU` — Russian \n* `zh-CN` — Chinese (PRC) \n* `zh-TW` — Chinese (Taiwan) \n* `ko-KO` — Korean \n* `it-IT` — Italian (Italy) \n* `vi-VN` — Vietnamese \n* `pl-PL` — Polish \n* `Tr-TR` — Turkish",
                        "enum": [
                          "en-US",
                          "de-DE",
                          "es-ES",
                          "fr-FR",
                          "jp-JP",
                          "pt-PT",
                          "ru-RU",
                          "zh-CN",
                          "zh-TW",
                          "ko-KO",
                          "it-IT",
                          "vi-VN",
                          "pl-PL",
                          "Tr-TR"
                        ],
                        "example": "en-US"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          },
          {
            "in": "query",
            "name": "occurrence_ids",
            "description": "A comma-separated list of webinar occurrence IDs. You can get this value with the [Get a webinar](/api-reference/zoom-api/methods/#operation/webinarUpdate) API.",
            "schema": {
              "type": "string",
              "example": "1648538280000"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The webinar's ID.",
                      "example": "iFxeBPYun6SAiWUzBcEkX"
                    },
                    "join_url": {
                      "type": "string",
                      "description": "The URL the registrant can use to join the webinar.",
                      "example": "https://example.com/j/22222"
                    },
                    "registrant_id": {
                      "type": "string",
                      "description": "The registrant's ID.",
                      "example": "fdgsfh2ey82fuh"
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The webinar's start time.",
                      "example": "2021-07-13T21:44:51Z"
                    },
                    "topic": {
                      "type": "string",
                      "maxLength": 200,
                      "description": "The webinar's topic.",
                      "example": "My Webinar"
                    },
                    "occurrences": {
                      "$ref": "#/components/schemas/Occurrences"
                    }
                  }
                }
              }
            },
            "description": "**HTTP Status Code:** `201` <br>\nWebinar registration created."
          },
          "300": {
            "description": "**HTTP Status Code:** `300` \n* Invalid webinar ID. \n* Invalid parameter: occurrence_ids \n* Invalid username."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\nBad Request \n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId} \n\n**Error Code:** `3000` <br>\nThis webinar does not have registration as required: {webinarId}. \n\n**Error Code:** `3027` <br>\nHost cannot register. \n\n**Error Code:** `3034` <br>\nIf you have been invited, please input your work email address. \n\n**Error Code:** `3038` <br>\nWebinar is over, you cannot register now. If you have any questions, contact the webinar host. \n\n**Error Code:** `3000` <br>\nYou have reached the limit for the number of attendees you can add. Contact Zoom Support for more information. \n\n**Error Code:** `3000` <br>\nThe Zoom REST API does not support paid registration."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nWebinar not found. \n\n**Error Code:** `1001` <br>\nUser \"{userId}\" does not exist or does not belong to this account. \n\n**Error Code:** `3001` <br>\nWebinar \"{webinarId}\" not found or has expired."
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\nYou have exceeded the daily rate limit of \"{0}\" for **Add a webinar registrant** API requests for the registrant \"{1}\". You can resume these API requests at GMT 00:00:00."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/webinars/{webinarId}/registrants/questions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WebinarRegistrantQuestions"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nWebinar Registrant Question object returned"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>Webinar not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the Webinar.<br>Use this API to list registration questions and fields that are to be answered by users while registering for a Webinar.<br>\n**Prerequisites:**<br>  \n* Pro or higher plan with a Webinar Add-on.\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId": "webinarRegistrantsQuestionsGet",
        "summary": "List registration questions"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>Webinar Registrant Questions Updated"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>Webinar not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the Webinar.<br>Use this API to update registration questions and fields of a scheduled Webinar that are to be answered by users while registering for a Webinar.<br><br>\n**Prerequisites:**<br>  \n* Pro or higher plan with a Webinar Add-on.\n* Registration option for Webinar should be set as required to use this API. \n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "webinarRegistrantQuestionUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WebinarRegistrantQuestions"
                  }
                ]
              }
            }
          },
          "description": "Webinar Registrant Questions",
          "required": true
        },
        "summary": "Update registration questions"
      }
    },
    "/webinars/{webinarId}/registrants/status": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          },
          {
            "$ref": "#/components/parameters/OccurrenceId"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\n The webinar plan subscription is missing. Enable webinar for this user once the subscription is added: {userId}"
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\n Registrant status updated."
          },
          "300": {
            "description": "**HTTP Status Code:** `300` <br> Invalid webinar ID."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad request \n\n **Error Code:** `1010` <br>\n User does not belong to this account: {accountId}. \n\n **Error Code:** `3035` <br>\n Webinar has reached maximum attendee capacity."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Webinar not found. \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account. \n\n **Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired."
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n You have exceeded the daily rate limit of \"{0}\" for webinar **Update registrant's status** API requests for the registrant \"{1}\". You can resume these API requests at GMT 00:00:00."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Use this API to update webinar registrants' registration status. You can approve or deny a registrant, or revoke a registrant's approval. \n\n**Scopes:** `webinar:write:admin`, `webinar:write` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "webinarRegistrantStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "description": "The registration action to perform: \n* `approve` — Approve the registrant. \n* `deny` — Reject the registrant. \n* `cancel` — Cancel the registrant's approval.",
                    "enum": [
                      "approve",
                      "deny",
                      "cancel"
                    ],
                    "type": "string",
                    "x-enum-descriptions": [
                      "Approve",
                      "Deny",
                      "Cancel"
                    ],
                    "example": "approve"
                  },
                  "registrants": {
                    "description": "The registrant information.",
                    "items": {
                      "properties": {
                        "email": {
                          "description": "The registrant's email address.",
                          "format": "email",
                          "type": "string",
                          "example": "jchill@example.com"
                        },
                        "id": {
                          "description": "The registrant's ID.",
                          "type": "string",
                          "example": "9tboDiHUQAeOnbmudzWa5g"
                        }
                      },
                      "type": "object"
                    },
                    "maximum": 30,
                    "type": "array"
                  }
                },
                "required": [
                  "action"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Update registrant's status"
      }
    },
    "/webinars/{webinarId}/registrants/{registrantId}": {
      "delete": {
        "parameters": [
          {
            "description": "The webinar ID.",
            "in": "path",
            "name": "webinarId",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 95204914252
            }
          },
          {
            "description": "The registrant ID.",
            "in": "path",
            "name": "registrantId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "9tboDiHUQAeOnbmudzWa5g"
            }
          },
          {
            "description": "The webinar occurrence ID.",
            "in": "query",
            "name": "occurrence_id",
            "schema": {
              "type": "string",
              "example": "1648538280000"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP status code:** `204` <br>\nOK"
          },
          "400": {
            "description": "**HTTP status code:** `400` <br>\nBad Request<br>\n\n**Error code:** `200`<br>\nWebinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {0}.<br>\n\n**Error code:** `300`<br>\nThe value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.<br>\n\n**Error code:** `404` <br>\nRegistration has not been enabled for this webinar: {0}.<br>\n\n**Error code:** `3000` <br>\nRegistrant {0} was not found.<br>\n\n**Error code:** `3001` <br>\nWebinar does not exist: {0}."
          }
        },
        "tags": [
          "Webinars"
        ],
        "description": "Delete a webinar registrant.<br><br>\n**Scopes**: `webinar:write:admin` `webinar:write`<br>\n <br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteWebinarRegistrant",
        "summary": "Delete a webinar registrant"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          },
          {
            "$ref": "#/components/parameters/RegistrantId"
          },
          {
            "$ref": "#/components/parameters/OccurrenceId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "95204914252"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/WebinarRegistrant"
                    },
                    {
                      "properties": {
                        "create_time": {
                          "format": "date-time",
                          "type": "string",
                          "example": "2022-03-26T06:44:14Z"
                        },
                        "join_url": {
                          "format": "string",
                          "type": "string",
                          "example": "https://example.com/j/11111"
                        },
                        "status": {
                          "type": "string",
                          "example": "approved"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "title": "Webinar Registrant",
                  "type": "object"
                }
              }
            },
            "description": "Success."
          },
          "300": {
            "description": "Invalid webinar ID."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the Webinar.<br>Use this API to get details on a specific user who has registered for the Webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**<br>\n* The account must have a Webinar plan.",
        "operationId": "webinarRegistrantGet",
        "summary": "Get a webinar registrant"
      }
    },
    "/webinars/{webinarId}/status": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}."
          },
          "204": {
            "description": "Webinar's status updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3063`<br>\nCan not end on-premise user's meeting:{meetingId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Update a webinar's status. Use this API to end an ongoing webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**<br>\n* The account must hold a valid [Webinar plan](https://zoom.us/webinar).",
        "operationId": "webinarStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "enum": [
                      "end"
                    ],
                    "type": "string",
                    "x-enum-descriptions": [
                      "end a webinar"
                    ],
                    "example": "end"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Update webinar status"
      }
    },
    "/webinars/{webinarId}/survey": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\n Webinar survey deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br> Bad Request \n\n **Error Code:** `300` <br>\n Invalid webinar ID. \n\n **Error Code:** `3000` <br>\n Webinar survey disabled. To enable this feature, enable the \"Webinar Survey\" setting in the Zoom web portal's \"Settings\" interface."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br> Not Found \n\n **Error Code:** `300` <br>\n Webinar ID does not exist. \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Use this API to delete a [webinar survey](https://support.zoom.us/hc/en-us/articles/360048745651). \n\n **Scopes:** `webinar:write`, `webinar:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* A Pro or higher plan with the Webinar Add-on. \n* The [**Webinar Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey) feature enabled in the host's account.",
        "operationId": "webinarSurveyDelete",
        "summary": "Delete a webinar survey"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WebinarSurvey"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>\n Webinar survey object returned."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br> Bad Request \n\n **Error Code:** `300` <br>\n Invalid webinar ID. \n\n **Error Code:** `3000` <br>\n Webinar survey disabled. To enable this feature, enable the \"Webinar Survey\" setting in the Zoom web portal's \"Settings\" interface."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br> Not Found \n\n **Error Code:** `300` <br>\n Webinar ID does not exist. \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Use this API to return information about a [webinar survey](https://support.zoom.us/hc/en-us/articles/360048745651). \n\n **Scopes:** `webinar:read`, `webinar:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* A Pro or higher plan with the Webinar add-on. \n* The [**Webinar Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey) feature enabled in the host's account.",
        "operationId": "webinarSurveyGet",
        "summary": "Get a webinar survey"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\n Webinar survey updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br> Bad Request \n\n **Error Code:** `300` <br>\n * Invalid webinar ID. <br>\n * Invalid third party survey: {third_party_survey}. \n\n **Error Code:** `3000` <br>\n Webinar survey disabled. To enable this feature, enable the \"Webinar Survey\" setting in the Zoom web portal's \"Settings\" interface."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br> Not Found \n\n **Error Code:** `300` <br>\n Webinar ID does not exist. \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "Use this API to update a [webinar survey](https://support.zoom.us/hc/en-us/articles/360048745651). \n\n **Scopes:** `webinar:write`, `webinar:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n **Prerequisites:** \n* A Pro or higher plan with the Webinar add-on. \n* The [**Webinar Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey) feature enabled in the host's account.",
        "operationId": "webinarSurveyUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WebinarSurvey"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "summary": "Update a webinar survey"
      }
    },
    "/webinars/{webinarId}/tracking_sources": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total_records": {
                      "description": "The total number of registration records for this Webinar.",
                      "type": "integer",
                      "example": 1
                    },
                    "tracking_sources": {
                      "description": "Tracking Sources object.",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Unique Identifier of the tracking source.",
                            "type": "string",
                            "example": "5516482804110"
                          },
                          "registration_count": {
                            "description": "Number of registrations made from this source.",
                            "type": "integer",
                            "example": 1
                          },
                          "source_name": {
                            "description": "Name of the source (platform) where the registration URL was shared.",
                            "type": "string",
                            "example": "https://example.com"
                          },
                          "tracking_url": {
                            "description": "Tracking URL. The URL that was shared for the registration.",
                            "type": "string",
                            "example": "https://example.com/webinar/register/5516482804110/WN_juM2BGyLQMyQ_ZrqiGRhLg"
                          },
                          "visitor_count": {
                            "description": "Number of visitors who visited the registration page from this source.",
                            "type": "integer",
                            "example": 1
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Webinars"
        ],
        "description": "[Webinar Registration Tracking Sources](https://support.zoom.us/hc/en-us/articles/360000315683-Webinar-Registration-Source-Tracking) allow you to see where your registrants are coming from if you share the webinar registration page in multiple platforms. You can then use the source tracking to see the number of registrants generated from each platform.<br> Use this API to list information on all the tracking sources of a Webinar.<br>\n**Scopes:** `webinar:read:admin`, `webinar:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n**Prerequisites**:<br>\n* [Webinar license](https://zoom.us/webinar).\n* Registration must be required for the Webinar.\n",
        "operationId": "getTrackingSources",
        "summary": "Get webinar tracking sources"
      }
    },
    "/webinars/{webinarId}/token": {
      "get": {
        "summary": "Get webinar's token",
        "description": "Use this API to get a webinar's [closed caption token (caption URL)](https://support.zoom.us/hc/en-us/articles/115002212983-Using-a-third-party-closed-captioning-service). This token lets you use a third-party service to stream text to their closed captioning software to the Zoom webinar. \n\n**Scopes:** `webinar:read`, `webinar:read:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n**Prerequisites:** \n* A Pro or higher plan with the Webinar add-on. \n* The **Closed captioning** setting enabled in the Zoom web portal. \n* \n* The **Allow use of caption API Token to integrate with 3rd-party Closed Captioning services** setting enabled.",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/WebinarId"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The webinar token type: \n* `closed_caption_token` — The third-party closed caption API token. \n\nThis defaults to `closed_caption_token`.",
            "schema": {
              "type": "string",
              "default": "closed_caption_token",
              "enum": [
                "closed_caption_token"
              ],
              "example": "closed_caption_token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nWebinar token returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Information about the webinar token.",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The generated webinar token.",
                      "example": "https://example.com/closedcaption?id=200610693&ns=GZHkEA==&expire=86400&spparams=id%2Cns%2Cexpire&signature=nYtXJqRKCW"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\nBad Request \n\n**Error Code:** `300` <br>\nInvalid webinar ID. \n\n**Error Code:** `3000` <br>\nClosed captioning disabled. To enable this feature, enable the \"Closed captioning\" and \"Allow use of caption API Token to integrate with 3rd-party Closed Captioning services\" settings in the Zoom web portal's \"Settings\" interface. \n\n**Error Code:** `3000` <br>\nWebinar {webinarId} has not started."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nNot Found \n\n**Error Code:** `300` <br>\nWebinar ID does not exist. \n\n**Error Code:** `3001` <br>\nWebinar does not exist: {webinarId}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "AccountId": {
        "description": "The account's ID.",
        "in": "path",
        "name": "accountId",
        "required": true,
        "schema": {
          "type": "string",
          "example": "ABCDE12345"
        }
      },
      "DeviceId": {
        "description": "The device ID.",
        "in": "path",
        "name": "deviceId",
        "required": true,
        "schema": {
          "type": "string",
          "example": "abceHewahkrehwiK"
        }
      },
      "FeedbackId": {
        "description": "Feedback Detail Id",
        "in": "path",
        "name": "feedbackId",
        "required": true,
        "schema": {
          "type": "string",
          "example": ""
        }
      },
      "FromDate": {
        "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
        "in": "query",
        "name": "from",
        "required": true,
        "schema": {
          "format": "date",
          "type": "string",
          "example": ""
        }
      },
      "GroupId": {
        "description": "The group ID.<br>\nCan be retrieved by calling the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API.",
        "in": "path",
        "name": "groupId",
        "required": true,
        "schema": {
          "type": "string",
          "example": "A4ql1FjgL913r"
        }
      },
      "LoginType": {
        "description": "The user's login method: \n* `0` — Facebook OAuth \n* `1` — Google OAuth \n* `24` — Apple OAuth \n* `27` — Microsoft OAuth \n* `97` — Mobile device \n* `98` — RingCentral OAuth \n* `99` — API user \n* `100` — Zoom Work email \n* `101` — Single Sign-On (SSO) \n\nThe following login methods are only available in China: \n* `11` — Phone number \n* `21` — WeChat \n* `23` — Alipay",
        "in": "query",
        "name": "login_type",
        "schema": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "11",
            "21",
            "23",
            "24",
            "27",
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "example": "101"
        }
      },
      "Mc": {
        "description": "Query Metadata of Recording if an On-Premise Meeting Connector was used for the meeting.",
        "in": "query",
        "name": "mc",
        "schema": {
          "default": "false",
          "type": "string",
          "example": ""
        }
      },
      "MeetingId": {
        "in": "path",
        "name": "meetingId",
        "required": true,
        "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.",
        "schema": {
          "format": "int64",
          "type": "integer",
          "example": 85746065
        }
      },
      "MeetingId4Metrics": {
        "description": "The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request.",
        "in": "path",
        "name": "meetingId",
        "required": true,
        "schema": {
          "oneOf": [
            {
              "type": "integer",
              "example": 5638296721
            },
            {
              "type": "string",
              "example": "4444AAAiAAAAAiAiAiiAii=="
            }
          ]
        }
      },
      "MeetingId4Recording": {
        "description": "To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. ",
        "in": "path",
        "name": "meetingId",
        "required": true,
        "schema": {
          "type": "string",
          "example": "atsXxhSEQWit9t+U02HXNQ=="
        }
      },
      "MeetingType": {
        "description": "The type of meeting: \n* `scheduled` — All valid previous (unexpired) meetings, live meetings, and upcoming scheduled meetings. \n* `live` — All the ongoing meetings. \n* `upcoming` — All upcoming meetings, including live meetings. \n* `upcoming_meetings` — All upcoming meetings, including live meetings. \n* `previous_meetings` — All the previous meetings.",
        "in": "query",
        "name": "type",
        "schema": {
          "type": "string",
          "default": "live",
          "enum": [
            "scheduled",
            "live",
            "upcoming",
            "upcoming_meetings",
            "previous_meetings"
          ],
          "example": "scheduled"
        }
      },
      "MeetingTypePast": {
        "description": "Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>\n\nIf you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.",
        "in": "query",
        "name": "type",
        "schema": {
          "default": "live",
          "enum": [
            "past",
            "pastOne",
            "live"
          ],
          "type": "string",
          "example": ""
        },
        "x-enum-descriptions": [
          "past meetings",
          "past one user meetings",
          "live meetings"
        ]
      },
      "MeetingTypePast2": {
        "description": "The type of meeting to query: \n* `past` — All past meetings. \n* `live` - All live meetings. \n\nThis value defaults to `live`.",
        "in": "query",
        "name": "type",
        "schema": {
          "default": "live",
          "enum": [
            "past",
            "live"
          ],
          "type": "string",
          "example": ""
        },
        "x-enum-descriptions": [
          "Past meetings.",
          "Live meetings."
        ]
      },
      "MeetingTypePast3": {
        "description": "The type of meeting to query: \n* `past` — All past meetings. \n* `pastOne` — All past one-user meetings. \n* `live` - All live meetings. \n\nThis value defaults to `live`.",
        "in": "query",
        "name": "type",
        "schema": {
          "default": "live",
          "enum": [
            "past",
            "pastOne",
            "live"
          ],
          "type": "string",
          "example": ""
        },
        "x-enum-descriptions": [
          "Past meetings.",
          "Past one-user meetings.",
          "Live meetings."
        ]
      },
      "MeetingUUID": {
        "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a UUID. For example, after a meeting ends, a new UUID is generated for the next meeting instance.\n\nIf the meeting UUID begins with a `/` character or contains a `//` character, you **must** double-encode the meeting UUID when using the meeting UUID for other API calls.",
        "in": "path",
        "name": "meetingUUID",
        "required": true,
        "schema": {
          "type": "string",
          "example": "4444AAAiAAAAAiAiAiiAii=="
        }
      },
      "MemberId": {
        "description": "The member ID.",
        "in": "path",
        "name": "memberId",
        "required": true,
        "schema": {
          "type": "string",
          "example": ""
        }
      },
      "NextPageToken": {
        "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
        "in": "query",
        "name": "next_page_token",
        "schema": {
          "type": "string",
          "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
        }
      },
      "OccurrenceId": {
        "description": "The meeting or webinar occurrence ID.",
        "in": "query",
        "name": "occurrence_id",
        "schema": {
          "type": "string",
          "example": "1648194360000"
        }
      },
      "PageNumber": {
        "deprecated": true,
        "description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination.",
        "in": "query",
        "name": "page_number",
        "schema": {
          "default": 1,
          "type": "integer",
          "example": 1
        }
      },
      "PageSize": {
        "description": "The number of records returned within a single API call.",
        "in": "query",
        "name": "page_size",
        "schema": {
          "default": 30,
          "maximum": 300,
          "type": "integer",
          "example": 30
        }
      },
      "PageSize4Qos": {
        "description": "The number of items returned per page.",
        "in": "query",
        "name": "page_size",
        "schema": {
          "default": 1,
          "maximum": 10,
          "type": "integer",
          "example": ""
        }
      },
      "PageToken": {
        "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
        "in": "query",
        "name": "next_page_token",
        "schema": {
          "type": "string",
          "example": ""
        }
      },
      "ParticipantId": {
        "description": "The participant's ID.",
        "in": "path",
        "name": "participantId",
        "required": true,
        "schema": {
          "type": "string",
          "example": ""
        }
      },
      "RecordingDeleteAction": {
        "description": "The recording delete actions:<br>`trash` - Move recording to trash.<br>`delete` - Delete recording permanently.",
        "in": "query",
        "name": "action",
        "schema": {
          "default": "trash",
          "enum": [
            "trash",
            "delete"
          ],
          "type": "string",
          "example": "trash"
        },
        "x-enum-descriptions": [
          "move recording to trash",
          "delete recording permanently"
        ]
      },
      "RecordingId": {
        "description": "The recording ID.",
        "in": "path",
        "name": "recordingId",
        "required": true,
        "schema": {
          "type": "string",
          "example": "a2f19f96-9294-4f51-8134-6f0eea108eb2"
        }
      },
      "RegistrantId": {
        "description": "The registrant ID.",
        "in": "path",
        "name": "registrantId",
        "required": true,
        "schema": {
          "type": "string",
          "example": "9tboDiHUQAeOnbmudzWa5g"
        }
      },
      "RegistrantStatus": {
        "description": "Query by the registrant's status: \n* `pending` — The registration is pending. \n* `approved` — The registrant is approved. \n* `denied` — The registration is denied.",
        "in": "query",
        "name": "status",
        "schema": {
          "default": "approved",
          "enum": [
            "pending",
            "approved",
            "denied"
          ],
          "type": "string",
          "example": "pending"
        },
        "x-enum-descriptions": [
          "Registration pending.",
          "Registration approved.",
          "Registration denied."
        ]
      },
      "RoleId": {
        "description": "The role ID",
        "in": "path",
        "name": "roleId",
        "required": true,
        "schema": {
          "type": "string",
          "example": ""
        }
      },
      "SessionId": {
        "description": "Chat session ID.",
        "in": "path",
        "name": "sessionId",
        "required": true,
        "schema": {
          "type": "string",
          "example": ""
        }
      },
      "SubResellerId": {
        "description": "The sub-reseller's ID. \n\n If you use this query parameter, the API returns all the sub accounts created by the sub-reseller account.",
        "in": "query",
        "name": "sub_reseller_id",
        "schema": {
          "type": "string",
          "example": "q6gBJVO5TzexKYTb_I2rpg"
        }
      },
      "TSPId": {
        "description": "TSP account ID.",
        "in": "path",
        "name": "tspId",
        "required": true,
        "schema": {
          "enum": [
            "1",
            "2"
          ],
          "type": "string",
          "example": "1"
        }
      },
      "ToDate": {
        "description": "End date.",
        "in": "query",
        "name": "to",
        "required": true,
        "schema": {
          "format": "date",
          "type": "string",
          "example": ""
        }
      },
      "TrackingSourceId": {
        "description": "The tracking source ID for the registrants. Useful if you share the webinar registration page in multiple locations. See [Creating source tracking links for webinar registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration) for details.",
        "in": "query",
        "name": "tracking_source_id",
        "schema": {
          "type": "string",
          "example": "5516482804110"
        }
      },
      "TransferEmail": {
        "description": "Transfer email. This field is **required** if the user has upcoming Zoom Events scheduled. After you delete or disassociate the user, the user's upcoming Zoom Events will be transferred to the target user.",
        "in": "query",
        "name": "transfer_email",
        "required": false,
        "schema": {
          "type": "string",
          "example": ""
        }
      },
      "TransferMeeting": {
        "description": "Transfer meeting.",
        "in": "query",
        "name": "transfer_meeting",
        "required": false,
        "schema": {
          "type": "boolean",
          "example": ""
        }
      },
      "TransferRecording": {
        "description": "Transfer recording.",
        "in": "query",
        "name": "transfer_recording",
        "required": false,
        "schema": {
          "type": "boolean",
          "example": ""
        }
      },
      "TransferWebinar": {
        "description": "Transfer webinar.",
        "in": "query",
        "name": "transfer_webinar",
        "required": false,
        "schema": {
          "type": "boolean",
          "example": ""
        }
      },
      "Trash": {
        "description": "Query trash.\n`true`: List recordings from trash.<br> `false`: Do not list recordings from the trash.<br> The default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve. ",
        "in": "query",
        "name": "trash",
        "schema": {
          "default": false,
          "type": "boolean",
          "example": ""
        }
      },
      "UserId": {
        "name": "userId",
        "in": "path",
        "description": "The user ID or email address of the user. For user-level apps, pass the `me` value.",
        "required": true,
        "schema": {
          "oneOf": [
            {
              "type": "string",
              "example": "6dfgdfgdg444447b0egga"
            },
            {
              "type": "string",
              "format": "email",
              "example": "jchill@example.com"
            },
            {
              "type": "string",
              "enum": [
                "me"
              ],
              "example": "me"
            }
          ]
        }
      },
      "WebinarId": {
        "description": "The webinar's ID.",
        "in": "path",
        "name": "webinarId",
        "required": true,
        "schema": {
          "format": "int64",
          "type": "integer",
          "example": 99289110036
        }
      },
      "WebinarId4Metrics": {
        "name": "webinarId",
        "in": "path",
        "description": "The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API will return a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the webinar UUID before making an API request.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "ABCDE12345"
        }
      },
      "WebinarTypePast": {
        "description": "The type of webinar to query: \n* `past` — All past webinars. \n* `live` - All live webinars. \n\nThis value defaults to `live`.",
        "in": "query",
        "name": "type",
        "schema": {
          "default": "live",
          "enum": [
            "past",
            "live"
          ],
          "type": "string",
          "example": ""
        },
        "x-enum-descriptions": [
          "past webinars",
          "live webinars"
        ]
      },
      "WebinarTypePast2": {
        "description": "The type of webinar to query: \n* `past` — All past webinars. \n* `live` - All live webinars. \n\nThis value defaults to `live`.",
        "in": "query",
        "name": "type",
        "schema": {
          "default": "live",
          "enum": [
            "past",
            "live"
          ],
          "type": "string",
          "example": ""
        },
        "x-enum-descriptions": [
          "past webinar",
          "live webinar"
        ]
      },
      "WebinarUUID": {
        "description": "The Webinar UUID. Each Webinar instance will generate its own Webinar UUID (i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.",
        "in": "path",
        "name": "WebinarUUID",
        "required": true,
        "schema": {
          "type": "string",
          "example": "Bznyg8KZTdCVbQxvS/oZ7w=="
        }
      },
      "ZoomRoomId": {
        "description": "The Zoom room ID.",
        "in": "path",
        "name": "zoomroomId",
        "required": true,
        "schema": {
          "type": "string",
          "example": ""
        }
      },
      "trash_type": {
        "description": "The type of Cloud recording that you would like to retrieve from the trash. The value can be one of the following:<br>\n    `meeting_recordings`: List all meeting recordings from the trash.<br>\n    `recording_file`: List all individual recording files from the trash. ",
        "in": "query",
        "name": "trash_type",
        "schema": {
          "default": "meeting_recordings",
          "type": "string",
          "example": ""
        }
      }
    },
    "schemas": {
      "AccountList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "$ref": "#/components/schemas/AccountListItem"
          }
        ],
        "description": "List of Accounts.",
        "title": "Account List",
        "type": "object"
      },
      "AccountListItem": {
        "description": "Account object in the account list.",
        "properties": {
          "accounts": {
            "description": "List of Account objects.",
            "items": {
              "properties": {
                "account_name": {
                  "description": "Account name.",
                  "type": "string",
                  "example": "jchill"
                },
                "account_number": {
                  "description": "Account Number of the account.",
                  "type": "string",
                  "example": "10010370036"
                },
                "account_type": {
                  "description": "Account type.",
                  "type": "string",
                  "example": "Free"
                },
                "created_at": {
                  "description": "Account creation date and time.",
                  "format": "date-time",
                  "type": "string",
                  "example": "2022-03-24T17:46:53Z"
                },
                "id": {
                  "description": "Account ID.",
                  "type": "string",
                  "example": "q6gBJVO5TzexKYTb_I2rpg"
                },
                "owner_email": {
                  "description": "Account owner email.",
                  "example": "john.doe@zoom.us",
                  "type": "string"
                },
                "seats": {
                  "description": "Account seats.",
                  "type": "integer",
                  "example": 0
                },
                "subscription_end_time": {
                  "description": "Account subscription end date and time.",
                  "format": "date-time",
                  "type": "string",
                  "example": "2022-03-24T17:46:53Z"
                },
                "subscription_start_time": {
                  "description": "Account subscription start date and time.",
                  "format": "date-time",
                  "type": "string",
                  "example": "2022-03-24T17:46:53Z"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AccountOptions": {
        "description": "Information about the account's options.",
        "properties": {
          "billing_auto_renew": {
            "description": "Whether to enable automatic billing renewal.",
            "example": false,
            "type": "boolean"
          },
          "meeting_connector_list": {
            "description": "A comma-separated list of Meeting Connector IP addresses shared with the sub account. If you do not provide a value for this field, all the Master account's Meeting Connectors will be shared with the sub account. \n\n **Note:** You can only use this field if `share_mc` value is `true`.",
            "items": {
              "example": "203.0.113.1",
              "type": "string"
            },
            "type": "array"
          },
          "pay_mode": {
            "default": "master",
            "description": "The account's payee: \n* `master` — The Master account holder pays. \n* `sub` - The sub account holder pays. \n\n This value defaults to `master`.",
            "enum": [
              "master",
              "sub"
            ],
            "example": "master",
            "type": "string"
          },
          "room_connector_list": {
            "description": "A comma-separated list of VRC IP addresses shared with the sub account. If you do not provide a value for this field, all of the Master account's VRCs will be shared with the sub account. \n\n **Note:** You can only use this field if `share_rc` value is `true`.",
            "items": {
              "example": [
                "192.0.2.1",
                "198.51.100.1"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "share_mc": {
            "default": false,
            "description": "Whether to enable the option for a sub account to use the Master account's shared [Meeting Connectors](https://support.zoom.us/hc/en-us/articles/201363093). Meeting Connectors are only available for On-Premise accounts. \n\n This value defaults to `false`.",
            "example": false,
            "type": "boolean"
          },
          "share_rc": {
            "default": false,
            "description": "Whether to enable the option for a sub account to use the Master account's shared [Virtual Room Connectors (VRC)](https://support.zoom.us/hc/en-us/articles/202134758-Deploying-the-Virtual-Room-Connector). VRCs are only available for On-premise accounts. \n\n This value defaults to `false`.",
            "example": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AccountPlan": {
        "description": "Information about the account's plan.",
        "properties": {
          "hosts": {
            "description": "The account plan's number of hosts.",
            "type": "integer",
            "example": ""
          },
          "type": {
            "description": "The account's [plan type](https://marketplace.zoom.us/docs/api-reference/other-references/plans).",
            "type": "string",
            "example": ""
          }
        },
        "type": "object"
      },
      "AccountPlanBaseRequired": {
        "type": "object",
        "description": "Information about the account's Base plan.",
        "properties": {
          "hosts": {
            "type": "integer",
            "description": "The account plan's number of hosts: \n* For a Pro plan, provide a value between `1` and `9`. \n* For a Business Plan, provide a value between `10` and `49`. \n* For a Education Plan, provide a value between `20` and `149`. \n* For a Free Trial Plan, provide a value between `1` and `9999`. \n\nYou **must** provide at least one positive integer value for the this field or the `increasing_hosts` field.",
            "example": 20
          },
          "increasing_hosts": {
            "type": "integer",
            "description": "An optional number of additional hosts to add to the account's Base plan. For example, a `1` value will add one additional host to the existing `20` hosts, for a total of `21` hosts. \n\nYou **must** provide at least one positive integer value for this field or the `hosts` field.",
            "example": 1
          },
          "type": {
            "type": "string",
            "description": "The account's [Base plan type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#base-plans).",
            "example": "yearly"
          }
        },
        "required": [
          "type"
        ]
      },
      "AccountPlanRequired": {
        "description": "Information about the account's plan.",
        "properties": {
          "hosts": {
            "description": "The account plan's number of hosts.",
            "type": "integer",
            "example": ""
          },
          "type": {
            "description": "The account's [plan type](https://marketplace.zoom.us/docs/api-reference/other-references/plans).",
            "type": "string",
            "example": ""
          }
        },
        "required": [
          "type",
          "hosts"
        ],
        "type": "object"
      },
      "AccountPlans": {
        "description": "Information about the account's plan.",
        "properties": {
          "plan_audio": {
            "description": "Information about the account's Audio Conferencing plan.",
            "properties": {
              "callout_countries": {
                "description": "A comma-separated list of the account's call-out countries. \n\n For a list of values, refer to the `ID` field in the [TSP callout countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-countries) table.",
                "type": "string",
                "example": ""
              },
              "ddi_numbers": {
                "description": "The account's dedicated dial-in (DDI) numbers.",
                "type": "integer",
                "example": ""
              },
              "premium_countries": {
                "description": "A comma-separated list of the account's premium countries. \n\n For a list of values, refer to the `ID` field in the [Premium countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium) table.",
                "type": "string",
                "example": ""
              },
              "tollfree_countries": {
                "description": "A comma-separated list of the account's toll-free countries \n\n For a list of values, refer to the `ID` field in the [Toll-free countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free) table.",
                "type": "string",
                "example": ""
              },
              "type": {
                "description": "The [Audio Conferencing plan type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans).",
                "type": "string",
                "example": ""
              }
            },
            "type": "object"
          },
          "plan_base": {
            "$ref": "#/components/schemas/AccountPlanBaseRequired"
          },
          "plan_large_meeting": {
            "description": "Information about the account's Large Meeting plan.",
            "items": {
              "$ref": "#/components/schemas/AccountPlan"
            },
            "type": "array"
          },
          "plan_phone": {
            "$ref": "#/components/schemas/PhonePlan"
          },
          "plan_recording": {
            "description": "The account's [Cloud Recording plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#cloud-recording-plans).",
            "type": "string",
            "example": ""
          },
          "plan_room_connector": {
            "$ref": "#/components/schemas/AccountPlan"
          },
          "plan_webinar": {
            "description": "Information about the account's Webinar plan.",
            "items": {
              "$ref": "#/components/schemas/AccountPlan"
            },
            "type": "array"
          },
          "plan_zoom_events": {
            "description": "Information about the account's Zoom Events plan.",
            "items": {
              "$ref": "#/components/schemas/AccountPlan"
            },
            "type": "array"
          },
          "plan_zoom_rooms": {
            "$ref": "#/components/schemas/AccountPlan"
          }
        },
        "required": [
          "plan_base"
        ],
        "type": "object"
      },
      "AccountSettings": {
        "properties": {
          "security": {
            "$ref": "#/components/schemas/AccountSettingsSecurity"
          },
          "audio_conferencing": {
            "$ref": "#/components/schemas/AccountSettingsAudioConference"
          },
          "email_notification": {
            "$ref": "#/components/schemas/AccountSettingsEmailNotification"
          },
          "feature": {
            "$ref": "#/components/schemas/AccountSettingsFeature"
          },
          "in_meeting": {
            "$ref": "#/components/schemas/AccountSettingsInMeeting"
          },
          "integration": {
            "$ref": "#/components/schemas/AccountSettingsIntegration"
          },
          "other_options": {
            "$ref": "#/components/schemas/AccountSettingsOtherOptions"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          },
          "recording": {
            "$ref": "#/components/schemas/AccountSettingsRecording"
          },
          "schedule_meeting": {
            "$ref": "#/components/schemas/AccountSettingsScheduleMeeting"
          },
          "telephony": {
            "$ref": "#/components/schemas/AccountSettingsTelephony"
          },
          "tsp": {
            "$ref": "#/components/schemas/AccountSettingsTSP"
          },
          "zoom_rooms": {
            "$ref": "#/components/schemas/AccountSettingsZoomRooms"
          }
        },
        "title": "Account settings",
        "type": "object"
      },
      "AccountSettingsAudioConference": {
        "description": "The account's audio conference settings.",
        "properties": {
          "toll_free_and_fee_based_toll_call": {
            "description": "The account's [**Toll-free and Fee-based Toll Call**](https://support.zoom.us/hc/en-us/articles/360060950711-Enabling-Toll-free-and-Fee-based-Toll-Call#h_01F51680NJ7YHZDXGJNSKDGM2P) settings.",
            "properties": {
              "allow_webinar_attendees_dial": {
                "description": "Whether webinar attendees can dial in through the account's **Toll-free and Fee-based Toll Call** phone numbers. This feature is only available in version 5.2.2 and higher.",
                "type": "boolean",
                "example": true
              },
              "enable": {
                "description": "Whether the account has the [**Toll-free and Fee-based Toll Call**](https://support.zoom.us/hc/en-us/articles/360060950711-Enabling-Toll-free-and-Fee-based-Toll-Call#h_01F51680NJ7YHZDXGJNSKDGM2P) setting enabled.",
                "type": "boolean",
                "example": true
              },
              "numbers": {
                "description": "The account's **Toll-free and Fee-based Toll Call** phone number information.",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The phone number's [E.164 country calling code](https://en.wikipedia.org/wiki/List_of_country_calling_codes).",
                      "type": "string",
                      "example": "86"
                    },
                    "country_code": {
                      "description": "The phone number's [country code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                      "type": "string",
                      "example": "CN"
                    },
                    "country_name": {
                      "description": "The country name.",
                      "type": "string",
                      "example": "China"
                    },
                    "display_number": {
                      "description": "The phone number's display number.",
                      "maxLength": 30,
                      "type": "string",
                      "example": "+86 777 777 77"
                    },
                    "number": {
                      "description": "The phone number.",
                      "maxLength": 30,
                      "type": "string",
                      "example": "777 777 77"
                    }
                  },
                  "type": "object"
                },
                "maxItems": 100,
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "AccountSettingsAuthentication": {
        "oneOf": [
          {
            "properties": {
              "allow_authentication_exception": {
                "description": "Whether the [**Allow authentication exception**](https://support.zoom.us/hc/en-us/articles/360037117472#h_01F13A9N1FQFNVESC9C21NRHXY) setting is enabled. This lets hosts invite users who can bypass authentication.",
                "type": "boolean",
                "example": true
              },
              "authentication_options": {
                "description": "Meeting Authentication Options",
                "items": {
                  "properties": {
                    "default_option": {
                      "description": "Authentication default option",
                      "type": "boolean",
                      "example": true
                    },
                    "domains": {
                      "description": "Authentication domains.",
                      "type": "string",
                      "example": "test.com"
                    },
                    "id": {
                      "description": "Authentication id",
                      "type": "string",
                      "example": "qef22g34gr3g43g33rv43"
                    },
                    "name": {
                      "description": "Authentication name",
                      "type": "string",
                      "example": "test"
                    },
                    "type": {
                      "description": " Authentication type. Specify one of the following authentication types for the authentication profile:<br>\n * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.\n * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>\n * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.",
                      "enum": [
                        "enforce_login",
                        "enforce_login_with_same_account",
                        "enforce_login_with_domains"
                      ],
                      "type": "string",
                      "example": "enforce_login_with_domains"
                    },
                    "visible": {
                      "description": "Authentication visible",
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "meeting_authentication": {
                "description": "Only authenticated users can join meetings",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "authentication_options": {
                "items": {
                  "properties": {
                    "default_option": {
                      "description": "Authentication default option",
                      "type": "boolean",
                      "example": true
                    },
                    "domains": {
                      "description": "Authentication domains.",
                      "type": "string",
                      "example": "test.com"
                    },
                    "id": {
                      "description": "Authentication id",
                      "type": "string",
                      "example": "qwefwqefqwf43231231"
                    },
                    "name": {
                      "description": "Authentication name",
                      "type": "string",
                      "example": "test"
                    },
                    "type": {
                      "description": "Authentication type",
                      "enum": [
                        "internally",
                        "enforce_login",
                        "enforce_login_with_domains"
                      ],
                      "type": "string",
                      "example": "enforce_login"
                    },
                    "visible": {
                      "description": "Authentication visible",
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "recording_authentication": {
                "description": "Only authenticated users can view cloud recordings",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          }
        ],
        "title": "AccountSettingsAuthentication",
        "type": "object"
      },
      "AccountSettingsAuthenticationUpdate": {
        "oneOf": [
          {
            "description": "Set/ update [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars).<br><br> The authentication profile **must first be set at the account level via the account settings**, and later can be disabled after enabling on the preferred level - i.e. user level using user settings or at group level via group settings  (if you do not want the settings to be enabled on the entire account).",
            "properties": {
              "allow_authentication_exception": {
                "description": "Whether to enable the [**Allow authentication exception**](https://support.zoom.us/hc/en-us/articles/360037117472#h_01F13A9N1FQFNVESC9C21NRHXY) setting. This lets hosts invite users who can bypass authentication.",
                "type": "boolean",
                "example": true
              },
              "authentication_option": {
                "description": "Meeting Authentication Options",
                "properties": {
                  "action": {
                    "description": "Specify the action that you would like to take via this API request:<br>\n* `add` : Choose this value if you are adding an authentication option.\n* `update`: Choose this value if you are updating an existing authentication option.\n* `delete`: Choose this value if you are deleting an existing authentication option.",
                    "enum": [
                      "update",
                      "delete",
                      "add"
                    ],
                    "type": "string",
                    "example": "update"
                  },
                  "default_option": {
                    "description": "Specify whether you would like to set this authentication option as the default option or not.",
                    "type": "boolean",
                    "example": true
                  },
                  "domains": {
                    "description": "If you chose `enforce_login_with_domains` as the authentication type, specify the domain(s) that you want to allow to join your meetings or webinars. ",
                    "type": "string",
                    "example": "example.com"
                  },
                  "id": {
                    "description": " Authentication ID. If you are creating an authentication profile, you do not need to provide this field. The id field will be generated in the response once this API request is completed successfully. You can also use the Get Account Settings API with query parameter set to `meeting_authentication` to list the authentication id.<br><br>\n Use this field or the `name` field to identify the associated authentication option that you would like to update or delete.",
                    "type": "string",
                    "example": "13rfefrg43erberbre"
                  },
                  "name": {
                    "description": "Unique name for the authentication option.",
                    "type": "string",
                    "example": "test name"
                  },
                  "type": {
                    "description": " Authentication type. Specify one of the following authentication types for the authentication profile:<br>\n * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.\n * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>\n * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.",
                    "enum": [
                      "enforce_login",
                      "enforce_login_with_same_account",
                      "enforce_login_with_domains"
                    ],
                    "type": "string",
                    "example": "enforce_login_with_domains"
                  }
                },
                "type": "object"
              },
              "meeting_authentication": {
                "description": "If set to \"true\", only authenticated users can join meetings. The method for authentication can be defined in the \"authentication_option\". ",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          {
            "description": "Set/Update [authentication profile for Cloud Recordings](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings).",
            "properties": {
              "authentication_option": {
                "description": "Specify the authentication options for this account.",
                "properties": {
                  "action": {
                    "description": "Specify the action that you would like to take via this API request:<br>\n* `add` : Choose this value if you are adding an authentication option.\n* `update`: Choose this value if you are updating an existing authentication option.\n* `delete`: Choose this value if you are deleting an existing authentication option.",
                    "enum": [
                      "update",
                      "delete",
                      "add"
                    ],
                    "type": "string",
                    "example": "update"
                  },
                  "default_option": {
                    "description": "Specify whether you would like to set this authentication option as the default option or not.",
                    "type": "boolean",
                    "example": true
                  },
                  "domains": {
                    "description": "If you chose `enforce_login_with_domains` as the authentication type, specify the domain(s) that you want to allow to view the recordings. ",
                    "type": "string",
                    "example": "example.com"
                  },
                  "id": {
                    "description": " Authentication ID. If you are creating an authentication profile, you do not need to provide this field. The id field will be generated in the response once this API request is completed successfully. You can also use the Get Account Settings API with query parameter set to `meeting_authentication` to list the authentication id.<br><br>\nUse this field or the `name` field to identify the associated authentication option that you would like to update or delete.",
                    "type": "string",
                    "example": "dsfwefweff32324"
                  },
                  "name": {
                    "description": "Unique name for the authentication option.",
                    "type": "string",
                    "example": "Unique name"
                  },
                  "type": {
                    "description": "Specify one authentication type that is to be associated with this authentication configuration:<br>\n* `internally`: This option allows you specify a rule that only signed in users within your account can view the recording.<br>\n * `enforce_login`: This option allows any users to view the recording, as long as they are signed into their Zoom account.<br>\n * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can view the recording. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.\n\n",
                    "enum": [
                      "internally",
                      "enforce_login",
                      "enforce_login_with_domains"
                    ],
                    "type": "string",
                    "example": "enforce_login_with_domains"
                  }
                },
                "type": "object"
              },
              "recording_authentication": {
                "description": "If set to `true`, only authenticated users can view the cloud recordings.<br><br>\nThe authentication profile **must first be set at the account level via the account settings**, and later can be disabled after enabling on the preferred level - i.e. user level using user settings or at group level via group settings  (if you do not want the settings to be enabled on the entire account).",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          }
        ],
        "title": "AccountSettingsAuthenticationUpdate",
        "type": "object"
      },
      "AccountSettingsEmailNotification": {
        "description": "Account Settings: Notification.",
        "properties": {
          "alternative_host_reminder": {
            "description": "Notify when an alternative host is set or removed from a meeting.",
            "type": "boolean",
            "example": true
          },
          "cancel_meeting_reminder": {
            "description": "Notify the host and participants when a meeting is cancelled.",
            "type": "boolean",
            "example": true
          },
          "cloud_recording_available_reminder": {
            "description": "Whether to notify the host when a cloud recording is available.",
            "type": "boolean",
            "example": true
          },
          "jbh_reminder": {
            "description": "Notify the host when participants join the meeting before them.",
            "type": "boolean",
            "example": true
          },
          "low_host_count_reminder": {
            "description": "Notify user when host licenses are running low.",
            "type": "boolean",
            "example": true
          },
          "recording_available_reminder_alternative_hosts": {
            "description": "Whether to notify any alternative hosts when a cloud recording is available.",
            "type": "boolean",
            "example": true
          },
          "recording_available_reminder_schedulers": {
            "description": "Whether to notify the person who scheduled the meeting or webinar for the host when a cloud recording is available.",
            "type": "boolean",
            "example": true
          },
          "schedule_for_reminder": {
            "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled.",
            "type": "boolean",
            "example": true
          }
        },
        "type": "object"
      },
      "AccountSettingsFeature": {
        "description": "Account Settings: Feature.",
        "properties": {
          "meeting_capacity": {
            "description": "Set the maximum number of participants a host can have in a single meeting.",
            "type": "integer",
            "example": 50
          }
        },
        "type": "object"
      },
      "AccountSettingsInMeeting": {
        "description": "Account Settings: In Meeting.",
        "properties": {
          "alert_guest_join": {
            "description": "Identify guest participants in a meeting or webinar.",
            "type": "boolean",
            "example": true
          },
          "allow_host_to_enable_focus_mode": {
            "default": null,
            "description": "Whether the host can enable [**Focus Mode**](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) when scheduling a meeting. This value defaults to `null`.",
            "type": "boolean",
            "example": true
          },
          "allow_live_streaming": {
            "description": "Whether to allow livestreaming.",
            "type": "boolean",
            "example": true
          },
          "allow_participants_chat_with": {
            "description": "Whether to allow participants to only chat with certain groups:\n* `1` — The participant cannot use chat.\n* `2` — Host and co-hosts only.\n * `3` — The participant can chat with other participants publicly.\n* `4` - The participant can chat with other participants publicly and privately.\n\n**Note:** This setting is only available with client versions 5.7.3 and above.",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "No one",
              "Host and co-hosts",
              "Everyone",
              "Everyone and anyone directly"
            ],
            "example": 1
          },
          "allow_participants_to_rename": {
            "description": "If the value of this field is set to `true`, meeting participants and webinar panelists can be allowed to rename themselves during a meeting or a webinar.\n",
            "type": "boolean",
            "example": true
          },
          "allow_show_zoom_windows": {
            "description": "Show the Zoom desktop application when sharing screens. ",
            "type": "boolean",
            "example": true
          },
          "allow_users_save_chats": {
            "description": "Whether to allow participants to save meeting chats:\n* `1` — Participants cannot save meeting chats.\n* `2` — Participants can only save host and co-host meeting chats.\n* `3` — Participants can save all meeting chats.",
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Not allow",
              "Host and co-hosts",
              "Everyone"
            ],
            "example": 1
          },
          "annotation": {
            "description": "Allow participants to use annotation tools to add information to shared screens.",
            "type": "boolean",
            "example": true
          },
          "anonymous_question_answer": {
            "description": "Allow an anonymous Q&A in a webinar.",
            "type": "boolean",
            "example": true
          },
          "attendee_on_hold": {
            "deprecated": true,
            "default": false,
            "description": "Allow host to put attendee on hold.\n\n**This field has been deprecated and is no longer supported.**",
            "type": "boolean",
            "example": true
          },
          "attention_mode_focus_mode": {
            "default": false,
            "description": "Whether the [**Focus Mode**](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) feature is enabled. When enabled, this feature only displays the host and co-hosts' video and profile pictures during a meeting. \n\n This value defaults to `false`.",
            "type": "boolean",
            "example": true
          },
          "auto_answer": {
            "description": "Enable users to see and add contacts to the \"auto-answer group\" in the chat contact list. Any call from members of this group will automatically be answered.",
            "type": "boolean",
            "example": true
          },
          "auto_saving_chat": {
            "description": "Automatically save all in-meeting chats so that the host does not need to manually save the chat transcript after the meeting starts.",
            "type": "boolean",
            "example": true
          },
          "breakout_room": {
            "description": "Allow host to split meeting participants into separate, smaller rooms.",
            "type": "boolean",
            "example": true
          },
          "breakout_room_schedule": {
            "description": "Whether the host can assign participants to breakout rooms when scheduling. This feature is only available in version 4.5.0 or higher.",
            "type": "boolean",
            "example": true
          },
          "chat": {
            "description": "Allow meeting participants to send a message that is visible to all participants.",
            "type": "boolean",
            "example": true
          },
          "closed_caption": {
            "description": "Allow a host to type closed captions. Enable a host to assign a participant or third party device to add closed captions. ",
            "type": "boolean",
            "example": true
          },
          "closed_captioning": {
            "description": "Information about the account's closed captioning settings.",
            "properties": {
              "auto_transcribing": {
                "description": "Whether to allow a live transcription service to transcribe meetings.",
                "type": "boolean",
                "example": true
              },
              "enable": {
                "description": "Whether to allow the host to type closed captions or assign a participant or 3rd-party service to provide closed captioning.",
                "type": "boolean",
                "example": true
              },
              "save_caption": {
                "description": "Whether to allow participants to save closed captions or transcripts.",
                "type": "boolean",
                "example": true
              },
              "third_party_captioning_service": {
                "description": "Whether to allow the use of an API token to integrate with 3rd-party closed captioning services.",
                "type": "boolean",
                "example": true
              },
              "view_full_transcript": {
                "description": "Whether to allow the viewing of full transcripts in the in-meeting side panel.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "co_host": {
            "description": "Allow the host to add co-hosts.",
            "type": "boolean",
            "example": true
          },
          "custom_data_center_regions": {
            "description": "If set to `true`, account owners and admins on paid accounts can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.",
            "type": "boolean",
            "example": true
          },
          "custom_live_streaming_service": {
            "description": "Whether to allow custom livestreaming.",
            "type": "boolean",
            "example": true
          },
          "custom_service_instructions": {
            "description": "The specific instructions to configure a custom livestream.",
            "type": "string",
            "example": "The specific instructions"
          },
          "data_center_regions": {
            "type": "array",
            "description": "If the value of `custom_data_center_regions` is `true`, a comma-separated list of the following [data center regions](https://support.zoom.us/hc/en-us/articles/360059254691-Datacenter-abbreviation-list) to opt in to: \n* `AU` — Australia.\n* `LA` — Latin America. \n* `CA` — Canada. \n* `CN` — China. \n* `DE` — Germany. \n* `HK` — Hong Kong SAR. \n* `IN` — India. \n* `IE` — Ireland. \n* `TY` — Japan. \n* `MX` — Mexico. \n* `NL` — Netherlands. \n* `SG` — Singapore. \n* `US` — United States.",
            "items": {
              "type": "string",
              "enum": [
                "AU",
                "LA",
                "CA",
                "CN",
                "DE",
                "HK",
                "IN",
                "IE",
                "TY",
                "MX",
                "NL",
                "SG",
                "US"
              ],
              "example": "AU"
            }
          },
          "disable_screen_sharing_for_host_meetings": {
            "description": "Whether to enable the **Disable desktop screen sharing for meetings you host** setting.",
            "type": "boolean",
            "example": true
          },
          "disable_screen_sharing_for_in_meeting_guests": {
            "description": "Whether to enable the **Disable screen sharing when guests are in the meeting** setting.",
            "type": "boolean",
            "example": true
          },
          "dscp_audio": {
            "description": "DSCP audio.",
            "maximum": 63,
            "minimum": 1,
            "type": "integer",
            "example": 56
          },
          "dscp_marking": {
            "description": "DSCP marking.",
            "type": "boolean",
            "example": true
          },
          "dscp_video": {
            "description": "DSCP video.",
            "maximum": 63,
            "minimum": 1,
            "type": "integer",
            "example": 40
          },
          "e2e_encryption": {
            "description": "Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).",
            "type": "boolean",
            "example": true
          },
          "entry_exit_chime": {
            "description": "Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.",
            "enum": [
              "host",
              "all",
              "none"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Heard by host only",
              "Heard by host and all attendees",
              "Disable"
            ],
            "example": "all"
          },
          "far_end_camera_control": {
            "description": "Allow another user to take control of your camera during a meeting.",
            "type": "boolean",
            "example": true
          },
          "feedback": {
            "description": "Add a \"Feedback\" tab to the Windows Settings or Mac Preferences dialog. Enable users to provide feedback to Zoom at the end of the meeting.",
            "type": "boolean",
            "example": true
          },
          "file_transfer": {
            "description": "Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled on the account or not.",
            "type": "boolean",
            "example": true
          },
          "group_hd": {
            "description": "Activate higher quality video for host and participants.\nPlease note: This will use more bandwidth.",
            "type": "boolean",
            "example": true
          },
          "join_from_desktop": {
            "description": "Whether to allow participants to join a meeting directly from their desktop browser. Note that the meeting experience from the desktop browser is limited.",
            "type": "boolean",
            "example": true
          },
          "join_from_mobile": {
            "description": "Whether to allow participants to join a meeting directly from their mobile browser. Note that the meeting experience from the mobile browser is limited.",
            "type": "boolean",
            "example": true
          },
          "language_interpretation": {
            "description": "Information about the [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Using-Language-Interpretation-in-your-meeting-or-webinar) settings.",
            "properties": {
              "custom_languages": {
                "default": null,
                "description": "A list of user-defined supported languages.",
                "items": {
                  "type": "string",
                  "example": "English"
                },
                "type": "array"
              },
              "enable": {
                "description": "Whether to allow hosts to assign participants as interpreters who can interpret one language into another in real-time.",
                "type": "boolean",
                "example": true
              },
              "languages": {
                "description": "A list of system-supported languages.",
                "items": {
                  "enum": [
                    "English",
                    "Chinese",
                    "Japanese",
                    "German",
                    "French",
                    "Russian",
                    "Portuguese",
                    "Spanish",
                    "Korean"
                  ],
                  "type": "string",
                  "example": "English"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "live_streaming_facebook": {
            "description": "Whether to allow Facebook livestreaming.",
            "type": "boolean",
            "example": true
          },
          "live_streaming_youtube": {
            "description": "Whether to allow YouTube livestreaming.",
            "type": "boolean",
            "example": true
          },
          "manual_captioning": {
            "description": "Information about manual captioning settings.",
            "properties": {
              "allow_to_type": {
                "description": "Whether to allow the host to manually caption or let the host assign a participant to provide manual captioning.",
                "type": "boolean",
                "example": true
              },
              "auto_generated_captions": {
                "description": "Whether to enable Zoom's [live transcription feature](https://support.zoom.us/hc/en-us/articles/207279736-Managing-closed-captioning-and-live-transcription#h_01FHGGHYJ4457H4GSZY0KM3NSB).",
                "type": "boolean",
                "example": true
              },
              "full_transcript": {
                "description": "Whether to enable the viewing of full transcripts in the in-meeting side panel.",
                "type": "boolean",
                "example": true
              },
              "manual_captions": {
                "description": "Whether to [enable manual closed captioning](https://support.zoom.us/hc/en-us/articles/207279736-Managing-closed-captioning-and-live-transcription).",
                "type": "boolean",
                "example": true
              },
              "save_captions": {
                "description": "Whether to allow participants to [save closed captions or transcripts](https://support.zoom.us/hc/en-us/articles/360060958752). \n\n **Note:** If the `full_transcript` field is set to `false`, participants **cannot** save captions.",
                "type": "boolean",
                "example": true
              },
              "third_party_captioning_service": {
                "description": "Whether to allow the use of an API token to integrate with a [3rd-party device](https://support.zoom.us/hc/en-us/articles/115002212983) to provide closed captioning.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "meeting_reactions": {
            "description": "Whether meeting participants can [communicate using the emoji reactions](https://support.zoom.us/hc/en-us/articles/115001286183-Nonverbal-feedback-and-meeting-reactions) located in the **Reactions** menu in the meeting toolbar.",
            "type": "boolean",
            "example": true
          },
          "meeting_survey": {
            "description": "Whether to allow the host to present a survey to participants once a meeting has ended. This feature is only available in version 5.7.3 or higher.",
            "type": "boolean",
            "example": true
          },
          "original_audio": {
            "description": "Allow users to select original sound in their client settings.",
            "type": "boolean",
            "example": true
          },
          "p2p_connetion": {
            "description": "Peer to peer connection while only two people are in a meeting.",
            "type": "boolean",
            "example": true
          },
          "p2p_ports": {
            "description": "Peer to peer listening ports range.",
            "type": "boolean",
            "example": true
          },
          "polling": {
            "description": "Add \"Polls\" to the meeting controls.",
            "type": "boolean",
            "example": true
          },
          "meeting_polling": {
            "type": "object",
            "description": "Information about the account's meeting polling settings.",
            "properties": {
              "enable": {
                "type": "boolean",
                "description": "Whether to allow the host to add polls before or during a meeting.",
                "example": true
              },
              "advanced_polls": {
                "type": "boolean",
                "description": "Whether to allow host to create advanced polls and quizzes. Advanced polls and quizzes include single choice, multiple choice, drop down, matching, short answer, long answer, rank order, and fill-in-the-blank questions. Hosts can also set the correct answers for quizzes they create.",
                "example": true
              },
              "allow_alternative_host_to_add_edit": {
                "type": "boolean",
                "description": "Whether to allow the alternative host to add or edit polls and quizzes.",
                "example": true
              }
            }
          },
          "ports_range": {
            "default": "",
            "description": "The listening ports range, separated by a comma (ex 55,56). The ports range must be between 1 to 65535.",
            "type": "string",
            "example": ""
          },
          "post_meeting_feedback": {
            "description": "Display a thumbs up or down survey at the end of each meeting.",
            "type": "boolean",
            "example": true
          },
          "private_chat": {
            "description": "Allow a meeting participant to send a private message to another participant.",
            "type": "boolean",
            "example": true
          },
          "record_play_own_voice": {
            "description": "Record and play their own voice.",
            "type": "boolean",
            "example": true
          },
          "remote_control": {
            "description": "Allow users to request remote control.",
            "type": "boolean",
            "example": true
          },
          "request_permission_to_unmute_participants": {
            "type": "boolean",
            "description": "Whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting) setting is enabled.",
            "example": true
          },
          "screen_sharing": {
            "description": "Allow screen sharing.",
            "type": "boolean",
            "example": true
          },
          "sending_default_email_invites": {
            "description": "Only show the default email when sending email invites.",
            "type": "boolean",
            "example": true
          },
          "show_a_join_from_your_browser_link": {
            "description": "Whether to allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is useful for participants who cannot download, install, or run applications. Note that the meeting experience from the browser is limited.",
            "type": "boolean",
            "example": true
          },
          "show_meeting_control_toolbar": {
            "description": "Always show the meeting control toolbar.",
            "type": "boolean",
            "example": true
          },
          "slide_control": {
            "description": "Whether the person sharing during a presentation can allow others to control the slide presentation. This feature is only available in version 5.8.3 or higher.",
            "type": "boolean",
            "example": true
          },
          "stereo_audio": {
            "description": "Allow users to select stereo audio in their client settings.",
            "type": "boolean",
            "example": true
          },
          "unchecked_data_center_regions": {
            "description": "If the value of `custom_data_center_regions` is `true`, a comma-separated list of the following [data center regions](https://support.zoom.us/hc/en-us/articles/360059254691-Datacenter-abbreviation-list) to **not** opt in to: \n* `EU` — Europe. \n* `HK` — Hong Kong. \n* `AU` — Australia. \n* `IN` — India. \n* `LA` — Latin America. \n* `TY` — Tokyo. \n* `CN` — China. \n* `US` — United States. \n* `CA` — Canada.",
            "items": {
              "enum": [
                "EU",
                "HK",
                "AU",
                "IN",
                "TY",
                "CN",
                "US",
                "CA",
                "DE",
                "NL",
                "LA"
              ],
              "type": "string",
              "example": "AU"
            },
            "type": "array"
          },
          "use_html_format_email": {
            "description": "Use HTML formatted email for the Outlook plugin.",
            "type": "boolean",
            "example": true
          },
          "virtual_background": {
            "description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom desktop application settings.",
            "type": "boolean",
            "example": true
          },
          "virtual_background_settings": {
            "description": "Settings to manage virtual background.",
            "properties": {
              "allow_upload_custom": {
                "description": "Allow users to upload custom backgrounds.",
                "type": "boolean",
                "example": true
              },
              "allow_videos": {
                "description": "Allow use of videos for virtual backgrounds.",
                "type": "boolean",
                "example": true
              },
              "enable": {
                "description": "Enable virtual background.",
                "type": "boolean",
                "example": true
              },
              "files": {
                "items": {
                  "properties": {
                    "id": {
                      "description": "Unique identifier of the file.",
                      "type": "string",
                      "example": "sdvfwr2dsf43t34612frg1v"
                    },
                    "is_default": {
                      "description": "Indicates whether or not this file is the default virtual background file.",
                      "type": "boolean",
                      "example": true
                    },
                    "name": {
                      "description": "File name.",
                      "type": "string",
                      "example": "test.png"
                    },
                    "size": {
                      "description": "File size.",
                      "type": "integer",
                      "example": 1213
                    },
                    "type": {
                      "description": "File type.",
                      "type": "string",
                      "example": "image"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "watermark": {
            "description": "Add a watermark when viewing a shared screen.",
            "type": "boolean",
            "example": true
          },
          "webinar_chat": {
            "properties": {
              "allow_attendees_chat_with": {
                "description": "Allow webinar attendees to chat with:\n* `1` — No one.\n* `2` — Host and all panelists.\n* `3` — Everyone.",
                "enum": [
                  1,
                  2,
                  3
                ],
                "type": "integer",
                "example": 1
              },
              "allow_auto_save_local_chat_file": {
                "description": "Whether to automatically save chat messages to a local file on the host's computer when the webinar ends.",
                "type": "boolean",
                "example": true
              },
              "allow_panelists_chat_with": {
                "description": "Allow webinar panelists to chat with:\n* `1` — Host and all panelists.\n* `2` — Everyone.",
                "enum": [
                  1,
                  2
                ],
                "type": "integer",
                "example": 1
              },
              "allow_panelists_send_direct_message": {
                "description": "Whether to allow webinar panelists to send direct messages to other panelists.",
                "type": "boolean",
                "example": true
              },
              "allow_users_save_chats": {
                "description": "Whether to allow webinar attendees to save chats:\n* `0` — Attendees cannot save chats.\n* `1` — Attendees can only save host and panelist chats.\n* `2` — Attendees can save all chats.",
                "enum": [
                  0,
                  1,
                  2
                ],
                "type": "integer",
                "example": 1
              },
              "default_attendees_chat_with": {
                "description": "By default, allow webinar attendees to chat with:\n* `1` — Host and all panelists.\n* `2` — Everyone.",
                "enum": [
                  1,
                  2
                ],
                "type": "integer",
                "example": 1
              },
              "enable": {
                "description": "Whether to allow webinar participants to send chat messages.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "webinar_live_streaming": {
            "properties": {
              "custom_service_instructions": {
                "description": "The specific instructions to allow your account's meeting hosts to configure a custom livestream.",
                "type": "string",
                "example": "The specific instructions"
              },
              "enable": {
                "description": "Whether webinar livestreaming is enabled.",
                "type": "boolean",
                "example": true
              },
              "live_streaming_reminder": {
                "description": "Whether to notify users to watch the livestream. This does not apply to custom RTMP (real-time messaging protocol).",
                "type": "boolean",
                "example": true
              },
              "live_streaming_service": {
                "description": "The available livestreaming services:\n* `facebook`\n* `workplace_by_facebook`\n* `youtube`\n* `custom_live_streaming_service`",
                "items": {
                  "enum": [
                    "facebook",
                    "workplace_by_facebook",
                    "youtube",
                    "custom_live_streaming_service"
                  ],
                  "type": "string",
                  "x-enum-descriptions": [
                    "Facebook",
                    "Workplace by Facebook",
                    "YouTube",
                    "Custom Live Streaming Service"
                  ],
                  "example": "Facebook"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "webinar_polling": {
            "description": "Information about the account's webinar polling settings.",
            "properties": {
              "enable": {
                "description": "Whether to allow the host to add polls before or during a webinar.",
                "type": "boolean",
                "example": true
              },
              "advanced_polls": {
                "description": "Whether to allow host to create advanced polls and quizzes. Advanced polls and quizzes include single choice, multiple choice, drop down, matching, short answer, long answer, rank order, and fill-in-the-blank questions. Hosts can also set the correct answers for quizzes they create.",
                "type": "boolean",
                "example": true
              },
              "allow_alternative_host_to_add_edit": {
                "type": "boolean",
                "description": "Whether to allow the alternative host to add or edit polls and quizzes.",
                "example": true
              }
            },
            "type": "object"
          },
          "webinar_question_answer": {
            "description": "Whether attendees can ask the host and panelists questions in the webinar.",
            "type": "boolean",
            "example": true
          },
          "webinar_survey": {
            "description": "Whether to allow the host to present surveys to attendees once a webinar has ended.",
            "type": "boolean",
            "example": true
          },
          "whiteboard": {
            "description": "Allow participants to share a whiteboard that includes annotation tools.",
            "type": "boolean",
            "example": true
          },
          "who_can_share_screen": {
            "description": "Indicates who can share their screen or content during meetings. The value can be one of the following: <br>\n`host`: Only host can share the screen.<br>\n`all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.\n",
            "enum": [
              "host",
              "all"
            ],
            "type": "string",
            "example": "host"
          },
          "who_can_share_screen_when_someone_is_sharing": {
            "description": "Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>\n`host`: Only a host can share the screen when someone else is sharing.<br>\n`all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.\n",
            "enum": [
              "host",
              "all"
            ],
            "type": "string",
            "example": "host"
          },
          "workplace_by_facebook": {
            "description": "Whether to allow Workplace by Facebook livestreaming.",
            "type": "boolean",
            "example": true
          }
        },
        "type": "object"
      },
      "AccountSettingsIntegration": {
        "description": "Account Settings: Integration.",
        "properties": {
          "box": {
            "description": "Enable users who join a meeting from their mobile device to share content from their Box account.",
            "type": "boolean",
            "example": true
          },
          "dropbox": {
            "description": "Enable users who join a meeting from their mobile device to share content from their Dropbox account.",
            "type": "boolean",
            "example": true
          },
          "google_calendar": {
            "description": "Enable meetings to be scheduled using Google Calendar.",
            "type": "boolean",
            "example": true
          },
          "google_drive": {
            "description": "Enable users who join a meeting from their mobile device to share content from their Google Drive.",
            "type": "boolean",
            "example": true
          },
          "kubi": {
            "description": "Enable users to control a connected Kubi device from within a Zoom meeting.",
            "type": "boolean",
            "example": true
          },
          "microsoft_one_drive": {
            "description": "Enable users who join a meeting from their mobile device to share content from their Microsoft OneDrive account.",
            "type": "boolean",
            "example": true
          }
        },
        "type": "object"
      },
      "AccountSettingsOtherOptions": {
        "properties": {
          "allow_auto_active_users": {
            "description": "Whether administrators can activate users with a single default password when they add users. This immediately activates the users without waiting for them to set their own password.",
            "type": "boolean",
            "example": true
          },
          "allow_users_contact_support_via_chat": {
            "description": "Whether to display the Zoom Help badge on the bottom-right of the page.",
            "type": "boolean",
            "example": true
          },
          "allow_users_enter_and_share_pronouns": {
            "description": "Whether users can add pronouns to their profile cards and share them during meetings and webinars.",
            "type": "boolean",
            "example": true
          },
          "blur_snapshot": {
            "description": "Whether iOS blurs the screenshot in the task switcher when multiple apps are open. Android hides the screenshot in the system-level list of recent apps.",
            "type": "boolean",
            "example": true
          },
          "display_meetings_scheduled_for_others": {
            "description": "Whether a user with the [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege) can view other users' meetings.",
            "type": "boolean",
            "example": true
          },
          "meeting_qos_and_mos": {
            "description": "The Dashboard meeting [quality scores and network alerts](https://support.zoom.us/hc/en-us/articles/360061244651) setting: \n* `0` — Do not enable meeting quality scores and network alerts on the Dashboard. \n* `1` — Display the meeting quality score and network alerts on the Dashboard. \n* `2` — Use custom thresholds for quality scores and network alerts.",
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Do not display meeting quality scores and network alerts on the Dashboard",
              "Display the meeting quality score and network alerts on the Dashboard",
              "Use custom thresholds for quality scores and network alerts"
            ],
            "example": 0
          },
          "show_one_user_meeting_on_dashboard": {
            "description": "Whether meetings with only one person will display on the Dashboard and in reports.",
            "type": "boolean",
            "example": true
          },
          "use_cdn": {
            "description": "Allow connections to different CDNs (content delivery networks) for a better web browsing experience. All users in your organization will use the selected CDN to access static resources: \n* `none` — Do not use a CDN. \n* `default` — Use the Amazon CloudFront CDN for users **except** Chinese Mainland users. Chinese Mainland users will use the Wangsu CDN (China). \n* `wangsu` — Use the Wangsu CDN for all users.",
            "enum": [
              "none",
              "default",
              "wangsu"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Do not use use a CDN",
              "All users will use the Amazon CloudFront CDN except Chinese Mainland users. Chinese Mainland users will use the Wangsu CDN (China)",
              "All users use the Wangsu CDN (China)"
            ],
            "example": "none"
          }
        },
        "type": "object"
      },
      "AccountSettingsRecording": {
        "description": "Account Settings: Recording.",
        "properties": {
          "account_user_access_recording": {
            "description": "Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.",
            "type": "boolean",
            "example": true
          },
          "allow_recovery_deleted_cloud_recordings": {
            "description": "Allow recovery of deleted cloud recordings from trash. \nIf the value of this field is set to `true`, deleted cloud recordings will be kept in trash for 30 days after deletion and can be recovered within that period. ",
            "type": "boolean",
            "example": true
          },
          "archive": {
            "description": "[Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted with archiving solution access by the Zoom support team.",
            "properties": {
              "enable": {
                "description": "Enable the archiving feature.",
                "type": "boolean",
                "example": true
              },
              "settings": {
                "properties": {
                  "audio_file": {
                    "description": "Include in-meeting and/or in-webinar audio in the archive.",
                    "type": "boolean",
                    "example": true
                  },
                  "cc_transcript_file": {
                    "description": "Include closed caption or transcript in the archive.",
                    "type": "boolean",
                    "example": true
                  },
                  "chat_file": {
                    "description": "Include in-meeting chat in the archive.",
                    "type": "boolean",
                    "example": true
                  },
                  "chat_with_sender_email": {
                    "description": "Include user email in in-meeting chat file.",
                    "type": "boolean",
                    "example": true
                  },
                  "video_file": {
                    "description": "Include in-meeting and/or in-webinar video in the archive.",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              },
              "type": {
                "description": "Archive types:\n\n* `1`: Only meetings are archived.<br>\n* `2`: Only webinars are archived.<br>\n* `3`: Both meetings and webinars are archived.",
                "enum": [
                  1,
                  2,
                  3
                ],
                "type": "integer",
                "example": 1
              }
            },
            "type": "object"
          },
          "auto_delete_cmr": {
            "description": "Allow Zoom to permanently delete recordings automatically after a specified number of days.",
            "type": "boolean",
            "example": true
          },
          "auto_delete_cmr_days": {
            "description": "When the `auto_delete_cmr` value is `true`, this value is the number of days before the auto-deletion of cloud recordings: \n* `30` — 30 days. \n* `60` — 60 days. \n* `90` — 90 days. \n* `120` — 120 days.",
            "enum": [
              30,
              60,
              90,
              120
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "30 days.",
              "60 days.",
              "90 days.",
              "120 days."
            ],
            "example": 90
          },
          "record_files_separately": {
            "type": "object",
            "description": "The account's [**Record active speaker, gallery view and shared screen separately**](https://support.zoom.us/hc/en-us/articles/360060316092-Changing-basic-and-advanced-cloud-recording-settings#h_01F4CYJTCTXNS2MXH00W9EFG6R) settings.",
            "properties": {
              "active_speaker": {
                "type": "boolean",
                "description": "Whether to record the active speaker only.",
                "example": true
              },
              "gallery_view": {
                "type": "boolean",
                "description": "Whether to record the gallery view only.",
                "example": true
              },
              "shared_screen": {
                "type": "boolean",
                "description": "Whether to record the shared screen only.",
                "example": true
              }
            }
          },
          "display_participant_name": {
            "type": "boolean",
            "description": "Whether to display participants' names in the recording.",
            "example": true
          },
          "recording_thumbnails": {
            "type": "boolean",
            "description": "Whether to record thumbnails of the presenter when they are sharing their screen.",
            "example": true
          },
          "optimize_recording_for_3rd_party_video_editor": {
            "type": "boolean",
            "description": "Whether to optimize recordings for a 3rd party video editor. This may increase the file size and the time it takes to generate recording files.",
            "example": true
          },
          "recording_highlight": {
            "type": "boolean",
            "description": "Whether to enable the [recording highlights](https://support.zoom.us/hc/en-us/articles/360060802432) feature.",
            "example": true
          },
          "save_panelist_chat": {
            "type": "boolean",
            "description": "Whether to save panelist chat to the recording. This setting saves messages sent by panelists during a webinar to either all panelists or all panelists and attendees to the recording.",
            "example": true
          },
          "save_poll_results": {
            "type": "boolean",
            "description": "Whether to save poll results shared during the meeting or webinar. This also includes poll results shared during the meeting or webinar.",
            "example": true
          },
          "save_close_caption": {
            "type": "boolean",
            "description": "Whether to save [closed captions](https://support.zoom.us/hc/en-us/articles/207279736) as a VTT (Video Track Text) file.",
            "example": true
          },
          "auto_recording": {
            "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
            "enum": [
              "local",
              "cloud",
              "none"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Record on local",
              "Record on cloud",
              "Disabled"
            ],
            "example": "local"
          },
          "cloud_recording": {
            "description": "Allow hosts to record and save the meeting in the cloud.",
            "type": "boolean",
            "example": true
          },
          "cloud_recording_download": {
            "description": "Cloud recording downloads.",
            "type": "boolean",
            "example": true
          },
          "cloud_recording_download_host": {
            "description": "Only the host can download cloud recordings.",
            "type": "boolean",
            "example": true
          },
          "host_delete_cloud_recording": {
            "description": "If the value of this field is set to `true`, hosts will be able to delete the recordings. If this option is set to `false`, the recordings cannot be deleted by the host and only admin can delete them.\n",
            "type": "boolean",
            "example": true
          },
          "ip_address_access_control": {
            "description": "Setting to allow cloud recording access only from specific IP address ranges.\n",
            "properties": {
              "enable": {
                "description": "If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.\n\n",
                "type": "boolean",
                "example": true
              },
              "ip_addresses_or_ranges": {
                "description": "IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.\n\nExample: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`\n\n",
                "type": "string",
                "example": ""
              }
            },
            "type": "object"
          },
          "local_recording": {
            "description": "Allow hosts and participants to record the meeting using a local file.",
            "type": "boolean",
            "example": true
          },
          "prevent_host_access_recording": {
            "description": "If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.\n",
            "type": "boolean",
            "example": true
          },
          "record_audio_file": {
            "description": "Whether to record one audio file for all participants.",
            "type": "boolean",
            "example": true
          },
          "record_gallery_view": {
            "description": "Record the gallery view with a shared screen.",
            "type": "boolean",
            "example": true
          },
          "record_speaker_view": {
            "description": "Record the active speaker with a shared screen.",
            "type": "boolean",
            "example": true
          },
          "recording_audio_transcript": {
            "description": "Automatically transcribe the audio of the meeting or webinar to the cloud.",
            "type": "boolean",
            "example": true
          },
          "recording_disclaimer": {
            "description": "Show a disclaimer to participants before a recording starts\n",
            "type": "boolean",
            "example": true
          },
          "recording_password_requirement": {
            "description": "This object represents the minimum password requirements set for recordings via Account Recording Settings.",
            "properties": {
              "have_letter": {
                "description": "Indicates whether or not password must contain at least one alphabetical letter (a, b, c..).",
                "type": "boolean",
                "example": true
              },
              "have_number": {
                "description": "Indicates whether or not password must contain at least one number(1, 2, 3..).",
                "type": "boolean",
                "example": true
              },
              "have_special_character": {
                "description": "Indicates whether or not password must contain at least one special character(!, @, #..).",
                "type": "boolean",
                "example": true
              },
              "length": {
                "description": "Minimum required length for the password.",
                "maximum": 10,
                "type": "integer",
                "example": 10
              },
              "only_allow_numeric": {
                "description": "Indicates whether or not password must contain only numeric characters.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "required_password_for_existing_cloud_recordings": {
            "description": "Require a passcode to access existing cloud recordings.",
            "type": "boolean",
            "example": true
          },
          "required_password_for_shared_cloud_recordings": {
            "type": "boolean",
            "description": "Whether to require a passcode to share cloud recordings.",
            "example": true
          },
          "save_chat_text": {
            "description": "Save the chat text from the meeting.",
            "type": "boolean",
            "example": true
          },
          "show_timestamp": {
            "description": "Add a timestamp to the recording.",
            "type": "boolean",
            "example": true
          }
        },
        "type": "object"
      },
      "AccountSettingsScheduleMeeting": {
        "description": "Account Settings: Schedule Meeting.",
        "properties": {
          "audio_type": {
            "default": "both",
            "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.",
            "enum": [
              "both",
              "telephony",
              "voip",
              "thirdParty"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Telephony and VoIP",
              "Audio PSTN telephony only",
              "VoIP only",
              "3rd party audio conference"
            ],
            "example": "both"
          },
          "enforce_login": {
            "description": "Only Zoom users who are signed in can join meetings.",
            "type": "boolean",
            "example": true
          },
          "enforce_login_domains": {
            "description": "Only signed in users with a specified domain can join the meeting. ",
            "type": "string",
            "example": "example.com"
          },
          "enforce_login_with_domains": {
            "description": "Only signed in users with a specific domain can join meetings.",
            "type": "boolean",
            "example": true
          },
          "force_pmi_jbh_password": {
            "description": "Require a password for Personal Meetings if attendees can join before host.",
            "type": "boolean",
            "example": true
          },
          "host_video": {
            "description": "Start meetings with the host video on.",
            "type": "boolean",
            "example": true
          },
          "jbh_time": {
            "description": "If the value of \"join_before_host\" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:\n\n*  `0`: Allow participant to join anytime.\n*  `5`: Allow participant to join 5 minutes before meeting start time.\n * `10`: Allow participant to join 10 minutes before meeting start time.",
            "enum": [
              0,
              5,
              10,
              15
            ],
            "type": "integer",
            "example": 5
          },
          "join_before_host": {
            "description": "Allow participants to join the meeting before the host arrives.",
            "type": "boolean",
            "example": true
          },
          "meeting_password_requirement": {
            "description": "Account wide meeting/webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).",
            "properties": {
              "consecutive_characters_length": {
                "enum": [
                  0,
                  4,
                  5,
                  6,
                  7,
                  8
                ],
                "type": "integer",
                "example": 8
              },
              "have_letter": {
                "description": "If set to `true`, the password must contain at least 1 letter (such as a,b,c...).\n",
                "type": "boolean",
                "example": true
              },
              "have_number": {
                "description": "If set to `true`, the password must contain at least 1 number (such as 1,2,3...).",
                "type": "boolean",
                "example": true
              },
              "have_special_character": {
                "description": "If set to `true`, the password must have at least 1 special character (!,@,#...).",
                "type": "boolean",
                "example": true
              },
              "have_upper_and_lower_characters": {
                "description": "If set to `true`, the password must include both uppercase and lowercase characters.",
                "type": "boolean",
                "example": true
              },
              "length": {
                "description": "The minimum length that the meeting/webinar password needs to have.",
                "type": "integer",
                "example": 8
              },
              "only_allow_numeric": {
                "description": "If set to `true`, the password must only contain numbers and no other characters.",
                "type": "boolean",
                "example": true
              },
              "weak_enhance_detection": {
                "description": "If set to `true`, users will be informed if the provided password is weak.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "not_store_meeting_topic": {
            "description": "Always display \"Zoom Meeting\" as the meeting topic.",
            "type": "boolean",
            "example": true
          },
          "participant_video": {
            "description": "Start meetings with the participant video on. Participants can change this setting during the meeting.",
            "type": "boolean",
            "example": true
          },
          "personal_meeting": {
            "description": "Personal Meeting Setting.<br><br>\n`true`: Indicates that the **\"Enable Personal Meeting ID\"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>\n`false`: Indicates that the **\"Enable Personal Meeting ID\"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.\nFor Zoom Phone only:If a user has been assigned a desk phone, **\"Elevate to Zoom Meeting\"** on desk phone will be disabled.\n\n\n",
            "type": "boolean",
            "example": true
          },
          "require_password_for_instant_meetings": {
            "description": "Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
            "type": "boolean",
            "example": true
          },
          "require_password_for_pmi_meetings": {
            "description": "Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
            "enum": [
              "jbh_only",
              "all",
              "none"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Only meetings with Join Before Host enabled",
              "All meetings using PMI",
              "Disabled"
            ],
            "example": "jbh_only"
          },
          "require_password_for_scheduled_meetings": {
            "description": "Require a password for meetings which have already been scheduled\n",
            "type": "boolean",
            "example": true
          },
          "require_password_for_scheduling_new_meetings": {
            "description": "Require a password when scheduling new meetings. This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.",
            "type": "boolean",
            "example": true
          },
          "use_pmi_for_instant_meetings": {
            "description": "Use Personal Meeting ID (PMI) when starting an instant meeting\n",
            "type": "boolean",
            "example": true
          },
          "use_pmi_for_scheduled_meetings": {
            "description": "Use Personal Meeting ID (PMI) when scheduling a meeting\n",
            "type": "boolean",
            "example": true
          },
          "always_display_zoom_meeting_as_topic": {
            "description": "Information about the [**Always display \"Zoom Meeting\" as the meeting topic**](https://support.zoom.us/hc/en-us/articles/201363253-Changing-account-settings#h_01EG9BJ646V2WJK1S3H2MP6YV6) setting.",
            "type": "object",
            "properties": {
              "enable": {
                "type": "boolean",
                "description": "Whether the **Always display \"Zoom Meeting\" as the meeting topic** setting is enabled.",
                "example": true
              },
              "display_topic_for_scheduled_meetings": {
                "type": "boolean",
                "description": "Whether to display \"Zoom Meeting\" as the topic for already-scheduled meetings.",
                "example": true
              }
            }
          },
          "hide_meeting_description": {
            "type": "object",
            "description": "Information about the **Hide meeting description** feature.",
            "properties": {
              "enable": {
                "type": "boolean",
                "description": "Whether the **Hide meeting description** setting is enabled.",
                "example": true
              },
              "hide_description_for_scheduled_meetings": {
                "type": "boolean",
                "description": "Whether to hide the description for already-scheduled meetings.",
                "example": true
              }
            }
          },
          "always_display_zoom_webinar_as_topic": {
            "type": "object",
            "description": "Information about the [**Always show \"Zoom Webinar\" as the webinar topic**](https://support.zoom.us/hc/en-us/articles/201363253-Changing-account-settings#h_01EG9BJ646V2WJK1S3H2MP6YV6) setting.",
            "properties": {
              "enable": {
                "type": "boolean",
                "description": "Whether the **Always show \"Zoom Webinar\" as the webinar topic** setting is enabled.",
                "example": true
              },
              "display_topic_for_scheduled_webinars": {
                "type": "boolean",
                "description": "Whether to display \"Zoom Webinar\" as the topic for already-scheduled meetings.",
                "example": true
              }
            }
          },
          "hide_webinar_description": {
            "type": "object",
            "description": "Information about the **Hide webinar description** feature.",
            "properties": {
              "enable": {
                "type": "boolean",
                "description": "Whether the **Hide webinar description** setting is enabled.",
                "example": true
              },
              "hide_description_for_scheduled_webinars": {
                "type": "boolean",
                "description": "Whether to hide webinar description for the webinars which have already been scheduled.",
                "example": true
              }
            }
          }
        },
        "type": "object"
      },
      "AccountSettingsSecurity": {
        "description": "[Security settings](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) of an Account.",
        "properties": {
          "admin_change_name_pic": {
            "type": "boolean",
            "deprecated": true,
            "description": "Whether to only allow account administrators to change a user's picture.",
            "example": true
          },
          "admin_change_user_info": {
            "type": "boolean",
            "description": "Whether to only allow account administrators to change a user's information.",
            "example": true
          },
          "user_modifiable_info_by_admin": {
            "type": "array",
            "description": "If the `admin_change_user_info` value is `true`, the list of the types of user information that only the account administrators can modify: \n* `name` \n* `profile_picture` \n* `sign_in_email` \n* `host_key`",
            "items": {
              "type": "string",
              "enum": [
                "name",
                "profile_picture",
                "sign_in_email",
                "host_key"
              ],
              "example": [
                "name",
                "host_key",
                "sign_in_email"
              ]
            }
          },
          "hide_billing_info": {
            "description": "Hide billing information.",
            "type": "boolean",
            "example": true
          },
          "import_photos_from_devices": {
            "description": "Allow users to import photos from a photo library on a  device.",
            "type": "boolean",
            "example": true
          },
          "password_requirement": {
            "description": "This object refers to the [enhanced password rules](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) that allows Zoom account admins and owners to apply extra requirements to the users' Zoom login password.",
            "properties": {
              "consecutive_characters_length": {
                "description": "\nSpecify the max length of consecutive characters(abcde...) that can be used in a password.\nIf you set the value of this field to `0`, no restriction will be applied on consecutive characters. \n\nIf you would like to set this restriction, you can specify a number between 4 and 8 that define the maximum allowed length for consecutive characters in a password.\n\nThe max allowed length will be `n-1` where `n` refers to the value you provide for this field.  For instance, if you provide `4` as the value, there can only be a maximum of `3` consecutive characters in a password(example: abc1x@8fdh).",
                "type": "integer",
                "example": 8
              },
              "have_special_character": {
                "description": "If the value of this field is set to `true`, the password must have at least one special character(!, @, #...).",
                "type": "boolean",
                "example": true
              },
              "minimum_password_length": {
                "description": "Specify a minimum length for the password. The password length can be from a minimum of 9 characters, up to 14 characters. If you provide `0` as the value of this field, this field will be disabled and not be used and the basic password length requirement (minimum of 8 characters) will be applied for the requirement.",
                "maximum": 14,
                "minimum": 8,
                "type": "integer",
                "example": 8
              },
              "weak_enhance_detection": {
                "description": "If the value of this field is set to `true`, user passwords will have to pass detection through a weak password dictionary in case hackers use simple passwords to sign in to your users' accounts.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "sign_again_period_for_inactivity_on_client": {
            "description": "Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Client app after a set amount of time. <br>\n\nIf this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Client. The value for the period of inactivity can be one of the following:<br>\n\n`5`: 5 minutes<br>\n`10`: 10 minutes<br>\n`15`: 15 minutes<br>\n`30`: 30 minutes<br>\n`45`: 45 minutes<br>\n`60`: 60 minutes<br>\n`90`: 90 minutes<br>\n`120`: 120 minutes\n",
            "type": "integer",
            "example": 45
          },
          "sign_again_period_for_inactivity_on_web": {
            "description": "Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Web Portal after a set amount of time. <br>\n\nIf this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Web Portal. The value for the period of inactivity can be one of the following:<br>\n\n`5`: 5 minutes<br>\n`10`: 10 minutes<br>\n`15`: 15 minutes<br>\n`30`: 30 minutes<br>\n`60`: 60 minutes<br>\n`120`: 120 minutes\n\n    \n\n",
            "type": "integer",
            "example": 60
          },
          "sign_in_with_two_factor_auth": {
            "description": "Settings for 2FA( [two factor authentication](https://support.zoom.us/hc/en-us/articles/360038247071) ). The value can be one of the following:\n`all`: Two factor authentication will be enabled for all users in the account.<br>\n`none`: Two factor authentication is disabled.<br>\n`group`: Two factor authentication will be enabled for users belonging to specific groups. If 2FA is enabled for certain groups, the group IDs of the group(s) will be provided in the `sign_in_with_two_factor_auth_groups` field.<br>\n`role`: Two factor authentication will be enabled only for users assigned with specific roles in the account. If 2FA is enabled for specific roles, the role IDs will be provided in the\n`sign_in_with_two_factor_auth_roles` field.\n",
            "enum": [
              "all",
              "group",
              "role",
              "none"
            ],
            "type": "string",
            "example": "group"
          },
          "sign_in_with_two_factor_auth_groups": {
            "description": "This field contains group IDs of groups that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `group`",
            "items": {
              "type": "string",
              "example": "group"
            },
            "type": "array"
          },
          "sign_in_with_two_factor_auth_roles": {
            "description": "This field contains role IDs of roles that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `role`.",
            "items": {
              "type": "string",
              "example": "role"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AccountSettingsTSP": {
        "description": "Account Settings: TSP.",
        "properties": {
          "call_out": {
            "description": "Call Out",
            "type": "boolean",
            "example": true
          },
          "call_out_countries": {
            "description": "Call Out Countries/Regions",
            "items": {
              "type": "string",
              "example": "us"
            },
            "type": "array"
          },
          "display_toll_free_numbers": {
            "description": "Display toll-free numbers",
            "type": "boolean",
            "example": true
          },
          "show_international_numbers_link": {
            "description": "Show international numbers link on the invitation email",
            "type": "boolean",
            "example": true
          }
        },
        "type": "object"
      },
      "AccountSettingsTelephony": {
        "description": "Account Settings: Telephony.",
        "properties": {
          "audio_conference_info": {
            "description": "Third party audio conference info.",
            "type": "string",
            "example": "test"
          },
          "telephony_regions": {
            "description": "Indicates where most of the participants call into or call from during a meeting.",
            "properties": {
              "allowed_values": {
                "description": "Telephony region options provided by Zoom to select from.",
                "items": {
                  "type": "string",
                  "example": "CNTB"
                },
                "type": "array"
              },
              "selection_values": {
                "description": "The account's selected telephony regions that indicate where most participants call in to or call from during a meeting.",
                "type": "string",
                "example": "USTB"
              }
            },
            "type": "object"
          },
          "third_party_audio": {
            "description": "Users can join the meeting using the existing third party audio configuration.",
            "type": "boolean",
            "example": true
          }
        },
        "type": "object"
      },
      "AccountSettingsUpdateTelephony": {
        "description": "Account Settings Update: Telephony.",
        "properties": {
          "audio_conference_info": {
            "description": "Third party audio conference info.",
            "type": "string",
            "example": "test"
          },
          "telephony_regions": {
            "description": "Indicates where most of the participants call into or call from during a meeting.",
            "properties": {
              "selection_values": {
                "description": "The account's selected telephony regions that indicate where most participants call into or call from during a meeting.",
                "type": "string",
                "example": "USTB"
              }
            },
            "type": "object"
          },
          "third_party_audio": {
            "description": "Users can join the meeting using the existing third party audio configuration.",
            "type": "boolean",
            "example": true
          }
        },
        "type": "object"
      },
      "AccountSettingsZoomRooms": {
        "description": "Account Settings: Zoom Rooms.",
        "properties": {
          "auto_start_stop_scheduled_meetings": {
            "description": "Automatic start and stop for scheduled meetings.",
            "type": "boolean",
            "example": true
          },
          "cmr_for_instant_meeting": {
            "description": "Cloud recording for instant meetings.",
            "type": "boolean",
            "example": true
          },
          "force_private_meeting": {
            "description": "Shift all meetings to private.",
            "type": "boolean",
            "example": true
          },
          "hide_host_information": {
            "description": "Hide host and meeting ID from private meetings.",
            "type": "boolean",
            "example": true
          },
          "list_meetings_with_calendar": {
            "description": "Display meeting list with calendar integration.",
            "type": "boolean",
            "example": true
          },
          "start_airplay_manually": {
            "description": "Start AirPlay service manually.",
            "type": "boolean",
            "example": true
          },
          "ultrasonic": {
            "description": "Automatic direct sharing using an ultrasonic proximity signal.",
            "type": "boolean",
            "example": true
          },
          "upcoming_meeting_alert": {
            "description": "Upcoming meeting alert.",
            "type": "boolean",
            "example": true
          },
          "weekly_system_restart": {
            "description": "Weekly system restart.",
            "type": "boolean",
            "example": true
          },
          "zr_post_meeting_feedback": {
            "description": "Zoom Room post meeting feedback.",
            "type": "boolean",
            "example": true
          }
        },
        "type": "object"
      },
      "AccountUpdateSettings": {
        "properties": {
          "security": {
            "$ref": "#/components/schemas/AccountSettingsSecurity"
          },
          "audio_conferencing": {
            "$ref": "#/components/schemas/AccountSettingsAudioConference"
          },
          "email_notification": {
            "$ref": "#/components/schemas/AccountSettingsEmailNotification"
          },
          "feature": {
            "$ref": "#/components/schemas/AccountSettingsFeature"
          },
          "in_meeting": {
            "description": "In Meeting Account Settings",
            "properties": {
              "alert_guest_join": {
                "description": "Whether to enable [guest participant](https://support.zoom.us/hc/en-us/articles/115004791123-Identifying-guests-in-the-meeting-webinar) alerts.",
                "type": "boolean",
                "example": true
              },
              "allow_host_to_enable_focus_mode": {
                "default": null,
                "description": "Whether the host can enable [**Focus Mode**](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) when scheduling a meeting. This value defaults to `null`.",
                "type": "boolean",
                "example": true
              },
              "allow_live_streaming": {
                "description": "Whether to allow livestreaming.",
                "type": "boolean",
                "example": true
              },
              "allow_participants_chat_with": {
                "description": "Whether to allow participants to only chat with certain groups: \n* `1` — The participant cannot use chat. \n* `2` — Host and co-hosts only. \n * `3` — The participant can chat with other participants publicly. \n* `4` - The participant can chat with other participants publicly and privately. \n\n **Note:** This setting is only available with client versions 5.7.3 and above.",
                "enum": [
                  1,
                  2,
                  3,
                  4
                ],
                "type": "integer",
                "example": 1
              },
              "allow_participants_to_rename": {
                "description": "Whether to allow meeting participants to rename themselves during a meeting.",
                "type": "boolean",
                "example": true
              },
              "allow_show_zoom_windows": {
                "description": "Whether to enable the [**Show Zoom windows during screen share**](https://support.zoom.us/hc/en-us/articles/360061383571-Showing-Zoom-windows-during-screen-share) feature.",
                "type": "boolean",
                "example": true
              },
              "allow_users_save_chats": {
                "description": "Whether to allow participants to save meeting chats: \n* `1` — Participants cannot save meeting chats. \n* `2` — Participants can only save host and co-host meeting chats. \n* `3` — Participants can save all meeting chats.",
                "enum": [
                  1,
                  2,
                  3
                ],
                "type": "integer",
                "example": 1
              },
              "annotation": {
                "description": "Whether to allow meeting participants to use the [annotation tools](https://support.zoom.us/hc/en-us/articles/115005706806).",
                "type": "boolean",
                "example": true
              },
              "anonymous_question_answer": {
                "description": "Whether to enable anonymous Q&A.",
                "type": "boolean",
                "example": true
              },
              "attendee_on_hold": {
                "deprecated": true,
                "default": false,
                "description": "Whether to allow the host to put an attendee on hold. This value defaults to `false`. **This field has been deprecated and is no longer supported.**",
                "type": "boolean",
                "example": true
              },
              "attention_mode_focus_mode": {
                "default": false,
                "description": "Whether the [**Focus Mode**](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) feature is enabled. When enabled, this feature only displays the host and co-hosts' video and profile pictures during a meeting. \n\n This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "auto_answer": {
                "description": "Whether to enable the [**Auto-answer group in chat**](https://support.zoom.us/hc/en-us/articles/203736135-Auto-answering-invitations-to-meetings) setting. Calls from these group members will be answered automatically.",
                "type": "boolean",
                "example": true
              },
              "auto_saving_chat": {
                "description": "Whether to automatically save all in-meeting chats.",
                "type": "boolean",
                "example": true
              },
              "breakout_room": {
                "description": "Whether to allow the meeting host to split meeting participants into separate breakout rooms.",
                "type": "boolean",
                "example": true
              },
              "breakout_room_schedule": {
                "description": "Whether the host can assign participants to breakout rooms when scheduling. This feature is **only** available in version 4.5.0 or higher.",
                "type": "boolean",
                "example": true
              },
              "chat": {
                "description": "Whether to enable chat during meeting for all participants.",
                "type": "boolean",
                "example": true
              },
              "closed_caption": {
                "description": "Whether to enable closed captions.",
                "type": "boolean",
                "example": true
              },
              "closed_captioning": {
                "description": "Information about the account's closed captioning settings.",
                "properties": {
                  "auto_transcribing": {
                    "description": "Whether to enable Zoom's [live transcription feature](https://support.zoom.us/hc/en-us/articles/207279736-Managing-closed-captioning-and-live-transcription#h_01FHGGHYJ4457H4GSZY0KM3NSB).",
                    "type": "boolean",
                    "example": true
                  },
                  "enable": {
                    "description": "Whether to enable [closed captioning and transcription services](https://support.zoom.us/hc/en-us/articles/4409683389709-Enabling-or-disabling-closed-captioning-and-live-transcription-services).",
                    "type": "boolean",
                    "example": true
                  },
                  "save_caption": {
                    "description": "Whether to allow participants to [save closed captions or transcripts](https://support.zoom.us/hc/en-us/articles/360060958752). \n\n **Note:** If the `view_full_transcript` field is set to `false`, participants **cannot** save captions.",
                    "type": "boolean",
                    "example": true
                  },
                  "third_party_captioning_service": {
                    "description": "Whether to allow the use of an API token to integrate with a [3rd-party device](https://support.zoom.us/hc/en-us/articles/115002212983) to provide closed captioning.",
                    "type": "boolean",
                    "example": true
                  },
                  "view_full_transcript": {
                    "description": "Whether to enable the viewing of full transcripts in the in-meeting side panel.",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              },
              "co_host": {
                "description": "Whether to allow the host to add co-hosts.",
                "type": "boolean",
                "example": true
              },
              "custom_data_center_regions": {
                "description": "Whether to use custom [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-meetings-webinars): \n* `true` — Users can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting real-time meeting traffic. The data center regions can be provided in the `data_center_regions` field. \n* `false` — Only use the default data center regions.",
                "type": "boolean",
                "example": true
              },
              "custom_live_streaming_service": {
                "description": "Whether to allow custom livestreaming.",
                "type": "boolean",
                "example": true
              },
              "custom_service_instructions": {
                "description": "The specific instructions to configure a custom livestream.",
                "type": "string",
                "example": "The specific instructions"
              },
              "data_center_regions": {
                "type": "array",
                "description": "If the value of `custom_data_center_regions` is `true`, a comma-separated list of the following [data center regions](https://support.zoom.us/hc/en-us/articles/360059254691-Datacenter-abbreviation-list) to opt in to: \n* `AU` — Australia.\n* `LA` — Latin America. \n* `CA` — Canada. \n* `CN` — China. \n* `DE` — Germany. \n* `HK` — Hong Kong SAR. \n* `IN` — India. \n* `IE` — Ireland. \n* `TY` — Japan. \n* `MX` — Mexico. \n* `NL` — Netherlands. \n* `SG` — Singapore. \n* `US` — United States.",
                "items": {
                  "type": "string",
                  "enum": [
                    "AU",
                    "LA",
                    "CA",
                    "CN",
                    "DE",
                    "HK",
                    "IN",
                    "IE",
                    "TY",
                    "MX",
                    "NL",
                    "SG",
                    "US"
                  ],
                  "example": "AU"
                }
              },
              "disable_screen_sharing_for_host_meetings": {
                "description": "Whether to enable the **Disable desktop screen sharing for meetings you host** setting.",
                "type": "boolean",
                "example": true
              },
              "disable_screen_sharing_for_in_meeting_guests": {
                "description": "Whether to enable the **Disable screen sharing when guests are in the meeting** setting.",
                "type": "boolean",
                "example": true
              },
              "dscp_audio": {
                "default": 56,
                "description": "The DSCP audio marking value. This value defaults to `56`.",
                "maximum": 63,
                "minimum": 1,
                "type": "integer",
                "example": 56
              },
              "dscp_marking": {
                "description": "Whether to enable [differentiated services code point (DSCP)](https://en.wikipedia.org/wiki/Differentiated_services) marking.",
                "type": "boolean",
                "example": true
              },
              "dscp_video": {
                "default": 40,
                "description": "The DSCP video marking value. This value defaults to `40`.",
                "maximum": 63,
                "minimum": 1,
                "type": "integer",
                "example": 40
              },
              "e2e_encryption": {
                "description": "Whether to require [AES encryption](https://en.wikipedia.org/wiki/Advanced_Encryption_Standard) for meetings.",
                "type": "boolean",
                "example": true
              },
              "entry_exit_chime": {
                "description": "When to play the meeting entry/exit sound notification: \n* `host` — Only when the host joins or leaves. \n* `all` — When any participant joins or leaves. \n* `none` - Disable the entry/exit sound notification.",
                "enum": [
                  "host",
                  "all",
                  "none"
                ],
                "type": "string",
                "example": "host"
              },
              "far_end_camera_control": {
                "description": "Whether to allow another user to take control of the user's camera.",
                "type": "boolean",
                "example": true
              },
              "feedback": {
                "description": "Whether to enable the [**Feedback to Zoom**](https://support.zoom.us/hc/en-us/articles/115005838023-Feedback-to-Zoom) setting.",
                "type": "boolean",
                "example": true
              },
              "file_transfer": {
                "description": "Whether the [**Send files via meeting chat**](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting is enabled.",
                "type": "boolean",
                "example": true
              },
              "group_hd": {
                "description": "Whether to enable group HD video.",
                "type": "boolean",
                "example": true
              },
              "join_from_desktop": {
                "description": "Whether to allow participants to join a meeting directly from their desktop browser. Note that the meeting experience from the desktop browser is limited.",
                "type": "boolean",
                "example": true
              },
              "join_from_mobile": {
                "description": "Whether to allow participants to join a meeting directly from their mobile browser. Note that the meeting experience from the mobile browser is limited.",
                "type": "boolean",
                "example": true
              },
              "language_interpretation": {
                "description": "Information about the [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Using-Language-Interpretation-in-your-meeting-or-webinar) settings.",
                "properties": {
                  "custom_languages": {
                    "default": null,
                    "description": "A list of user-defined supported languages.",
                    "items": {
                      "type": "string",
                      "example": "English"
                    },
                    "type": "array"
                  },
                  "enable": {
                    "description": "Whether to allow hosts to assign participants as interpreters who can interpret one language into another in real-time.",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              },
              "live_streaming_facebook": {
                "description": "Whether to allow Facebook livestreaming.",
                "type": "boolean",
                "example": true
              },
              "live_streaming_youtube": {
                "description": "Whether to allow YouTube livestreaming.",
                "type": "boolean",
                "example": true
              },
              "manual_captioning": {
                "description": "Information about manual captioning settings.",
                "properties": {
                  "allow_to_type": {
                    "description": "Whether to allow the host to manually caption or let the host assign a participant to provide manual captioning.",
                    "type": "boolean",
                    "example": true
                  },
                  "auto_generated_captions": {
                    "description": "Whether to enable Zoom's [live transcription feature](https://support.zoom.us/hc/en-us/articles/207279736-Managing-closed-captioning-and-live-transcription#h_01FHGGHYJ4457H4GSZY0KM3NSB).",
                    "type": "boolean",
                    "example": true
                  },
                  "full_transcript": {
                    "description": "Whether to enable the viewing of full transcripts in the in-meeting side panel.",
                    "type": "boolean",
                    "example": true
                  },
                  "manual_captions": {
                    "description": "Whether to [enable manual closed captioning](https://support.zoom.us/hc/en-us/articles/207279736-Managing-closed-captioning-and-live-transcription).",
                    "type": "boolean",
                    "example": true
                  },
                  "save_captions": {
                    "description": "Whether to allow participants to [save closed captions or transcripts](https://support.zoom.us/hc/en-us/articles/360060958752). \n\n **Note:** If the `full_transcript` field is set to `false`, participants **cannot** save captions.",
                    "type": "boolean",
                    "example": true
                  },
                  "third_party_captioning_service": {
                    "description": "Whether to allow the use of an API token to integrate with a [3rd-party device](https://support.zoom.us/hc/en-us/articles/115002212983) to provide closed captioning.",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              },
              "meeting_reactions": {
                "description": "Whether meeting participants can [communicate using the emoji reactions](https://support.zoom.us/hc/en-us/articles/115001286183-Nonverbal-feedback-and-meeting-reactions) located in the **Reactions** menu in the meeting toolbar.",
                "type": "boolean",
                "example": true
              },
              "meeting_survey": {
                "description": "Whether to allow the host to present a survey to participants once a meeting has ended. This feature is only available in version 5.7.3 or higher.",
                "type": "boolean",
                "example": true
              },
              "original_audio": {
                "description": "Whether to allow users to select original sound in their client settings.",
                "type": "boolean",
                "example": true
              },
              "p2p_connetion": {
                "description": "Whether to enable the [**Peer to Peer connection while only 2 people are in a meeting**](https://support.zoom.us/hc/en-us/articles/360061410851-Enabling-Peer-to-Peer-connection-for-2-people-in-a-meeting) setting.",
                "type": "boolean",
                "example": true
              },
              "p2p_ports": {
                "description": "Whether to enable the **Listening ports range** setting.",
                "type": "boolean",
                "example": true
              },
              "polling": {
                "description": "Whether to add polls to the meeting controls.",
                "type": "boolean",
                "example": true
              },
              "meeting_polling": {
                "type": "object",
                "description": "Information about the account's meeting polling settings.",
                "properties": {
                  "enable": {
                    "type": "boolean",
                    "description": "Whether to allow the host to add polls before or during a meeting.",
                    "example": true
                  },
                  "advanced_polls": {
                    "type": "boolean",
                    "description": "Whether to allow the host to create advanced polls and quizzes. Advanced polls and quizzes include single choice, multiple choice, drop down, matching, short answer, long answer, rank order, and fill-in-the-blank questions. Hosts can also set the correct answers for quizzes they create.",
                    "example": true
                  },
                  "allow_alternative_host_to_add_edit": {
                    "type": "boolean",
                    "description": "Whether to allow the alternative host to add or edit polls and quizzes.",
                    "example": true
                  }
                }
              },
              "ports_range": {
                "default": "",
                "description": "When the `p2p_ports` value is `true`, a comma-separated list of the peer to peer listening ports range, between `1` to `65535`. This value defaults to an empty string.",
                "type": "string",
                "example": ""
              },
              "post_meeting_feedback": {
                "description": "Whether to display a thumbs up or thumbs down feedback survey at the end of each meeting.",
                "type": "boolean",
                "example": true
              },
              "private_chat": {
                "description": "Whether to [enable private chat](https://support.zoom.us/hc/en-us/articles/360060835932-Enabling-and-disabling-private-chat) between participants during meetings.",
                "type": "boolean",
                "example": true
              },
              "record_play_own_voice": {
                "description": "Whether to let the user record and play their own voice.",
                "type": "boolean",
                "example": true
              },
              "remote_control": {
                "description": "Whether to enable the [**Remote control**](https://support.zoom.us/hc/en-us/articles/201362673-Requesting-or-giving-remote-control) setting.",
                "type": "boolean",
                "example": true
              },
              "request_permission_to_unmute_participants": {
                "type": "boolean",
                "description": "Whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting) setting is enabled.",
                "example": true
              },
              "screen_sharing": {
                "description": "Whether to allow hosts and participants to share their screen or content during meetings.",
                "type": "boolean",
                "example": true
              },
              "sending_default_email_invites": {
                "description": "Whether to enable the [**Only show default email when sending email invites**](https://support.zoom.us/hc/en-us/articles/360061433531-Showing-default-email-when-sending-email-invites) setting.",
                "type": "boolean",
                "example": true
              },
              "show_a_join_from_your_browser_link": {
                "description": "Whether to allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is useful for participants who cannot download, install, or run applications. Note that the meeting experience from the browser is limited.",
                "type": "boolean",
                "example": true
              },
              "show_meeting_control_toolbar": {
                "description": "Whether to display the in-meeting control toolbar.",
                "type": "boolean",
                "example": true
              },
              "slide_control": {
                "description": "Whether the person sharing during a presentation can allow others to control the slide presentation. This feature is only available in version 5.8.3 or higher.",
                "type": "boolean",
                "example": true
              },
              "stereo_audio": {
                "description": "Whether to allow users to select stereo audio in their client settings.",
                "type": "boolean",
                "example": true
              },
              "use_html_format_email": {
                "description": "Whether to enable the use of HTML-formatted emails for the Outlook plugin.",
                "type": "boolean",
                "example": true
              },
              "virtual_background": {
                "description": "Whether to enable Virtual Backgrounds.",
                "type": "boolean",
                "example": true
              },
              "virtual_background_settings": {
                "description": "The account's Virtual Background settings.",
                "properties": {
                  "allow_upload_custom": {
                    "description": "Whether to allow user to upload custom Virtual Backgrounds.",
                    "type": "boolean",
                    "example": true
                  },
                  "allow_videos": {
                    "description": "Whether to allow the use of videos for Virtual Backgrounds.",
                    "type": "boolean",
                    "example": true
                  },
                  "enable": {
                    "description": "Whether to enable Virtual Backgrounds.",
                    "type": "boolean",
                    "example": true
                  },
                  "files": {
                    "description": "Information about the Virtual Background files.",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The Virtual Background file's ID.",
                          "type": "string",
                          "example": "13refwef43svSFrwfrgfsrwrfew"
                        },
                        "is_default": {
                          "description": "Whether the file is the default Virtual Background file.",
                          "type": "boolean",
                          "example": true
                        },
                        "name": {
                          "description": "The Virtual Background file's name.",
                          "type": "string",
                          "example": "test.png"
                        },
                        "size": {
                          "description": "The Virtual Background file's size, in bytes.",
                          "type": "integer",
                          "example": 1235
                        },
                        "type": {
                          "description": "The Virtual Background file's type.",
                          "type": "string",
                          "example": "image"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "watermark": {
                "description": "Whether to include a [watermark](https://support.zoom.us/hc/en-us/articles/209605273-Adding-an-image-watermark) when viewing a shared screen.",
                "type": "boolean",
                "example": true
              },
              "webinar_chat": {
                "description": "Information about the account's webinar chat settings.",
                "properties": {
                  "allow_attendees_chat_with": {
                    "description": "Allow webinar attendees to chat with: \n* `1` — No one. \n* `2` — Host and all panelists. \n* `3` — Everyone.",
                    "enum": [
                      1,
                      2,
                      3
                    ],
                    "type": "integer",
                    "example": 1
                  },
                  "allow_auto_save_local_chat_file": {
                    "description": "Whether to automatically save chat messages to a local file on the host's computer when the webinar ends.",
                    "type": "boolean",
                    "example": true
                  },
                  "allow_panelists_chat_with": {
                    "description": "Allow webinar panelists to chat with: \n* `1` — Host and all panelists. \n* `2` — Everyone.",
                    "enum": [
                      1,
                      2
                    ],
                    "type": "integer",
                    "example": 1
                  },
                  "allow_panelists_send_direct_message": {
                    "description": "Whether to allow webinar panelists to send direct messages to other panelists.",
                    "type": "boolean",
                    "example": true
                  },
                  "allow_users_save_chats": {
                    "description": "Whether to allow webinar attendees to save chats: \n* `0` — Attendees cannot save chats. \n* `1` — Attendees can only save host and panelist chats. \n* `2` — Attendees can save all chats.",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "type": "integer",
                    "example": 1
                  },
                  "default_attendees_chat_with": {
                    "description": "By default, allow webinar attendees to chat with: \n* `1` — Host and all panelists. \n* `2` — Everyone.",
                    "enum": [
                      1,
                      2
                    ],
                    "type": "integer",
                    "example": 1
                  },
                  "enable": {
                    "description": "Whether to allow webinar participants to send chat messages.",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              },
              "webinar_live_streaming": {
                "properties": {
                  "custom_service_instructions": {
                    "description": "The specific instructions to allow the account's meeting hosts to configure a custom livestream.",
                    "type": "string",
                    "example": "The specific instructions"
                  },
                  "enable": {
                    "description": "Whether to enable webinar livestreaming.",
                    "type": "boolean",
                    "example": true
                  },
                  "live_streaming_reminder": {
                    "description": "Whether to notify users to watch the livestream. This does not apply to custom RTMP (real-time messaging protocol).",
                    "type": "boolean",
                    "example": true
                  },
                  "live_streaming_service": {
                    "description": "The available livestreaming services: \n* `facebook` — Facebook. \n* `workplace_by_facebook` — Workplace by Facebook. \n* `youtube` — YouTube. \n* `custom_live_streaming_service` — Custom Live Streaming Service.",
                    "items": {
                      "enum": [
                        "facebook",
                        "workplace_by_facebook",
                        "youtube",
                        "custom_live_streaming_service"
                      ],
                      "type": "string",
                      "example": "facebook"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "webinar_polling": {
                "description": "Information about the account's webinar polling settings.",
                "properties": {
                  "enable": {
                    "description": "Whether to allow the host to add polls before or during a webinar.",
                    "type": "boolean",
                    "example": true
                  },
                  "advanced_polls": {
                    "description": "Whether to allow the host to create advanced polls and quizzes. Advanced polls and quizzes include single choice, multiple choice, drop down, matching, short answer, long answer, rank order, and fill-in-the-blank questions. Hosts can also set the correct answers for quizzes they create.",
                    "type": "boolean",
                    "example": true
                  },
                  "allow_alternative_host_to_add_edit": {
                    "type": "boolean",
                    "description": "Whether to allow the alternative host to add or edit polls and quizzes.",
                    "example": true
                  }
                },
                "type": "object"
              },
              "webinar_question_answer": {
                "description": "Whether attendees can ask the host and panelists questions in the webinar.",
                "type": "boolean",
                "example": true
              },
              "webinar_survey": {
                "description": "Whether to allow the host to present surveys to attendees once a webinar has ended.",
                "type": "boolean",
                "example": true
              },
              "whiteboard": {
                "description": "Whether to enable the [**Whiteboard**](https://support.zoom.us/hc/en-us/articles/205677665) feature.",
                "type": "boolean",
                "example": true
              },
              "who_can_share_screen": {
                "description": "The type of user who can share their screen or content during meetings: \n* `host` — Only hosts can screen share. \n* `all` — Both hosts and participants can screen share.",
                "enum": [
                  "host",
                  "all"
                ],
                "type": "string",
                "example": "host"
              },
              "who_can_share_screen_when_someone_is_sharing": {
                "description": "The type of user that can begin sharing their screen when someone else in the meeting is sharing their screen: \n* `host` — Only hosts can screen share when someone else is sharing. \n* `all` — Both hosts and participants can screen share when someone else is sharing.",
                "enum": [
                  "host",
                  "all"
                ],
                "type": "string",
                "example": "all"
              },
              "workplace_by_facebook": {
                "description": "Whether to allow Workplace by Facebook livestreaming.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "integration": {
            "$ref": "#/components/schemas/AccountSettingsIntegration"
          },
          "other_options": {
            "$ref": "#/components/schemas/AccountSettingsOtherOptions"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          },
          "recording": {
            "$ref": "#/components/schemas/AccountSettingsRecording"
          },
          "schedule_meeting": {
            "$ref": "#/components/schemas/AccountSettingsScheduleMeeting"
          },
          "telephony": {
            "$ref": "#/components/schemas/AccountSettingsUpdateTelephony"
          },
          "tsp": {
            "$ref": "#/components/schemas/AccountSettingsTSP"
          },
          "zoom_rooms": {
            "$ref": "#/components/schemas/AccountSettingsZoomRooms"
          }
        },
        "title": "Information about the account's updated settings.",
        "type": "object"
      },
      "BillingContact": {
        "description": "Billing Contact object.",
        "properties": {
          "address": {
            "description": "Billing Contact's address.",
            "type": "string",
            "example": ""
          },
          "apt": {
            "description": "Billing Contact's apartment/suite.",
            "type": "string",
            "example": ""
          },
          "city": {
            "description": "Billing Contact's city.",
            "type": "string",
            "example": ""
          },
          "country": {
            "description": "Billing Contact's country.",
            "type": "string",
            "example": ""
          },
          "email": {
            "description": "Billing Contact's email address.",
            "type": "string",
            "example": ""
          },
          "first_name": {
            "description": "Billing Contact's first name.",
            "type": "string",
            "example": ""
          },
          "last_name": {
            "description": "Billing Contact's last name.",
            "type": "string",
            "example": ""
          },
          "phone_number": {
            "description": "Billing Contact's phone number.",
            "type": "string",
            "example": ""
          },
          "state": {
            "description": "Billing Contact's state.",
            "type": "string",
            "example": ""
          },
          "zip": {
            "description": "Billing Contact's zip/postal code.",
            "type": "string",
            "example": ""
          }
        },
        "type": "object"
      },
      "BillingContactRequired": {
        "description": "The account's billing contact information.",
        "properties": {
          "address": {
            "description": "The billing contact's address.",
            "type": "string",
            "example": ""
          },
          "apt": {
            "description": "The billing contact's apartment or suite number.",
            "type": "string",
            "example": ""
          },
          "city": {
            "description": "The billing contact's city.",
            "type": "string",
            "example": ""
          },
          "country": {
            "description": "The billing contact's [country ID abbreviation](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
            "type": "string",
            "example": ""
          },
          "email": {
            "description": "The billing contact's email address.",
            "type": "string",
            "example": ""
          },
          "first_name": {
            "description": "The billing contact's first name.",
            "type": "string",
            "example": ""
          },
          "last_name": {
            "description": "The billing contact's last name.",
            "type": "string",
            "example": ""
          },
          "phone_number": {
            "description": "The billing contact's phone number.",
            "type": "string",
            "example": ""
          },
          "state": {
            "description": "The billing contact's state.",
            "type": "string",
            "example": ""
          },
          "zip": {
            "description": "The billing contact's zip or postal code.",
            "type": "string",
            "example": ""
          }
        },
        "required": [
          "first_name",
          "last_name",
          "email",
          "phone_number",
          "address",
          "city",
          "state",
          "zip",
          "country"
        ],
        "type": "object"
      },
      "Channel": {
        "description": "The channel object represents a Zoom chat [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-). ",
        "properties": {
          "properties": {
            "properties": {
              "channel_settings": {
                "properties": {
                  "allow_to_add_external_users": {
                    "description": "Allow members to add external users to the channel. The value can be one of the following:<br>\n`0`: Disable. Do not allow channel members to add external users to the channel.<br>\n`1`: All channel members. Allow all channel members to add external users to the channel.<br>\n`2`: By members in your organization. Allow only members in your organization to add external users to the channel.",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "type": "integer",
                    "example": ""
                  },
                  "new_members_can_see_previous_messages_files": {
                    "description": "New members to the channel can see previous messages and files posted in the channel.",
                    "type": "boolean",
                    "example": ""
                  },
                  "posting_permissions": {
                    "description": "Permissions for members to post to the channel. The value can be one of the following:<br>\n`1`: Everyone. All members can post to the channel.<br>\n`2`: Admin only. Only the admin can post to the channel<br>\n`3`: Admin and specific members. Only the admin and specified members can post to the channel. <br>\n",
                    "enum": [
                      1,
                      2,
                      3
                    ],
                    "type": "integer",
                    "example": ""
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "The ID of the channel.",
                "type": "string",
                "example": ""
              },
              "jid": {
                "description": "The [Jabber Identity](https://en.wikipedia.org/wiki/JID_(Jabber)) used to access the account.",
                "type": "string",
                "example": ""
              },
              "name": {
                "description": "The channel name.",
                "type": "string",
                "example": ""
              },
              "type": {
                "description": "The channel's type:\n* `0` — An unknown channel type.\n* `1` — A private channel. Members must be invited to join this channel.\n* `2` — A private channel with members that belong to a Zoom account. All members of this channel are from the same organization and must be invited to join.\n* `3` — A public channel. Anyone can search for and join this channel.\n* `4` — An instant channel. This type of channel is created by adding members to a new chat.\n* `5` — A public channel. Anyone can join this channel and invite members from other Zoom accounts.",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5
                ],
                "type": "integer",
                "example": ""
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "CloudArchivedFiles": {
        "additionalProperties": false,
        "properties": {
          "account_name": {
            "description": "The user's account name.",
            "example": "account_01",
            "type": "string"
          },
          "archive_files": {
            "description": "Information about the archive files.",
            "items": {
              "anyOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "download_url": {
                      "description": "The URL at which to download the the archive file. \n\n **JWT apps** \n\n To access a private or password-protected archive file of a user in your account, use a [Zoom JWT app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL. \n\n `https://{{base-domain}}/recording/download/{{path-to-file-download}}?access_token={{JWT-token}}` \n\n **OAuth apps** \n\n If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://marketplace.zoom.us/docs/guides/auth/oauth) to download the file. For example: \n\n `https://{{base-domain}}/rec/archive/download/xxx?access_token={{OAuth-access-token}}` \n\n **Note:** This field does **not** return for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the `file_path` field.",
                      "example": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                      "type": "string"
                    },
                    "file_extension": {
                      "description": "The archived file's extension.",
                      "example": "M4A",
                      "type": "string"
                    },
                    "file_path": {
                      "description": "The file path to the On-Premise account archive file. \n\n **Note:** The API only returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the `download_url` field.",
                      "type": "string",
                      "example": "/9090876528/path01/demo.mp4"
                    },
                    "file_size": {
                      "description": "The archived file's size, in bytes.",
                      "example": 165743,
                      "type": "integer"
                    },
                    "file_type": {
                      "description": "The archive file's type: \n* `MP4` — Video file. \n* `M4A` — Audio-only file. \n* `TRANSCRIPT` — A transcription file, in VTT format. \n* `CHAT` — A TXT file containing in-meeting chat messages. \n* `CC` — A file containing the closed captions of the recording, in VTT file format. \n* `CSV` — A file containing polling data, in CSV format. \n* `CHAT_MESSAGE` — A JSON file containing chat messages. The file also includes message deletions, chat reactions, and emojis.",
                      "enum": [
                        "MP4",
                        "M4A",
                        "TRANSCRIPT",
                        "CHAT",
                        "CC",
                        "CSV",
                        "CHAT_MESSAGE"
                      ],
                      "example": "M4A",
                      "type": "string"
                    },
                    "id": {
                      "description": "The archive file's unique ID.",
                      "example": "55hfgsd-sd8e2bd7255",
                      "type": "string"
                    },
                    "individual": {
                      "description": "Whether the archive file is an individual recording file: \n* `true` — An individual recording file. \n * `false` — An entire meeting file.",
                      "example": true,
                      "type": "boolean"
                    },
                    "participant_email": {
                      "description": "The individual recording file's participant email address. This value is returned when the `individual` value is `true`. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.",
                      "example": "jchill@example.com",
                      "format": "email",
                      "type": "string"
                    },
                    "participant_join_time": {
                      "description": "The individual recording file's participant join time. This value is returned when the `individual` value is `true`.",
                      "example": "2021-03-12T02:07:27Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "participant_leave_time": {
                      "description": "The individual recording file's participant leave time. This value is returned when the `individual` value is `true`.",
                      "example": "2021-03-12T02:12:27Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "recording_type": {
                      "description": "The archive file's recording type: \n* `shared_screen_with_speaker_view(CC)` \n* `shared_screen_with_speaker_view` \n* `shared_screen_with_gallery_view` \n* `gallery_view` \n* `shared_screen` \n* `audio_only` \n* `audio_transcript` \n* `chat_file` \n* `active_speaker` \n* `host_video` \n* `audio_only_each_participant` \n* `cc_transcript` \n* `closed_caption` \n* `poll` \n* `timeline` \n* `thumbnail` \n* `chat_message` \n\n For more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation.",
                      "enum": [
                        "shared_screen_with_speaker_view(CC)",
                        "shared_screen_with_speaker_view",
                        "shared_screen_with_gallery_view",
                        "gallery_view",
                        "shared_screen",
                        "audio_only",
                        "audio_transcript",
                        "chat_file",
                        "active_speaker",
                        "host_video",
                        "audio_only_each_participant",
                        "cc_transcript",
                        "closed_caption",
                        "poll",
                        "timeline",
                        "thumbnail",
                        "chat_message"
                      ],
                      "example": "audio_only",
                      "type": "string"
                    },
                    "status": {
                      "description": "The archived file's processing status: \n* `completed` — The processing of the file is complete. \n* `processing` — The file is processing.",
                      "enum": [
                        "completed",
                        "processing"
                      ],
                      "example": "completed",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "file_type",
                    "file_extension",
                    "file_size",
                    "download_url",
                    "status",
                    "recording_type",
                    "individual",
                    "participant_join_time",
                    "participant_leave_time"
                  ],
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "complete_time": {
            "anyOf": [
              {
                "description": "The archive completion time.",
                "format": "date-time",
                "minLength": 1,
                "example": "2021-03-12T02:12:27Z"
              },
              {
                "description": "An empty string.",
                "enum": [
                  ""
                ]
              }
            ],
            "description": "The meeting or webinar's archive completion time.",
            "example": "2021-03-12T02:57:27Z",
            "format": "date-time",
            "type": "string"
          },
          "duration": {
            "description": "The meeting or webinar's scheduled duration.",
            "example": 1,
            "type": "integer"
          },
          "duration_in_second": {
            "description": "The meeting or webinar's duration, in seconds.",
            "example": 1800,
            "type": "integer"
          },
          "host_id": {
            "description": "The ID of the user set as the host of the archived meeting or webinar.",
            "example": "Dhjdfgdkg8w",
            "type": "string"
          },
          "id": {
            "description": "The ID of the meeting (`meetingId`) or the webinar (`webinarId`).",
            "example": 553068284,
            "format": "int64",
            "type": "integer"
          },
          "is_breakout_room": {
            "description": "Whether the room is a [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms).",
            "example": false,
            "type": "boolean"
          },
          "meeting_type": {
            "description": "Whether the meeting or webinar is internal or external: \n* `internal` — An internal meeting or webinar. \n* `external` — An external meeting or webinar. \n\n The `id`, `host_id`, and `topic` PII (Personal Identifiable Information) values in this response are removed when this value is `external`.",
            "enum": [
              "internal",
              "external"
            ],
            "example": "internal",
            "type": "string"
          },
          "parent_meeting_id": {
            "description": "The parent meeting's universally unique ID (UUID). Each meeting or webinar instance generates a UUID. If the `is_breakout_room` value is `true`, the API returns this value.",
            "type": "string",
            "example": "atsXxhSEQWit9t+U02HXNQ=="
          },
          "recording_count": {
            "description": "The number of archived files returned in the API call response.",
            "example": 2,
            "type": "integer"
          },
          "start_time": {
            "description": "The meeting or webinar's start time.",
            "example": "2021-04-26T05:23:18Z",
            "format": "date-time",
            "type": "string"
          },
          "timezone": {
            "description": "The meeting or webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones).",
            "example": "Asia/Shanghai",
            "type": "string"
          },
          "topic": {
            "description": "The meeting or webinar topic.",
            "example": "My Personal Meeting Room",
            "type": "string"
          },
          "total_size": {
            "description": "The total size of the archive file, in bytes.",
            "example": 364463,
            "type": "integer"
          },
          "type": {
            "description": "The type of archived meeting or webinar: \n\n If the recording is of a meeting: \n* `1` — Instant meeting. \n* `2` — Scheduled meeting. \n* `3` — A recurring meeting with no fixed time. \n* `4` — A meeting created via PMI (Personal Meeting ID). \n* `7` — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* `8` - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* `5` — A webinar. \n* `6` — A recurring webinar without a fixed time. \n* `9` — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* `99` — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal. \n* `100` — A [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms).",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              99,
              100
            ],
            "example": 1,
            "type": "integer"
          },
          "uuid": {
            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance. Each meeting or webinar instance generates a UUID.",
            "example": "yO3dfhh3t467UkQ==",
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "id",
          "host_id",
          "topic",
          "type",
          "start_time",
          "timezone",
          "duration",
          "total_size",
          "recording_count",
          "meeting_type",
          "account_name",
          "complete_time",
          "is_breakout_room",
          "archive_files"
        ],
        "type": "object"
      },
      "CreateWebinarSettings": {
        "description": "Create Webinar settings.",
        "properties": {
          "allow_multiple_devices": {
            "description": "Allow attendees to join from multiple devices.",
            "type": "boolean",
            "example": true
          },
          "alternative_hosts": {
            "description": "Alternative host emails or IDs. Multiple values separated by comma.",
            "type": "string",
            "example": "jchill@example.com;thill@example.com"
          },
          "alternative_host_update_polls": {
            "type": "boolean",
            "description": "Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher.",
            "example": true
          },
          "approval_type": {
            "default": 2,
            "description": "The default value is `2`. To enable registration required, set the approval type to `0` or `1`.  Values include:<br>\n\n`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Automatically Approve",
              "Manually Approve",
              "No Registration Required"
            ],
            "example": 0
          },
          "attendees_and_panelists_reminder_email_notification": {
            "description": "Send reminder email to attendees and panelists.",
            "properties": {
              "enable": {
                "description": "* `true`: Send reminder email to attendees and panelists.\n\n* `false`: Do not send reminder email to attendees and panelists.",
                "type": "boolean",
                "example": true
              },
              "type": {
                "description": "`0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7
                ],
                "type": "integer",
                "x-enum-descriptions": [
                  "Send 1 hour before webinar.",
                  "Send 1 day before webinar.",
                  "Send 1 hour and 1 day before webinar.",
                  "Send 1 week before webinar.",
                  "Send 1 hour and 1 week before webinar.",
                  "Send 1 day and 1 week before webinar.",
                  "Send 1 hour, 1 day and 1 week before webinar."
                ],
                "example": 0
              }
            },
            "type": "object"
          },
          "audio": {
            "default": "both",
            "description": "Determine how participants can join the audio portion of the meeting.",
            "enum": [
              "both",
              "telephony",
              "voip"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Both Telephony and VoIP",
              "Telephony only",
              "VoIP only"
            ],
            "example": "telephony"
          },
          "authentication_domains": {
            "description": "Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the Webinar. You can either provide multiple domains, using a comma in between and/or use a wildcard for listing domains.",
            "type": "string",
            "example": "example.com"
          },
          "authentication_option": {
            "description": "Specify the authentication type for users to join a Webinar with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API.",
            "type": "string",
            "example": "signIn_D8cJuqWVQ623CI4Q8yQK0Q"
          },
          "auto_recording": {
            "default": "none",
            "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
            "enum": [
              "local",
              "cloud",
              "none"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Record to local device",
              "Record to cloud",
              "No Recording"
            ],
            "example": "cloud"
          },
          "close_registration": {
            "description": "Close registration after event date.",
            "type": "boolean",
            "example": true
          },
          "contact_email": {
            "description": "Contact email for registration",
            "type": "string",
            "example": "jchill@example.com"
          },
          "contact_name": {
            "description": "Contact name for registration",
            "type": "string",
            "example": "Jill Chill"
          },
          "email_language": {
            "description": "Set the email language to one of the following:\n`en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.",
            "type": "string",
            "example": "en-US"
          },
          "enforce_login": {
            "deprecated": true,
            "description": "Only signed-in users can join this meeting. \n\n**This field is deprecated and will not be supported in future.** <br><br> Instead of this field, use the \"meeting_authentication\", \"authentication_option\" and/or \"authentication_domains\" fields to establish the authentication mechanism for this Webinar. ",
            "type": "boolean",
            "example": true
          },
          "enforce_login_domains": {
            "deprecated": true,
            "description": "Only signed-in users with specified domains can join meetings.\n\n**This field is deprecated and will not be supported in future.** <br><br> Instead of this field, use the \"authentication_domains\" field for this Webinar. ",
            "type": "string",
            "example": "example.com"
          },
          "follow_up_absentees_email_notification": {
            "description": "Send follow-up email to absentees.",
            "properties": {
              "enable": {
                "description": "* `true`: Send follow-up email to absentees.\n\n* `false`: Do not send follow-up email to absentees.",
                "type": "boolean",
                "example": true
              },
              "type": {
                "description": "`0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7
                ],
                "type": "integer",
                "x-enum-descriptions": [
                  "Send 1 days after the scheduled end date.",
                  "Send 2 days after the scheduled end date.",
                  "Send 3 days after the scheduled end date.",
                  "Send 4 days after the scheduled end date.",
                  "Send 5 days after the scheduled end date.",
                  "Send 6 days after the scheduled end date.",
                  "Send 7 days after the scheduled end date."
                ],
                "example": 0
              }
            },
            "type": "object"
          },
          "follow_up_attendees_email_notification": {
            "description": "Send follow-up email to attendees.",
            "properties": {
              "enable": {
                "description": "* `true`: Send follow-up email to attendees.\n\n* `false`: Do not send follow-up email to attendees.",
                "type": "boolean",
                "example": true
              },
              "type": {
                "description": "`0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7
                ],
                "type": "integer",
                "x-enum-descriptions": [
                  "Send 1 day after the scheduled end date.",
                  "Send 2 days after the scheduled end date.",
                  "Send 3 days after the scheduled end date.",
                  "Send 4 days after the scheduled end date.",
                  "Send 5 days after the scheduled end date.",
                  "Send 6 days after the scheduled end date.",
                  "Send 7 days after the scheduled end date."
                ],
                "example": 0
              }
            },
            "type": "object"
          },
          "global_dial_in_countries": {
            "description": "List of global dial-in countries",
            "items": {
              "type": "string",
              "example": "US"
            },
            "type": "array"
          },
          "hd_video": {
            "default": false,
            "description": "Default to HD video.",
            "type": "boolean",
            "example": false
          },
          "hd_video_for_attendees": {
            "default": false,
            "description": "Whether HD video for attendees is enabled. This value defaults to `false`.",
            "type": "boolean",
            "example": false
          },
          "host_video": {
            "description": "Start video when host joins webinar.",
            "type": "boolean",
            "example": true
          },
          "language_interpretation": {
            "description": "The webinar's [language interpretation settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars). \n\n**Note:** This feature is only available for certain Webinar add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the webinar.",
            "properties": {
              "enable": {
                "description": "Whether to enable [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars) for the webinar.",
                "type": "boolean",
                "example": true
              },
              "interpreters": {
                "description": "Information about the webinar's language interpreters.",
                "items": {
                  "properties": {
                    "email": {
                      "description": "The interpreter's email address.",
                      "format": "email",
                      "type": "string",
                      "example": "interpreter@example.com"
                    },
                    "languages": {
                      "description": "A comma-separated list of the interpreter's languages. The string must contain two [country IDs](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries). \n\nFor example, if the interpreter will translate from English to Chinese, then this value will be `US,CN`.",
                      "type": "string",
                      "example": "US,CN"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "meeting_authentication": {
            "description": "Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`.",
            "type": "boolean",
            "example": true
          },
          "on_demand": {
            "default": false,
            "description": "Make the webinar on-demand",
            "type": "boolean",
            "example": false
          },
          "panelists_invitation_email_notification": {
            "description": "* `true`: Send invitation email to panelists.\n\n* `false`: Do not send invitation email to panelists.",
            "type": "boolean",
            "example": true
          },
          "panelists_video": {
            "description": "Start video when panelists join webinar.",
            "type": "boolean",
            "example": true
          },
          "post_webinar_survey": {
            "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar",
            "type": "boolean",
            "example": true
          },
          "practice_session": {
            "default": false,
            "description": "Enable practice session.",
            "type": "boolean",
            "example": false
          },
          "question_and_answer": {
            "description": "[Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.",
            "properties": {
              "allow_anonymous_questions": {
                "description": "* `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..\n\n* `false`: Do not allow anonymous questions.",
                "type": "boolean",
                "example": true
              },
              "answer_questions": {
                "description": "Indicate whether you want attendees to be able to view answered questions only or view all questions.\n\n* `only`: Attendees are able to view answered questions only.\n\n*  `all`: Attendees are able to view all questions submitted in the Q&A.",
                "enum": [
                  "only",
                  "all"
                ],
                "type": "string",
                "example": "all"
              },
              "attendees_can_comment": {
                "description": "* `true`: Attendees can answer questions or leave a comment in the question thread.\n\n* `false`: Attendees can not answer questions or leave a comment in the question thread",
                "type": "boolean",
                "example": true
              },
              "attendees_can_upvote": {
                "description": "* `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.\n\n* `false`: Attendees can not click the thumbs up button on questions.",
                "type": "boolean",
                "example": true
              },
              "enable": {
                "description": "* `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.\n\n* `false`: Disable Q&A for webinar.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "registrants_email_notification": {
            "description": "Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.",
            "type": "boolean",
            "example": true
          },
          "registrants_restrict_number": {
            "default": 0,
            "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
            "maximum": 20000,
            "minimum": 0,
            "type": "integer",
            "example": 100
          },
          "registration_type": {
            "default": 1,
            "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Attendees register once and can attend any of the occurrences",
              "Attendees need to register for each occurrence to attend",
              "Attendees register once and can choose one or more occurrences to attend"
            ],
            "example": 1
          },
          "send_1080p_video_to_attendees": {
            "default": false,
            "description": "Whether to always send 1080p video to attendees. This value defaults to `false`.",
            "type": "boolean",
            "example": false
          },
          "show_share_button": {
            "description": "Show social share buttons on the registration page.",
            "type": "boolean",
            "example": true
          },
          "survey_url": {
            "description": "Survey url for post webinar survey",
            "type": "string",
            "example": "https://example.com"
          }
        },
        "type": "object"
      },
      "CustomQuestion": {
        "type": "object",
        "description": "Information about custom questions.",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the custom question.",
            "example": "What do you hope to learn from this?"
          },
          "value": {
            "type": "string",
            "maxLength": 128,
            "description": "The custom question's response value. This has a limit of 128 characters.",
            "example": "Look forward to learning how you come up with new recipes and what other services you offer."
          }
        }
      },
      "DateTime": {
        "description": "DateTime Object.",
        "properties": {
          "from": {
            "description": "Start Date.",
            "format": "date",
            "type": "string",
            "example": ""
          },
          "to": {
            "description": "End Date.",
            "format": "date",
            "type": "string",
            "example": ""
          }
        },
        "type": "object"
      },
      "Device": {
        "description": "The H.323/SIP device object.",
        "properties": {
          "encryption": {
            "description": "Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no.",
            "enum": [
              "auto",
              "yes",
              "no"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "auto",
              "yes",
              "no"
            ],
            "example": "auto"
          },
          "ip": {
            "description": "Device IP.",
            "type": "string",
            "example": "127.0.0.1"
          },
          "name": {
            "description": "Device name.",
            "maxLength": 64,
            "type": "string",
            "example": "api_test_20190508"
          },
          "protocol": {
            "description": "Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP.",
            "enum": [
              "H.323",
              "SIP"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "H.323",
              "SIP"
            ],
            "example": "H.323"
          }
        },
        "required": [
          "name",
          "protocol",
          "ip",
          "encryption"
        ],
        "title": "The H.323/SIP device object.",
        "type": "object"
      },
      "DeviceList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "devices": {
                "description": "List of H.323/SIP Device objects.",
                "items": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "Device ID.",
                          "type": "string",
                          "example": "abceHewahkrehwiK"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/Device"
                    }
                  ]
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "List of H.323/SIP Devices.",
        "title": "H.323/SIP Device List",
        "type": "object"
      },
      "DomainsList": {
        "description": "Information about the account's managed domains.",
        "properties": {
          "domains": {
            "description": "Information about the managed domains.",
            "items": {
              "allOf": [
                {
                  "properties": {
                    "domain": {
                      "description": "The domain's name.",
                      "type": "string",
                      "example": "example.com"
                    },
                    "status": {
                      "description": "The domain's status.",
                      "type": "string",
                      "example": "verified"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "object"
            },
            "type": "array"
          },
          "total_records": {
            "description": "The total number of records returned.",
            "type": "integer",
            "example": ""
          }
        },
        "type": "object"
      },
      "Group": {
        "description": "Group object.",
        "properties": {
          "name": {
            "description": "Group name.",
            "type": "string",
            "example": ""
          },
          "total_members": {
            "description": "Total number of members in this group.",
            "type": "integer",
            "example": ""
          }
        },
        "type": "object"
      },
      "GroupList": {
        "description": "List of Groups.",
        "properties": {
          "groups": {
            "description": "List of Group objects.",
            "items": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "description": "Group ID.",
                      "type": "string",
                      "example": "hFK_GtF_e_TaVA808"
                    }
                  },
                  "type": "object"
                },
                {
                  "$ref": "#/components/schemas/Group"
                }
              ]
            },
            "type": "array"
          },
          "total_records": {
            "description": "Total records.",
            "type": "integer",
            "example": ""
          }
        },
        "type": "object"
      },
      "GroupMember": {
        "description": "Group member object.",
        "properties": {
          "email": {
            "description": "User email.",
            "type": "string",
            "example": ""
          },
          "first_name": {
            "description": "User first name.",
            "type": "string",
            "example": ""
          },
          "id": {
            "description": "User ID.",
            "type": "string",
            "example": ""
          },
          "last_name": {
            "description": "User last name.",
            "type": "string",
            "example": ""
          },
          "type": {
            "description": "User type.<br>\n`1` - Basic<br> `2` - Licensed<br> \n`3` - On-prem",
            "type": "integer",
            "example": ""
          }
        },
        "type": "object"
      },
      "GroupMemberList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "members": {
                "description": "List of Group member objects.",
                "items": {
                  "$ref": "#/components/schemas/GroupMember"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "List of Group Members.",
        "title": "Group Member List",
        "type": "object"
      },
      "GroupSettingsAudioConference": {
        "description": "The group's audio conference settings.",
        "properties": {
          "toll_free_and_fee_based_toll_call": {
            "description": "The group's [**Toll-free and Fee-based Toll Call**](https://support.zoom.us/hc/en-us/articles/360060950711-Enabling-Toll-free-and-Fee-based-Toll-Call#h_01F51844DRCX3K7BRTMZ40381R) settings.",
            "properties": {
              "allow_webinar_attendees_dial": {
                "description": "Whether webinar attendees can dial in through the account's **Toll-free and Fee-based Toll Call** phone numbers. This feature is only available in version 5.2.2 and higher.",
                "type": "boolean",
                "example": true
              },
              "enable": {
                "description": "Whether the group has the [**Toll-free and Fee-based Toll Call**](https://support.zoom.us/hc/en-us/articles/360060950711-Enabling-Toll-free-and-Fee-based-Toll-Call#h_01F51844DRCX3K7BRTMZ40381R) setting enabled.",
                "type": "boolean",
                "example": true
              },
              "numbers": {
                "description": "The group's **Toll-free and Fee-based Toll Call** phone number information.",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The phone number's [E.164 country calling code](https://en.wikipedia.org/wiki/List_of_country_calling_codes).",
                      "type": "string",
                      "example": "86"
                    },
                    "country_code": {
                      "description": "The phone number's [country code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                      "type": "string",
                      "example": "CN"
                    },
                    "country_name": {
                      "description": "The country name.",
                      "type": "string",
                      "example": "China"
                    },
                    "display_number": {
                      "description": "The phone number's display number.",
                      "maxLength": 30,
                      "type": "string",
                      "example": "+86 7777 777"
                    },
                    "number": {
                      "description": "The phone number.",
                      "maxLength": 30,
                      "type": "string",
                      "example": "7777 777"
                    }
                  },
                  "type": "object"
                },
                "maxItems": 100,
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "GroupSettingsOtherOptions": {
        "properties": {
          "allow_users_contact_support_via_chat": {
            "description": "Whether to display the Zoom Help badge on the bottom-right of the page.",
            "type": "boolean",
            "example": true
          },
          "blur_snapshot": {
            "description": "Whether iOS blurs the screenshot in the task switcher when multiple apps are open. Android hides the screenshot in the system-level list of recent apps.",
            "type": "boolean",
            "example": true
          }
        },
        "type": "object"
      },
      "GroupUserSettingsAuthentication": {
        "oneOf": [
          {
            "properties": {
              "allow_authentication_exception": {
                "description": "Whether the [**Allow authentication exception**](https://support.zoom.us/hc/en-us/articles/360037117472#h_01F13A9N1FQFNVESC9C21NRHXY) setting is enabled. This lets hosts invite users who can bypass authentication.",
                "type": "boolean",
                "example": true
              },
              "authentication_options": {
                "description": "Meeting Authentication Options",
                "items": {
                  "properties": {
                    "default_option": {
                      "description": "Authentication default option",
                      "type": "boolean",
                      "example": true
                    },
                    "domains": {
                      "description": "Authentication domains",
                      "type": "string",
                      "example": "example.com"
                    },
                    "id": {
                      "description": "Authentication id",
                      "type": "string",
                      "example": "ewf22f42fewf4232fgg4343lki4"
                    },
                    "name": {
                      "description": "Authentication name",
                      "type": "string",
                      "example": "Authentication name"
                    },
                    "type": {
                      "description": " Authentication type. Specify one of the following authentication types for the authentication profile:<br>\n * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.\n * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>\n * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.",
                      "enum": [
                        "enforce_login",
                        "enforce_login_with_same_account",
                        "enforce_login_with_domains"
                      ],
                      "type": "string",
                      "example": "enforce_login_with_domains"
                    },
                    "visible": {
                      "description": "Authentication visible",
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "meeting_authentication": {
                "description": "Only authenticated users can join meetings",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "authentication_options": {
                "description": "Authentication Options",
                "items": {
                  "properties": {
                    "default_option": {
                      "description": "Authentication default option",
                      "type": "boolean",
                      "example": true
                    },
                    "domains": {
                      "description": "Authentication domains",
                      "type": "string",
                      "example": "example.com"
                    },
                    "id": {
                      "description": "Authentication id",
                      "type": "string",
                      "example": "ewf22f42fewf4232fgg4343lki4"
                    },
                    "name": {
                      "description": "Authentication name",
                      "type": "string",
                      "example": "Authentication name"
                    },
                    "type": {
                      "description": "Authentication type",
                      "enum": [
                        "internally",
                        "enforce_login",
                        "enforce_login_with_domains"
                      ],
                      "type": "string",
                      "example": "enforce_login_with_domains"
                    },
                    "visible": {
                      "description": "Authentication visible",
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "recording_authentication": {
                "description": "Only authenticated users can view cloud recordings",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "GroupUserSettingsAuthenticationUpdate": {
        "oneOf": [
          {
            "properties": {
              "authentication_option": {
                "description": "Meeting Authentication Options",
                "properties": {
                  "action": {
                    "description": "Authentication action",
                    "enum": [
                      "update",
                      "show",
                      "hide"
                    ],
                    "type": "string",
                    "example": "update"
                  },
                  "default_option": {
                    "description": "Authentication default option",
                    "type": "boolean",
                    "example": true
                  },
                  "domains": {
                    "description": "Authentication domains",
                    "type": "string",
                    "example": "example.com"
                  },
                  "id": {
                    "description": "Authentication id",
                    "type": "string",
                    "example": "ewf22f42fewf4232fgg4343lki4"
                  },
                  "name": {
                    "description": "Authentication name",
                    "type": "string",
                    "example": "Authentication name"
                  },
                  "type": {
                    "description": " Authentication type. Specify one of the following authentication types for the authentication profile:<br>\n * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.\n * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>\n * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.",
                    "enum": [
                      "enforce_login",
                      "enforce_login_with_same_account",
                      "enforce_login_with_domains"
                    ],
                    "type": "string",
                    "example": "enforce_login_with_domains"
                  }
                },
                "type": "object"
              },
              "meeting_authentication": {
                "description": "Only authenticated users can join meetings",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "authentication_option": {
                "description": "Authentication Options",
                "properties": {
                  "action": {
                    "description": "Authentication action",
                    "enum": [
                      "update",
                      "show",
                      "hide"
                    ],
                    "type": "string",
                    "example": "update"
                  },
                  "default_option": {
                    "description": "Authentication default option",
                    "type": "boolean",
                    "example": true
                  },
                  "domains": {
                    "description": "Authentication domains",
                    "type": "string",
                    "example": "example.com"
                  },
                  "id": {
                    "description": "Authentication id",
                    "type": "string",
                    "example": "ewf22f42fewf4232fgg4343lki4"
                  },
                  "name": {
                    "description": "Authentication name",
                    "type": "string",
                    "example": "Authentication name"
                  },
                  "type": {
                    "description": "Authentication type",
                    "enum": [
                      "internally",
                      "enforce_login",
                      "enforce_login_with_domains"
                    ],
                    "type": "string",
                    "example": "enforce_login_with_domains"
                  }
                },
                "type": "object"
              },
              "recording_authentication": {
                "description": "Only authenticated users can view cloud recordings",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          }
        ],
        "title": "GroupSettingsAuthenticationUpdate",
        "type": "object"
      },
      "IMGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Group"
          },
          {
            "properties": {
              "search_by_account": {
                "description": "Members can search for others under same account.",
                "type": "boolean",
                "example": ""
              },
              "search_by_domain": {
                "description": "Members can search for others in the same email domain.",
                "type": "boolean",
                "example": ""
              },
              "search_by_ma_account": {
                "description": "Members can search for others under same master account - including all sub accounts.",
                "type": "boolean",
                "example": ""
              },
              "type": {
                "default": "normal",
                "description": "IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members. ",
                "enum": [
                  "normal",
                  "shared",
                  "restricted"
                ],
                "type": "string",
                "x-enum-descriptions": [
                  "Only members can see the group automatically. Other people can search members in the group.",
                  "All people in the account can see the group and members automatically",
                  "Nobody can see the group or search members except the members in the group"
                ],
                "example": ""
              }
            },
            "type": "object"
          }
        ],
        "description": "IM group object.",
        "type": "object"
      },
      "IMGroupList": {
        "allOf": [
          {
            "properties": {
              "total_records": {
                "description": "Total number of records returned.",
                "type": "integer",
                "example": ""
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "groups": {
                "description": "List of group objects.",
                "items": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "IM group ID.",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/IMGroup"
                    }
                  ]
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "List of IM Groups.",
        "title": "IM Group List",
        "type": "object"
      },
      "InviteLink": {
        "description": "Invite Links",
        "properties": {
          "attendees": {
            "description": "The attendees list.",
            "items": {
              "properties": {
                "name": {
                  "description": "User display name.",
                  "maxLength": 64,
                  "type": "string",
                  "example": "Jill Chill"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "ttl": {
            "default": 7200,
            "description": "The invite link's expiration time, in seconds. \n\nThis value defaults to `7200`.",
            "format": "int64",
            "maximum": 7776000,
            "minimum": 0,
            "type": "integer",
            "example": 1000
          }
        },
        "title": "Invite Links",
        "type": "object"
      },
      "InviteLinkResponse": {
        "description": "Invite links response.",
        "properties": {
          "attendees": {
            "description": "The attendee list.",
            "items": {
              "properties": {
                "join_url": {
                  "description": "The URL to join the meeting.",
                  "type": "string",
                  "example": "https://example.com/j/11111"
                },
                "name": {
                  "description": "The user's display name.",
                  "type": "string",
                  "example": "Jill Chill"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "Invite Links",
        "type": "object"
      },
      "MeetingCreate": {
        "description": "The base meeting object.",
        "properties": {
          "agenda": {
            "description": "The meeting's agenda. This value has a maximum length of 2,000 characters.",
            "maxLength": 2000,
            "type": "string",
            "example": "My Meeting"
          },
          "default_password": {
            "default": false,
            "description": "Whether to generate a default password using the user's settings. This value defaults to `false`. \n\nIf this value is `true` and the user has the PMI setting enabled with a password, then the user's meetings will use the PMI password. It will **not** use a default password.",
            "type": "boolean",
            "example": false
          },
          "duration": {
            "description": "The meeting's scheduled duration, in minutes. This field is only used for scheduled meetings (`2`).",
            "type": "integer",
            "example": 60
          },
          "password": {
            "description": "The password required to join the meeting. By default, a password can **only** have a maximum length of 10 characters and only contain alphanumeric characters and the `@`, `-`, `_`, and `*` characters. \n* If the account owner or administrator has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the password **must** meet those requirements. \n* If password requirements are enabled, use the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API to get the requirements.",
            "maxLength": 10,
            "type": "string",
            "example": "123456"
          },
          "pre_schedule": {
            "default": false,
            "description": "Whether to create a prescheduled meeting via the [GSuite app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on). This **only** supports the meeting `type` value of `2` (scheduled meetings) and `3` (recurring meetings with no fixed time): \n* `true` — Create a prescheduled meeting. \n* `false` — Create a regular meeting.",
            "type": "boolean",
            "example": false
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "schedule_for": {
            "description": "The email address or user ID of the user to schedule a meeting for.",
            "type": "string",
            "example": "jchill@example.com"
          },
          "settings": {
            "description": "Information about the meeting's settings.",
            "properties": {
              "additional_data_center_regions": {
                "description": "Add additional meeting [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars). Provide this value as an array of [country codes](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for the countries available as data center regions in the [**Account Profile**](https://zoom.us/account/setting) interface but have been opted out of in the [user settings](https://zoom.us/profile).\n\nFor example, the data center regions selected in your [**Account Profile**](https://zoom.us/account) are \"Europe\", \"Hong Kong SAR\", \"Australia\", \"India\", \"Japan\", \"China\", \"United States\", and \"Canada\". However, in the [**My Profile**](https://zoom.us/profile) settings, you did **not** select \"India\" and \"Japan\" for meeting and webinar traffic routing.\n\nTo include \"India\" and \"Japan\" as additional data centers, use the `[\"IN\", \"TY\"]` value for this field.",
                "items": {
                  "type": "string",
                  "example": "TY"
                },
                "type": "array"
              },
              "allow_multiple_devices": {
                "description": "Whether to allow attendees to join a meeting from multiple devices. This setting is only applied to meetings with registration enabled.",
                "type": "boolean",
                "example": true
              },
              "alternative_hosts": {
                "description": "A semicolon-separated list of the meeting's alternative hosts' email addresses or IDs.",
                "type": "string",
                "example": "jchill@example.com;thill@example.com"
              },
              "alternative_hosts_email_notification": {
                "default": true,
                "description": "Whether to send email notifications to alternative hosts. This value defaults to `true`.",
                "type": "boolean",
                "example": true
              },
              "approval_type": {
                "default": 2,
                "description": "Enable meeting registration approval: \n* `0` — Automatically approve registration.\n* `1` — Manually approve registration.\n* `2` — No registration required.\n\nThis value defaults to `2`.",
                "enum": [
                  0,
                  1,
                  2
                ],
                "type": "integer",
                "x-enum-descriptions": [
                  "Automatically approve registration.",
                  "Manually approve registration.",
                  "No registration required."
                ],
                "example": 2
              },
              "approved_or_denied_countries_or_regions": {
                "description": "The list of approved or blocked users from specific countries or regions who can join the meeting.",
                "properties": {
                  "approved_list": {
                    "description": "The list of approved countries or regions.",
                    "items": {
                      "type": "string",
                      "example": "CX"
                    },
                    "type": "array"
                  },
                  "denied_list": {
                    "description": "The list of blocked countries or regions.",
                    "items": {
                      "type": "string",
                      "example": "CA"
                    },
                    "type": "array"
                  },
                  "enable": {
                    "description": "Whether to enable the [**Approve or block entry for users from specific countries/regions**](https://support.zoom.us/hc/en-us/articles/360060086231-Approve-or-block-entry-for-users-from-specific-countries-regions) setting.",
                    "type": "boolean",
                    "example": true
                  },
                  "method": {
                    "description": "Whether to allow or block users from specific countries or regions: \n* `approve` — Allow users from specific countries or regions to join the meeting. If you select this setting, you must include the approved countries or regions in the `approved_list` field. \n* `deny` — Block users from specific countries or regions from joining the meeting. If you select this setting, you must include the blocked countries or regions in the `denied_list` field.",
                    "enum": [
                      "approve",
                      "deny"
                    ],
                    "type": "string",
                    "example": "approve"
                  }
                },
                "type": "object"
              },
              "audio": {
                "default": "both",
                "description": "How participants join the audio portion of the meeting: \n* `both` — Both telephony and VoIP. \n* `telephony` — Telephony only. \n* `voip` — VoIP only.\n\nThis value defaults to `both`.",
                "enum": [
                  "both",
                  "telephony",
                  "voip"
                ],
                "type": "string",
                "x-enum-descriptions": [
                  "Telephony and VoIP.",
                  "Telephony only.",
                  "VoIP only."
                ],
                "example": "telephony"
              },
              "authentication_domains": {
                "description": "The meeting's authenticated domains. Only Zoom users whose email address contains an authenticated domain can join the meeting. Comma-separate multiple domains or use a wildcard for listing domains.",
                "type": "string",
                "example": "example.com"
              },
              "authentication_exception": {
                "description": "A list of participants that can bypass meeting authentication. These participants will receive a unique meeting invite.",
                "items": {
                  "properties": {
                    "email": {
                      "description": "The participant's email address.",
                      "format": "email",
                      "type": "string",
                      "example": "jchill@example.com"
                    },
                    "name": {
                      "description": "The participant's name.",
                      "type": "string",
                      "example": "Jill Chill"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "authentication_option": {
                "description": "If the `meeting_authentication` value is `true`, the type of authentication required for users to join a meeting.\n\nTo get this value, use the `authentication_options` array's `id` value in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response.",
                "type": "string",
                "example": "signIn_D8cJuqWVQ623CI4Q8yQK0Q"
              },
              "auto_recording": {
                "default": "none",
                "description": "The automatic recording settings: \n* `local` — Record the meeting locally. \n* `cloud` — Record the meeting to the cloud. \n* `none` — Auto-recording disabled.\n\nThis value defaults to `none`.",
                "enum": [
                  "local",
                  "cloud",
                  "none"
                ],
                "type": "string",
                "x-enum-descriptions": [
                  "Record the meeting locally.",
                  "Record the meeting to the cloud.",
                  "Auto-recording disabled."
                ],
                "example": "cloud"
              },
              "breakout_room": {
                "description": "The [pre-assigned breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms) settings.",
                "properties": {
                  "enable": {
                    "description": "Whether to enable the [**Breakout Room pre-assign**](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms) option.",
                    "type": "boolean",
                    "example": true
                  },
                  "rooms": {
                    "description": "Information about the breakout rooms.",
                    "items": {
                      "properties": {
                        "name": {
                          "description": "The breakout room's name.",
                          "type": "string",
                          "example": "room1"
                        },
                        "participants": {
                          "description": "The email addresses of the participants to assign to the breakout room.",
                          "items": {
                            "type": "string",
                            "example": "jchill@example.com"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "calendar_type": {
                "description": "The calendar type: \n* `1` — Outlook calendar. \n* `2` — Google Calendar.",
                "enum": [
                  1,
                  2
                ],
                "type": "integer",
                "x-enum-descriptions": [
                  "Outlook",
                  "Google Calendar"
                ],
                "example": 1
              },
              "close_registration": {
                "default": false,
                "description": "Whether to close registration after the event date. This value defaults to `false`.",
                "type": "boolean",
                "example": false
              },
              "cn_meeting": {
                "type": "boolean",
                "default": false,
                "deprecated": true,
                "description": "Whether to host the meeting in China (CN). This value defaults to `false`.",
                "example": false
              },
              "contact_email": {
                "description": "The contact email address for meeting registration.",
                "type": "string",
                "example": "jchill@example.com"
              },
              "contact_name": {
                "description": "The contact name for meeting registration.",
                "type": "string",
                "example": "Jill Chill"
              },
              "email_notification": {
                "default": true,
                "description": "Whether to send email notifications to [alternative hosts](https://support.zoom.us/hc/en-us/articles/208220166) and [users with scheduling privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege). This value defaults to `true`.",
                "type": "boolean",
                "example": true
              },
              "encryption_type": {
                "description": "The type of [end-to-end (E2EE) encryption](https://support.zoom.us/hc/en-us/articles/360048660871) to use for the meeting: \n* `enhanced_encryption` — Enhanced encryption. Encryption is stored in the cloud when you enable this option. \n* `e2ee` — End-to-end encryption. The encryption key is stored on your local device and **cannot** be obtained by anyone else. When you use E2EE encryption, [certain features](https://support.zoom.us/hc/en-us/articles/360048660871), such as cloud recording or phone and SIP/H.323 dial-in, are **disabled**.",
                "enum": [
                  "enhanced_encryption",
                  "e2ee"
                ],
                "type": "string",
                "example": "enhanced_encryption"
              },
              "focus_mode": {
                "description": "Whether to enable the [**Focus Mode** feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) when the meeting starts.",
                "type": "boolean",
                "example": true
              },
              "global_dial_in_countries": {
                "description": "A list of available global dial-in countries.",
                "items": {
                  "type": "string",
                  "example": "US"
                },
                "type": "array"
              },
              "host_video": {
                "description": "Whether to start meetings with the host video on.",
                "type": "boolean",
                "example": true
              },
              "in_meeting": {
                "type": "boolean",
                "default": false,
                "deprecated": true,
                "description": "Whether to host the meeting in India (IN). This value defaults to `false`.",
                "example": false
              },
              "jbh_time": {
                "description": "If the value of the `join_before_host` field is `true`, this field indicates the time limits within which a participant can join a meeting before the meeting's host:\n\n* `0` — Allow the participant to join the meeting at anytime.\n* `5` — Allow the participant to join 5 minutes before the meeting's start time.\n* `10` — Allow the participant to join 10 minutes before the meeting's start time.",
                "enum": [
                  0,
                  5,
                  10
                ],
                "type": "integer",
                "example": 0
              },
              "join_before_host": {
                "default": false,
                "description": "Whether participants can join the meeting before its host. This field is only used for scheduled meetings (`2`) or recurring meetings (`3` and `8`). This value defaults to `false`.\n\nIf the [**Waiting Room** feature](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) is enabled, this setting is **disabled**.",
                "type": "boolean",
                "example": false
              },
              "language_interpretation": {
                "description": "The meeting's [language interpretation settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars). \n\n**Note:** This feature is only available for certain Meeting add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting.",
                "properties": {
                  "enable": {
                    "description": "Whether to enable [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars) for the meeting.",
                    "type": "boolean",
                    "example": true
                  },
                  "interpreters": {
                    "description": "Information about the meeting's language interpreters.",
                    "items": {
                      "properties": {
                        "email": {
                          "description": "The interpreter's email address.",
                          "format": "email",
                          "type": "string",
                          "example": "interpreter@example.com"
                        },
                        "languages": {
                          "description": "A comma-separated list of the interpreter's languages. The string must contain two [country IDs](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries). \n\nFor example, if the interpreter will translate from English to Chinese, then this value will be `US,CN`.",
                          "type": "string",
                          "example": "US,FR"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "meeting_authentication": {
                "description": "If true, only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join the meeting.",
                "type": "boolean",
                "example": true
              },
              "meeting_invitees": {
                "description": "A list of the meeting's invitees.",
                "items": {
                  "properties": {
                    "email": {
                      "description": "The invitee's email address.",
                      "format": "email",
                      "type": "string",
                      "example": "jchill@example.com"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "mute_upon_entry": {
                "default": false,
                "description": "Whether to mute participants upon entry.",
                "type": "boolean",
                "example": false
              },
              "participant_video": {
                "description": "Whether to start meetings with the participant video on.",
                "type": "boolean",
                "example": false
              },
              "private_meeting": {
                "description": "Whether to set the meeting as private.",
                "type": "boolean",
                "example": false
              },
              "registrants_confirmation_email": {
                "description": "Whether to send registrants an email confirmation: \n* `true` — Send a confirmation email. \n* `false` — Do not send a confirmation email.",
                "type": "boolean",
                "example": true
              },
              "registrants_email_notification": {
                "description": "Whether to send registrants email notifications about their registration approval, cancellation, or rejection:\n\n* `true` — Send an email notification.\n* `false` — Do not send an email notification.\n\n Set this value to `true` to also use the `registrants_confirmation_email` parameter.",
                "type": "boolean",
                "example": true
              },
              "registration_type": {
                "default": 1,
                "description": "The meeting's registration type: \n* `1` — Attendees register once and can attend any meeting occurrence. \n* `2` — Attendees must register for each meeting occurrence. \n* `3` — Attendees register once and can select one or more meeting occurrences to attend.\n\nThis field is only for recurring meetings with fixed times (`8`). This value defaults to `1`.",
                "enum": [
                  1,
                  2,
                  3
                ],
                "type": "integer",
                "x-enum-descriptions": [
                  "Attendees register once and can attend any meeting occurrence.",
                  "Attendees must register for each meeting occurrence.",
                  "Attendees register once and can select one or more meeting occurrences to attend."
                ],
                "example": 1
              },
              "show_share_button": {
                "description": "Whether to include social media sharing buttons on the meeting's registration page. This setting is only applied to meetings with registration enabled.",
                "type": "boolean",
                "example": true
              },
              "use_pmi": {
                "default": false,
                "description": "Whether to use a [PMI (Personal Meeting ID)](https://support.zoom.us/hc/en-us/articles/203276937-Using-Personal-Meeting-ID-PMI-) instead of a generated meeting ID. This field is only used for scheduled meetings (`2`), instant meetings (`1`), or recurring meetings with no fixed time (`3`). This value defaults to `false`.",
                "type": "boolean",
                "example": false
              },
              "waiting_room": {
                "description": "Whether to enable the [**Waiting Room** feature](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room). If this value is `true`, this **disables** the `join_before_host` setting.",
                "type": "boolean",
                "example": false
              },
              "watermark": {
                "default": false,
                "description": "Whether to add a watermark when viewing a shared screen.",
                "type": "boolean",
                "example": false
              }
            },
            "type": "object"
          },
          "start_time": {
            "description": "The meeting's start time. This field is only used for scheduled and/or recurring meetings with a fixed time. This supports local time and GMT formats. \n* To set a meeting's start time in GMT, use the `yyyy-MM-ddTHH:mm:ssZ` date-time format. For example, `2020-03-31T12:02:00Z`. \n* To set a meeting's start time using a specific timezone, use the `yyyy-MM-ddTHH:mm:ss` date-time format and specify the [timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field. If you do not specify a timezone, the `timezone` value defaults to your Zoom account's timezone. You can also use `UTC` for the `timezone` value.",
            "format": "date-time",
            "type": "string",
            "example": "2022-03-25T07:32:55Z"
          },
          "template_id": {
            "description": "The **account admin meeting template** ID with which to schedule a meeting using a [meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates). For a list of account admin-provided meeting templates, use the [**List meeting templates**](/api-reference/zoom-api/methods#operation/listMeetingTemplates) API. \n* At this time, this field **only** accepts account admin meeting template IDs. \n* To enable the account admin meeting templates feature, [contact Zoom support](https://support.zoom.us/hc/en-us).",
            "type": "string",
            "example": "Dv4YdINdTk+Z5RToadh5ug=="
          },
          "timezone": {
            "description": "The timezone to assign to the `start_time` value. This field is only used for scheduled meetings (`2`).\n\nFor a list of supported timezones and their format, refer to our [timezone list documentation](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones).",
            "type": "string",
            "example": "America/Los_Angeles"
          },
          "topic": {
            "description": "The meeting's topic.",
            "type": "string",
            "example": "My Meeting"
          },
          "tracking_fields": {
            "description": "Information about the meeting's tracking fields.",
            "items": {
              "properties": {
                "field": {
                  "description": "The tracking field's label.",
                  "type": "string",
                  "example": "field1"
                },
                "value": {
                  "description": "The tracking field's value.",
                  "type": "string",
                  "example": "value1"
                }
              },
              "required": [
                "field"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "type": {
            "default": 2,
            "description": "The type of meeting:\n* `1` — An instant meeting. \n* `2` — A scheduled meeting. \n* `3` — A recurring meeting with no fixed time. \n* `8` — A recurring meeting with fixed time.",
            "enum": [
              1,
              2,
              3,
              8
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Instant meeting.",
              "Scheduled meeting.",
              "Recurring meeting with no fixed time.",
              "Recurring meeting with fixed time."
            ],
            "example": 2
          }
        },
        "type": "object"
      },
      "MeetingInfo": {
        "description": "Meeting object",
        "properties": {
          "agenda": {
            "description": "Agenda",
            "type": "string",
            "example": "My Meeting"
          },
          "created_at": {
            "description": "The date and time at which this meeting was created.",
            "format": "date-time",
            "type": "string",
            "example": "2022-03-25T07:29:29Z"
          },
          "duration": {
            "description": "Meeting duration.",
            "type": "integer",
            "example": 60
          },
          "h323_password": {
            "description": "H.323/SIP room system password",
            "type": "string",
            "example": "123456"
          },
          "join_url": {
            "description": "URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting.",
            "type": "string",
            "example": "https://example.com/j/11111"
          },
          "occurrences": {
            "$ref": "#/components/schemas/Occurrences"
          },
          "password": {
            "description": "Meeting password. Password may only contain the following characters: `[a-z A-Z 0-9 @ - _ * !]`\n\nIf \"Require a password when scheduling new meetings\" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the password field will be autogenerated in the response even if it is not provided in the API request. \n\n\n",
            "type": "string",
            "example": "123456"
          },
          "pmi": {
            "description": "Personal Meeting Id. Only used for scheduled meetings and recurring meetings with no fixed time.",
            "format": "int64",
            "type": "integer",
            "example": 97891943927
          },
          "pre_schedule": {
            "default": false,
            "description": "Whether the prescheduled meeting was created via the [GSuite app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on). This **only** supports the meeting `type` value of `2` (scheduled meetings) and `3` (recurring meetings with no fixed time): \n* `true` — A GSuite prescheduled meeting. \n* `false` — A regular meeting.",
            "type": "boolean",
            "example": false
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "settings": {
            "$ref": "#/components/schemas/MeetingSettings"
          },
          "start_time": {
            "description": "Meeting start date-time in UTC/GMT. Example: \"2020-03-31T12:02:00Z\"",
            "format": "date-time",
            "type": "string",
            "example": "2022-03-25T07:29:29Z"
          },
          "start_url": {
            "description": "URL to start the meeting. This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting.",
            "type": "string",
            "example": "https://example.com/s/11111"
          },
          "timezone": {
            "description": "Timezone to format start_time",
            "type": "string",
            "example": "America/Los_Angeles"
          },
          "topic": {
            "description": "Meeting topic",
            "maxLength": 200,
            "type": "string",
            "example": "My Meeting"
          },
          "tracking_fields": {
            "description": "Tracking fields",
            "items": {
              "properties": {
                "field": {
                  "description": "Label of the tracking field.",
                  "type": "string",
                  "example": "field1"
                },
                "value": {
                  "description": "Value for the field.",
                  "type": "string",
                  "example": "value1"
                },
                "visible": {
                  "description": "Indicates whether the [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) is visible in the meeting scheduling options in the Zoom Web Portal or not.\n\n`true`: Tracking field is visible. <br>\n\n`false`: Tracking field is not visible to the users in the meeting options in the Zoom Web Portal but the field was used while scheduling this meeting via API. An invisible tracking field can be used by users while scheduling meetings via API only. ",
                  "type": "boolean",
                  "example": true
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "type": {
            "default": 2,
            "description": "Meeting Type",
            "enum": [
              1,
              2,
              3,
              8
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Instant Meeting",
              "Scheduled Meeting",
              "Recurring Meeting with no fixed time",
              "Recurring Meeting with fixed time"
            ],
            "example": 2
          }
        },
        "type": "object"
      },
      "MeetingInfoGet": {
        "description": "Meeting object.",
        "properties": {
          "agenda": {
            "description": "Meeting description",
            "maxLength": 2000,
            "type": "string",
            "example": "My Meeting"
          },
          "created_at": {
            "description": "Time of creation. ",
            "format": "date-time",
            "type": "string",
            "example": "2022-03-25T07:29:29Z"
          },
          "duration": {
            "description": "Meeting duration.",
            "type": "integer",
            "example": 60
          },
          "encrypted_password": {
            "description": "Encrypted passcode for third party endpoints (H323/SIP).",
            "type": "string",
            "example": "8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1"
          },
          "h323_password": {
            "description": "H.323/SIP room system passcode.",
            "type": "string",
            "example": "123456"
          },
          "join_url": {
            "description": "URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting.",
            "type": "string",
            "example": "https://example.com/j/11111"
          },
          "occurrences": {
            "$ref": "#/components/schemas/Occurrences"
          },
          "password": {
            "description": "Meeting passcode.",
            "minimum": 8,
            "type": "string",
            "example": "123456"
          },
          "pmi": {
            "description": "Personal Meeting Id. Only used for scheduled meetings and recurring meetings with no fixed time.",
            "format": "int64",
            "type": "integer",
            "example": "97891943927"
          },
          "pre_schedule": {
            "default": false,
            "description": "Whether the prescheduled meeting was created via the [GSuite app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on). This **only** supports the meeting `type` value of `2` (scheduled meetings) and `3` (recurring meetings with no fixed time): \n* `true` — A GSuite prescheduled meeting. \n* `false` — A regular meeting.",
            "type": "boolean",
            "example": false
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "settings": {
            "$ref": "#/components/schemas/MeetingSettings"
          },
          "start_time": {
            "description": "Meeting start time in GMT/UTC. Start time will not be returned if the meeting is an **instant** meeting. \n",
            "format": "date-time",
            "type": "string",
            "example": "2022-03-25T07:29:29Z"
          },
          "start_url": {
            "description": "<br><aside>The <code>start_url</code> of a Meeting is a URL using which a host or an alternative host can start the Meeting. \n\nThe expiration time for the <code>start_url</code> field listed in the response of the [**Create a meeting**](/api-reference/zoom-api/methods#operation/meetingCreate) API is two hours for all regular users. \n\t\nFor users created using the <code>custCreate</code> option via the [**Create users**](/api-reference/zoom-api/methods#operation/userCreate) API, the expiration time of the <code>start_url</code> field is 90 days.\n\t\nFor security reasons, to retrieve the updated value for the <code>start_url</code> field programmatically (after the expiry time), you must call the [**Get a meeting](/api-reference/zoom-api/methods#operation/meeting) API and refer to the value of the <code>start_url</code> field in the response.</aside><br>This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting.",
            "type": "string",
            "example": "https://example.com/s/11111"
          },
          "status": {
            "description": "Meeting status",
            "enum": [
              "waiting",
              "started"
            ],
            "type": "string",
            "example": "waiting"
          },
          "timezone": {
            "description": "Timezone to format the meeting start time on the .",
            "type": "string",
            "example": "America/Los_Angeles"
          },
          "topic": {
            "description": "Meeting topic.",
            "type": "string",
            "example": "My Meeting"
          },
          "tracking_fields": {
            "description": "Tracking fields",
            "items": {
              "properties": {
                "field": {
                  "description": "Label of the tracking field.",
                  "type": "string",
                  "example": "field1"
                },
                "value": {
                  "description": "Value for the field.",
                  "type": "string",
                  "example": "value1"
                },
                "visible": {
                  "description": "Indicates whether the [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) is visible in the meeting scheduling options in the Zoom Web Portal or not.\n\n`true`: Tracking field is visible. <br>\n\n`false`: Tracking field is not visible to the users when they look at the meeting details in the Zoom Web Portal but the field was used while scheduling this meeting via API. An invisible tracking field can be used by users while scheduling meetings via API only. ",
                  "type": "boolean",
                  "example": true
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "type": {
            "default": 2,
            "description": "Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`4` - PMI Meeting<br>\n`8` - Recurring meeting with a fixed time.",
            "enum": [
              1,
              2,
              3,
              8
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Instant Meeting",
              "Scheduled Meeting",
              "Recurring Meeting with no fixed time",
              "Recurring Meeting with fixed time"
            ],
            "example": 2
          }
        },
        "type": "object"
      },
      "MeetingInstances": {
        "allOf": [
          {
            "properties": {
              "meetings": {
                "description": "List of ended meeting instances.",
                "items": {
                  "allOf": [
                    {
                      "properties": {
                        "start_time": {
                          "description": "Start time",
                          "format": "date-time",
                          "type": "string",
                          "example": "2022-03-26T05:37:59Z"
                        },
                        "uuid": {
                          "description": "Meeting UUID. Unique meeting ID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.\n\n",
                          "type": "string",
                          "example": "Vg8IdgluR5WDeWIkpJlElQ=="
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "List of Meetings",
        "title": "Meeting instances",
        "type": "object"
      },
      "MeetingInvitation": {
        "description": "Meeting invitation details.",
        "properties": {
          "invitation": {
            "description": "Meeting invitation.",
            "type": "string",
            "example": "Jill Chill is inviting you to a scheduled Zoom meeting.\r\n\r\nTopic: My Meeting\r\nTime: Mar 25, 2022 03:32 PM America, Los_Angeles\r\n\r\nJoin Zoom Meeting\r\nhttps://zoom.us/j/55544443210?pwd=8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1\r\n\r\nMeeting ID: 555 4444 3210\r\nPasscode: 123456\r\nOne tap mobile\r\n+5678901234,,55544443210#,,,,*123456# US (gg)\r\n\r\nDial by your location\r\n+1 15550100 US (gg)\r\nMeeting ID: 555 4444 3210\r\nPasscode: 123456\r\nFind your local number: https://zoom.us/u/ab12cdef34jh\r\n\r\nJoin by SIP\r\n5550100@zoomcrc.com\r\n\r\nJoin by H.323\r\n192.0.2.1 (US West)\r\nMeeting ID: 555 4444 3210\r\nPasscode: 123456\r\n\r\n"
          },
          "sip_links": {
            "type": "array",
            "description": "A list of SIP phone addresses.",
            "items": {
              "type": "string",
              "example": "5550100@zoomcrc.com"
            }
          }
        },
        "title": "Meeting Invitation",
        "type": "object"
      },
      "MeetingLiveStream": {
        "description": "Meeting live stream.",
        "properties": {
          "page_url": {
            "description": "The live stream page URL.",
            "format": "uri",
            "maxLength": 1024,
            "type": "string",
            "example": "https://example.com/livestream/123"
          },
          "stream_key": {
            "description": "Stream name and key.",
            "maxLength": 512,
            "type": "string",
            "example": "contact-it@example.com"
          },
          "stream_url": {
            "description": "Streaming URL.",
            "maxLength": 1024,
            "type": "string",
            "example": "https://example.com/livestream"
          }
        },
        "required": [
          "stream_url",
          "stream_key",
          "page_url"
        ],
        "type": "object"
      },
      "MeetingLiveStreamStatus": {
        "description": "Meeting live stream status.",
        "properties": {
          "action": {
            "description": "Update the status of a live stream.\n\nThe value can be one of the following:<br>\n`start`: Start a live stream. <br>\n`stop`: Stop an ongoing live stream.",
            "enum": [
              "start",
              "stop"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Start a meeting live stream.",
              "Stop a meeting live stream."
            ],
            "example": "start"
          },
          "settings": {
            "description": "Update the settings of a live streaming session. The settings can only be updated for a live stream that has been stopped. You can not update the settings of an ongoing live stream.",
            "properties": {
              "active_speaker_name": {
                "description": "Display the name of the active speaker during a live stream.",
                "type": "boolean",
                "example": true
              },
              "display_name": {
                "description": "Display name of the live stream.",
                "maxLength": 50,
                "minLength": 1,
                "type": "string",
                "example": "Jill Chill"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "MeetingMetric": {
        "description": "Meeting metric details.",
        "properties": {
          "host": {
            "description": "Host display name.",
            "type": "string",
            "example": ""
          },
          "custom_keys": {
            "description": "Custom keys and values assigned to the meeting.",
            "items": {
              "properties": {
                "key": {
                  "description": "Custom key associated with the meeting.",
                  "maxLength": 64,
                  "type": "string",
                  "example": ""
                },
                "value": {
                  "description": "Value of the custom key associated with the meeting.",
                  "maxLength": 256,
                  "type": "string",
                  "example": ""
                }
              },
              "type": "object"
            },
            "maxItems": 10,
            "type": "array"
          },
          "dept": {
            "description": "Department of the host.",
            "type": "string",
            "example": ""
          },
          "duration": {
            "description": "Meeting duration.",
            "type": "string",
            "example": ""
          },
          "email": {
            "description": "Email address of the host.",
            "type": "string",
            "example": ""
          },
          "end_time": {
            "description": "Meeting end time.",
            "format": "date-time",
            "type": "string",
            "example": ""
          },
          "has_3rd_party_audio": {
            "description": "Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting.",
            "type": "boolean",
            "example": ""
          },
          "has_archiving": {
            "description": "Whether the archiving feature was used in the meeting.",
            "type": "boolean",
            "example": ""
          },
          "has_pstn": {
            "description": "Indicates whether or not the PSTN was used in the meeting.",
            "type": "boolean",
            "example": ""
          },
          "has_recording": {
            "description": "Indicates whether or not the recording feature was used in the meeting. ",
            "type": "boolean",
            "example": ""
          },
          "has_screen_share": {
            "description": "Indicates whether or not screenshare feature was used in the meeting.",
            "type": "boolean",
            "example": ""
          },
          "has_sip": {
            "description": "Indicates whether or not someone joined the meeting using SIP.",
            "type": "boolean",
            "example": ""
          },
          "has_video": {
            "description": "Indicates whether or not video was used in the meeting.",
            "type": "boolean",
            "example": ""
          },
          "has_voip": {
            "description": "Indicates whether or not VoIP was used in the meeting.",
            "type": "boolean",
            "example": ""
          },
          "id": {
            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in \"**long**\" format(represented as int64 data type in JSON), also known as the meeting number.",
            "format": "int64",
            "type": "integer",
            "example": ""
          },
          "in_room_participants": {
            "description": "The number of Zoom Room participants in the meeting.",
            "type": "integer",
            "example": ""
          },
          "participants": {
            "description": "Meeting participant count.",
            "type": "integer",
            "example": ""
          },
          "start_time": {
            "description": "Meeting start time.",
            "format": "date-time",
            "type": "string",
            "example": ""
          },
          "topic": {
            "description": "Meeting topic.",
            "type": "string",
            "example": ""
          },
          "user_type": {
            "description": "License type of the user.",
            "type": "string",
            "example": ""
          },
          "uuid": {
            "description": "Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.",
            "type": "string",
            "example": ""
          }
        },
        "title": "Meeting Metrics",
        "type": "object"
      },
      "MeetingQuality": {
        "properties": {
          "bad": {
            "description": "The total number of \"Bad\" quality scores.",
            "type": "integer",
            "example": ""
          },
          "fair": {
            "description": "The total number of \"Fair\" quality scores.",
            "type": "integer",
            "example": ""
          },
          "good": {
            "description": "The total number of \"Good\" quality scores.",
            "type": "integer",
            "example": ""
          },
          "poor": {
            "description": "The total number of \"Poor\" quality scores.",
            "type": "integer",
            "example": ""
          }
        },
        "title": "Meeting Quality Object",
        "type": "object"
      },
      "MeetingRecordingRegistrantList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecordingRegistrantList"
          }
        ],
        "description": "Information about the meeting cloud recording registrant.",
        "title": "Meeting Cloud Recording Registration",
        "type": "object"
      },
      "MeetingRegistrant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Registrant"
          }
        ],
        "description": " Registrant.",
        "type": "object"
      },
      "MeetingRegistrantList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RegistrantList"
          }
        ],
        "description": "List of users.",
        "title": "Registration List",
        "type": "object"
      },
      "MeetingRegistrantQuestions": {
        "description": "Meeting Registrant Questions",
        "properties": {
          "custom_questions": {
            "description": "Array of Registrant Custom Questions",
            "items": {
              "properties": {
                "answers": {
                  "description": "Answer choices for the question. Can not be used for `short` question type as this type of question requires registrants to type out the answer.",
                  "items": {
                    "type": "string",
                    "example": "Good"
                  },
                  "type": "array"
                },
                "required": {
                  "description": "Indicates whether or not the custom question is required to be answered by participants or not.",
                  "type": "boolean",
                  "example": true
                },
                "title": {
                  "description": "Title of the custom question.",
                  "type": "string",
                  "example": "How are you?"
                },
                "type": {
                  "description": "Type of the question being asked.",
                  "enum": [
                    "short",
                    "single"
                  ],
                  "type": "string",
                  "x-enum-descriptions": [
                    "Short Answer",
                    "Single Answer"
                  ],
                  "example": "short"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "questions": {
            "description": "Array of Registrant Questions",
            "items": {
              "properties": {
                "field_name": {
                  "type": "string",
                  "description": "Field name of the question.",
                  "enum": [
                    "last_name",
                    "address",
                    "city",
                    "country",
                    "zip",
                    "state",
                    "phone",
                    "industry",
                    "org",
                    "job_title",
                    "purchasing_time_frame",
                    "role_in_purchase_process",
                    "no_of_employees",
                    "comments"
                  ],
                  "example": "last_name"
                },
                "required": {
                  "description": "Indicates whether or not the displayed fields are required to be filled out by registrants.",
                  "type": "boolean",
                  "example": true
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "Meeting Registrant Questions",
        "type": "object"
      },
      "MeetingSecuritySettings": {
        "properties": {
          "meeting_security": {
            "properties": {
              "auto_security": {
                "description": "`true`: Require that all meetings are secured with at least one security option.\n\nThis setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts. [Learn more](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#meeting-security).",
                "type": "boolean",
                "example": true
              },
              "block_user_domain": {
                "description": "If set to `true`, Block users in specific domains from joining meetings and webinars.",
                "type": "boolean",
                "example": true
              },
              "block_user_domain_list": {
                "description": "Specific domain, for Example: `*.example.com`.",
                "items": {
                  "maxLength": 30,
                  "minLength": 5,
                  "type": "string",
                  "example": "*.example.com"
                },
                "maxItems": 20,
                "type": "array"
              },
              "embed_password_in_join_link": {
                "description": "If set to `true`, meeting passcode will be encrypted and included in the invite link to allow participants to join with just one click without having to enter the passcode.\n",
                "type": "boolean",
                "example": true
              },
              "encryption_type": {
                "description": "Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>\n`enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>\n\n`e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.",
                "enum": [
                  "enhanced_encryption",
                  "e2ee"
                ],
                "type": "string",
                "example": "enhanced_encryption"
              },
              "end_to_end_encrypted_meetings": {
                "description": "Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.",
                "type": "boolean",
                "example": true
              },
              "meeting_password": {
                "description": "If set to `true`, all instant, and scheduled meetings that users can join via client, or room systems will be passcode-protected. The Personal Meeting ID (PMI) meetings are not included in this setting.",
                "type": "boolean",
                "example": true
              },
              "meeting_password_requirement": {
                "description": "Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).",
                "properties": {
                  "consecutive_characters_length": {
                    "enum": [
                      0,
                      4,
                      5,
                      6,
                      7,
                      8
                    ],
                    "type": "integer",
                    "example": 8
                  },
                  "have_letter": {
                    "description": "If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).\n",
                    "type": "boolean",
                    "example": true
                  },
                  "have_number": {
                    "description": "If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).",
                    "type": "boolean",
                    "example": true
                  },
                  "have_special_character": {
                    "description": "If set to `true`, the passcode must have at least 1 special character (!,@,#...).",
                    "type": "boolean",
                    "example": true
                  },
                  "have_upper_and_lower_characters": {
                    "description": "If set to `true`, the passcode must include both uppercase and lowercase characters.",
                    "type": "boolean",
                    "example": true
                  },
                  "length": {
                    "description": "The minimum length that the meeting/webinar passcode needs to have.",
                    "type": "integer",
                    "example": 10
                  },
                  "only_allow_numeric": {
                    "description": "If set to `true`, the passcode must only contain numbers and no other characters.",
                    "type": "boolean",
                    "example": true
                  },
                  "weak_enhance_detection": {
                    "description": "If set to `true`, users will be informed if the provided passcode is weak.",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              },
              "phone_password": {
                "description": "Require passcode for participants joining by phone. If set to `true`, a numeric passcode will be required for participants joining by phone if your meeting has a passcode. For meeting with an alphanumeric passcode, a numeric version will be generated.",
                "type": "boolean",
                "example": true
              },
              "pmi_password": {
                "description": "If set to `true`, all Personal Meeting ID (PMI) meetings that users can join via client, or room systems will be passcode-protected.\n",
                "type": "boolean",
                "example": true
              },
              "require_password_for_scheduled_meeting": {
                "description": "Require a passcode for meetings which have already been scheduled.\n",
                "type": "boolean",
                "example": true
              },
              "require_password_for_scheduled_webinar": {
                "description": "Require a passcode for webinars which have already been scheduled.\n",
                "type": "boolean",
                "example": true
              },
              "waiting_room": {
                "description": "When participants join a meeting, place them in a waiting room and require the host to admit them individually. Enabling the waiting room automatically disables the setting for allowing participants to join before host.\n",
                "type": "boolean",
                "example": true
              },
              "waiting_room_settings": {
                "description": "Specify the settings to be applied if waiting room is enabled.",
                "properties": {
                  "participants_to_place_in_waiting_room": {
                    "description": "\n\nSpecify who should be admitted to the waiting room. The value of this field can be one of the following:<br>\n`0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in ",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "type": "integer",
                    "example": 0
                  },
                  "users_who_can_admit_participants_from_waiting_room": {
                    "description": "Specify who can admit participants from the waiting room. The value of this field can be one of the following:<br>\n`0`: Host and co-hosts only<br> `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).\n\n\n",
                    "type": "integer",
                    "example": 0
                  },
                  "whitelisted_domains_for_waiting_room": {
                    "description": "If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: \"aaa.com,bbb.com\").",
                    "type": "string",
                    "example": "aaa.com"
                  }
                },
                "type": "object"
              },
              "webinar_password": {
                "description": "If set to `true`, a passcode will be generated when scheduling a Webinar and participants require the passcode to join the Webinar.\n",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          }
        },
        "title": "Meeting/Webinar Security Settings",
        "type": "object"
      },
      "MeetingSettings": {
        "description": "Meeting settings.",
        "properties": {
          "allow_multiple_devices": {
            "description": "Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).",
            "type": "boolean",
            "example": true
          },
          "alternative_hosts": {
            "description": "A semicolon-separated list of the meeting's alternative hosts' email addresses or IDs.",
            "type": "string",
            "example": "jchill@example.com;thill@example.com"
          },
          "alternative_hosts_email_notification": {
            "default": true,
            "description": "Flag to determine whether to send email notifications to alternative hosts, default value is true.",
            "type": "boolean",
            "example": true
          },
          "alternative_host_update_polls": {
            "type": "boolean",
            "description": "Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher.",
            "example": true
          },
          "approval_type": {
            "default": 2,
            "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>\n\n`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Automatically Approve",
              "Manually Approve",
              "No Registration Required"
            ],
            "example": 0
          },
          "approved_or_denied_countries_or_regions": {
            "description": "Approve or block users from specific regions/countries from joining this meeting. \n",
            "properties": {
              "approved_list": {
                "description": "List of countries/regions from where participants can join this meeting. ",
                "items": {
                  "type": "string",
                  "example": "CX"
                },
                "type": "array"
              },
              "denied_list": {
                "description": "List of countries/regions from where participants can not join this meeting. ",
                "items": {
                  "type": "string",
                  "example": "CA"
                },
                "type": "array"
              },
              "enable": {
                "description": "`true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>\n\n`false`: Setting disabled.",
                "type": "boolean",
                "example": true
              },
              "method": {
                "description": "Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>\n`approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>\n`deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`",
                "enum": [
                  "approve",
                  "deny"
                ],
                "type": "string",
                "example": "approve"
              }
            },
            "type": "object"
          },
          "audio": {
            "default": "both",
            "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.",
            "enum": [
              "both",
              "telephony",
              "voip"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Both Telephony and VoIP",
              "Telephony only",
              "VoIP only"
            ],
            "example": "telephony"
          },
          "authentication_domains": {
            "description": "If user has configured [\"Sign Into Zoom with Specified Domains\"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.",
            "type": "string",
            "example": "example.com"
          },
          "authentication_exception": {
            "description": "The participants added here will receive unique meeting invite links and bypass authentication.",
            "items": {
              "properties": {
                "email": {
                  "description": "Email address of the participant.",
                  "format": "email",
                  "type": "string",
                  "example": "jchill@example.com"
                },
                "name": {
                  "description": "Name of the participant.",
                  "type": "string",
                  "example": "Jill Chill"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "authentication_name": {
            "description": "Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).",
            "type": "string",
            "example": "Sign in to Zoom"
          },
          "authentication_option": {
            "description": "Meeting authentication option id.",
            "type": "string",
            "example": "signIn_D8cJuqWVQ623CI4Q8yQK0Q"
          },
          "auto_recording": {
            "default": "none",
            "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
            "enum": [
              "local",
              "cloud",
              "none"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Record to local device",
              "Record to cloud",
              "No Recording"
            ],
            "example": "cloud"
          },
          "breakout_room": {
            "description": "Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).",
            "properties": {
              "enable": {
                "description": "Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.",
                "type": "boolean",
                "example": true
              },
              "rooms": {
                "description": "Create room(s).",
                "items": {
                  "properties": {
                    "name": {
                      "description": "Name of the breakout room.",
                      "type": "string",
                      "example": "room1"
                    },
                    "participants": {
                      "description": "Email addresses of the participants who are to be assigned to the breakout room.",
                      "items": {
                        "type": "string",
                        "example": "jchill@example.com"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "calendar_type": {
            "description": "The calendar type: \n* `1` — Outlook calendar. \n* `2` — Google Calendar.",
            "enum": [
              1,
              2
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Outlook",
              "Google Calendar"
            ],
            "example": 1
          },
          "close_registration": {
            "default": false,
            "description": "Close registration after event date",
            "type": "boolean",
            "example": false
          },
          "cn_meeting": {
            "type": "boolean",
            "default": false,
            "deprecated": true,
            "description": "Host meeting in China.",
            "example": false
          },
          "contact_email": {
            "description": "Contact email for registration",
            "type": "string",
            "example": "jchill@example.com"
          },
          "contact_name": {
            "description": "Contact name for registration",
            "type": "string",
            "example": "Jill Chill"
          },
          "custom_keys": {
            "description": "Custom keys and values assigned to the meeting.",
            "items": {
              "properties": {
                "key": {
                  "description": "Custom key associated with the user.",
                  "maxLength": 64,
                  "type": "string",
                  "example": "key1"
                },
                "value": {
                  "description": "Value of the custom key associated with the user.",
                  "maxLength": 256,
                  "type": "string",
                  "example": "value1"
                }
              },
              "type": "object"
            },
            "maxItems": 10,
            "type": "array"
          },
          "email_notification": {
            "default": true,
            "description": "Whether to send email notifications to [alternative hosts](https://support.zoom.us/hc/en-us/articles/208220166) and [users with scheduling privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege). This value defaults to `true`.",
            "type": "boolean",
            "example": true
          },
          "encryption_type": {
            "description": "Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>\n`enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>\n\n`e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.",
            "enum": [
              "enhanced_encryption",
              "e2ee"
            ],
            "type": "string",
            "example": "enhanced_encryption"
          },
          "enforce_login": {
            "deprecated": true,
            "description": "Only signed in users can join this meeting.\n\n**This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the \"meeting_authentication\", \"authentication_option\" and \"authentication_domains\" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.",
            "type": "boolean",
            "example": true
          },
          "enforce_login_domains": {
            "deprecated": true,
            "description": "Only signed in users with specified domains can join meetings.\n\n**This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the \"meeting_authentication\", \"authentication_option\" and \"authentication_domains\" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.",
            "type": "string",
            "example": "example.com"
          },
          "focus_mode": {
            "description": "Whether the [**Focus Mode** feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) is enabled when the meeting starts.",
            "type": "boolean",
            "example": true
          },
          "global_dial_in_countries": {
            "description": "List of global dial-in countries",
            "items": {
              "type": "string",
              "example": "US"
            },
            "type": "array"
          },
          "global_dial_in_numbers": {
            "description": "Global Dial-in Countries/Regions",
            "items": {
              "properties": {
                "city": {
                  "description": "City of the number, if any. For example, Chicago.",
                  "type": "string",
                  "example": "New York"
                },
                "country": {
                  "description": "Country code. For example, BR.",
                  "type": "string",
                  "example": "US"
                },
                "country_name": {
                  "description": "Full name of country. For example, Brazil.",
                  "type": "string",
                  "example": "US"
                },
                "number": {
                  "description": "Phone number. For example, +1 2332357613.",
                  "type": "string",
                  "example": "+1 1000200200"
                },
                "type": {
                  "description": "Type of number. ",
                  "enum": [
                    "toll",
                    "tollfree"
                  ],
                  "type": "string",
                  "example": "toll"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "host_video": {
            "description": "Start video when the host joins the meeting.",
            "type": "boolean",
            "example": true
          },
          "in_meeting": {
            "type": "boolean",
            "default": false,
            "deprecated": true,
            "description": "Host meeting in India.",
            "example": false
          },
          "jbh_time": {
            "description": "If the value of \"join_before_host\" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:\n\n*  `0`: Allow participant to join anytime.\n*  `5`: Allow participant to join 5 minutes before meeting start time.\n * `10`: Allow participant to join 10 minutes before meeting start time.",
            "enum": [
              0,
              5,
              10
            ],
            "type": "integer",
            "example": 0
          },
          "join_before_host": {
            "default": false,
            "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
            "type": "boolean",
            "example": true
          },
          "language_interpretation": {
            "description": "The meeting's [language interpretation settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars). \n\n**Note:** This feature is only available for certain Meeting add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting.",
            "properties": {
              "enable": {
                "description": "Whether to enable [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars) for the meeting.",
                "type": "boolean",
                "example": true
              },
              "interpreters": {
                "description": "Information about the meeting's language interpreters.",
                "items": {
                  "properties": {
                    "email": {
                      "description": "The interpreter's email address.",
                      "format": "email",
                      "type": "string",
                      "example": "interpreter@example.com"
                    },
                    "languages": {
                      "description": "A comma-separated list of the interpreter's languages. The string must contain two [country IDs](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries). \n\nFor example, if the interpreter will translate from English to Chinese, then this value will be `US,CN`.",
                      "type": "string",
                      "example": "US,FR"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "meeting_authentication": {
            "description": "`true`- Only authenticated users can join meetings.",
            "type": "boolean",
            "example": true
          },
          "mute_upon_entry": {
            "default": false,
            "description": "Mute participants upon entry.",
            "type": "boolean",
            "example": false
          },
          "participant_video": {
            "description": "Start video when participants join the meeting.",
            "type": "boolean",
            "example": false
          },
          "private_meeting": {
            "description": "Whether the meeting is set as private.",
            "type": "boolean",
            "example": false
          },
          "registrants_confirmation_email": {
            "description": "Whether to send registrants an email confirmation:\n* `true` — Send a confirmation email.\n* `false` — Do not send a confirmation email.",
            "type": "boolean",
            "example": true
          },
          "registrants_email_notification": {
            "description": "Whether to send registrants email notifications about their registration approval, cancellation, or rejection:\n\n* `true` — Send an email notification.\n* `false` — Do not send an email notification.\n\n Set this value to `true` to also use the `registrants_confirmation_email` parameter.",
            "type": "boolean",
            "example": true
          },
          "registration_type": {
            "default": 1,
            "description": "Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.",
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Attendees register once and can attend any of the occurrences",
              "Attendees need to register for each occurrence to attend",
              "Attendees register once and can choose one or more occurrences to attend"
            ],
            "example": 1
          },
          "show_share_button": {
            "description": "Show social share buttons on the meeting registration page.\nThis setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).",
            "type": "boolean",
            "example": true
          },
          "use_pmi": {
            "default": false,
            "description": "Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
            "type": "boolean",
            "example": false
          },
          "waiting_room": {
            "default": false,
            "description": "Enable waiting room",
            "type": "boolean",
            "example": false
          },
          "watermark": {
            "default": false,
            "description": "Add watermark when viewing a shared screen.",
            "type": "boolean",
            "example": false
          }
        },
        "type": "object"
      },
      "MeetingSurvey": {
        "description": "Information about the meeting survey.",
        "properties": {
          "custom_survey": {
            "description": "Information about the customized meeting survey.",
            "properties": {
              "anonymous": {
                "default": false,
                "description": "Whether to allow participants to anonymously answer survey questions: \n* `true` — Anonymous survey enabled. \n* `false` — Participants cannot answer survey questions anonymously. \n\n This value defaults to `true`.",
                "type": "boolean",
                "example": false
              },
              "questions": {
                "description": "Information about the meeting survey's questions.",
                "items": {
                  "properties": {
                    "answer_max_character": {
                      "description": "The allowed maximum number of characters. This field only applies to `long_answer` survey, a maximum of 2,000 characters.",
                      "type": "integer",
                      "example": 200
                    },
                    "answer_min_character": {
                      "description": "The allowed minimum number of characters. This field only applies to `long_answer` survey. You must provide at least a **one** character minimum value.",
                      "minimum": 1,
                      "type": "integer",
                      "example": 1
                    },
                    "answer_required": {
                      "default": false,
                      "description": "Whether participants must answer the question: \n* `true` — The participant must answer the question. \n* `false` — The participant does not need to answer the question. \n\n This value defaults to `false`.",
                      "type": "boolean",
                      "example": false
                    },
                    "answers": {
                      "description": "The survey question's available answers. This field requires a **minimum** of two answers. \n\n* For `single` and `multiple` polls, you can only provide a maximum of 10 answers. \n* For `matching` polls, you can only provide a maximum of 16 answers. \n* For `rank_order` polls, you can only provide a maximum of seven answers.",
                      "items": {
                        "type": "string",
                        "example": "Extremely useful"
                      },
                      "minItems": 2,
                      "type": "array"
                    },
                    "name": {
                      "description": "The survey question, up to 255 characters.",
                      "maxLength": 255,
                      "type": "string",
                      "example": "How useful was this meeting?"
                    },
                    "rating_max_label": {
                      "description": "The high score label used for the `rating_max_value` field. \n\n This field only applies to the `rating_scale` survey.",
                      "type": "string",
                      "example": "Extremely Likely"
                    },
                    "rating_max_value": {
                      "description": "The rating scale's maximum value, up to a maximum value of 10. \n\n This field only applies to the `rating_scale` survey.",
                      "maximum": 10,
                      "type": "integer",
                      "example": 4
                    },
                    "rating_min_label": {
                      "description": "The low score label used for the `rating_min_value` field. \n\nT his field only applies to the `rating_scale` survey.",
                      "type": "string",
                      "example": "Not likely"
                    },
                    "rating_min_value": {
                      "description": "The rating scale's minimum value. This value cannot be less than zero. \n\n This field only applies to the `rating_scale` survey.",
                      "minimum": 0,
                      "type": "integer",
                      "example": 1
                    },
                    "show_as_dropdown": {
                      "default": false,
                      "description": "Whether to display the radio selection as a drop-down box: \n* `true` — Show as a drop-down box. \n* `false` — Do not show as a drop-down box. \n\n This value defaults to `false`.",
                      "type": "boolean",
                      "example": false
                    },
                    "type": {
                      "description": "The survey's question and answer type: \n* `single` — Single choice. \n* `multiple` — Multiple choice. \n* `rating_scale` — Rating scale. \n* `long_answer` — Long answer.",
                      "enum": [
                        "single",
                        "multiple",
                        "rating_scale",
                        "long_answer"
                      ],
                      "type": "string",
                      "x-enum-descriptions": [
                        "Single choice",
                        "Multiple choice",
                        "Rating scale",
                        "Long answer"
                      ],
                      "example": "single"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "show_in_the_browser": {
            "default": true,
            "description": "Whether the **Show in the browser when the meeting ends** option is enabled: \n* `true` — Enabled. \n* `false` — Disabled. \n\n This value defaults to `true`.",
            "type": "boolean",
            "example": true
          },
          "third_party_survey": {
            "description": "The link to the third party meeting survey.",
            "maxLength": 64,
            "type": "string",
            "example": "https://example.com"
          }
        },
        "title": "Meeting Survey Object",
        "type": "object"
      },
      "MeetingUpdate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SessionUpdate"
          }
        ],
        "description": "Meeting object",
        "type": "object"
      },
      "Occurrence": {
        "description": "Occurrence object. This object is only returned for Recurring Webinars.",
        "properties": {
          "duration": {
            "description": "Duration.",
            "type": "integer",
            "example": 60
          },
          "occurrence_id": {
            "description": "Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences.",
            "type": "string",
            "example": "1648194360000"
          },
          "start_time": {
            "description": "Start time.",
            "format": "date-time",
            "type": "string",
            "example": "2022-03-25T07:46:00Z"
          },
          "status": {
            "description": "Occurrence status.",
            "type": "string",
            "example": "available"
          }
        },
        "type": "object"
      },
      "Occurrences": {
        "description": "Array of occurrence objects.",
        "items": {
          "$ref": "#/components/schemas/Occurrence"
        },
        "type": "array"
      },
      "Pagination": {
        "description": "Pagination Object.",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "example": "w7587w4eiyfsudgf"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made.",
            "example": 1
          },
          "page_number": {
            "deprecated": true,
            "type": "integer",
            "default": 1,
            "description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination.",
            "example": 1
          },
          "page_size": {
            "type": "integer",
            "maximum": 300,
            "default": 30,
            "description": "The number of records returned with a single API call.",
            "example": 30
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of all the records available across pages.",
            "example": 20
          }
        },
        "type": "object"
      },
      "PaginationToken": {
        "description": "Pagination object.",
        "properties": {
          "next_page_token": {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string",
            "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3"
          },
          "page_count": {
            "description": "The number of pages returned for the request made.",
            "type": "integer",
            "example": 1
          },
          "page_size": {
            "default": 30,
            "description": "The number of records returned within a single API call.",
            "maximum": 300,
            "type": "integer",
            "example": 30
          },
          "total_records": {
            "description": "The number of all records available across pages.",
            "type": "integer",
            "example": 1
          }
        },
        "type": "object"
      },
      "PaginationToken4IMChat": {
        "description": "Pagination object.",
        "properties": {
          "next_page_token": {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.",
            "type": "string",
            "example": ""
          },
          "page_size": {
            "default": 30,
            "description": "The amount of records returns within a single API call. ",
            "maximum": 300,
            "type": "integer",
            "example": ""
          }
        },
        "type": "object"
      },
      "PaginationToken4Qos": {
        "description": "Pagination object.",
        "properties": {
          "next_page_token": {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
            "type": "string",
            "example": ""
          },
          "page_count": {
            "description": "The number of pages returned for the request made.",
            "format": "int64",
            "type": "integer",
            "example": ""
          },
          "page_size": {
            "default": 1,
            "description": "The number of items per page.",
            "maximum": 10,
            "type": "integer",
            "example": ""
          },
          "total_records": {
            "description": "The number of all records available across pages.",
            "format": "int64",
            "type": "integer",
            "example": ""
          }
        },
        "type": "object"
      },
      "Panelist": {
        "description": "Panelist base object.",
        "properties": {
          "email": {
            "description": "Panelist's email. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for return value details.",
            "format": "email",
            "type": "string",
            "example": "jchill@example.com"
          },
          "name": {
            "description": "The panelist's full name.\n\n**Note:** This value cannot exceed more than 12 Chinese characters.",
            "type": "string",
            "example": "Jill Chill"
          }
        },
        "type": "object"
      },
      "PanelistList": {
        "description": "List of panelists.",
        "properties": {
          "panelists": {
            "description": "List of panelist objects.",
            "items": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "description": "Panelist's ID.",
                      "type": "string",
                      "example": "Tg2b6GhcQKKbV7nSCbDKug"
                    }
                  },
                  "type": "object"
                },
                {
                  "$ref": "#/components/schemas/Panelist"
                },
                {
                  "properties": {
                    "join_url": {
                      "description": "Join URL.",
                      "type": "string",
                      "example": "https://example.com/j/11111"
                    }
                  },
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "total_records": {
            "description": "Total records.",
            "type": "integer",
            "example": 1
          }
        },
        "title": "Panelist List",
        "type": "object"
      },
      "PhonePlan": {
        "description": "Information about the account's Zoom Phone plan.",
        "properties": {
          "plan_base": {
            "description": "Information about the account's Zoom Phone Base plan.",
            "properties": {
              "callout_countries": {
                "description": "A comma-separated list of the account's call-out countries. \n\n For a list of values, refer to the `ID` field in the [TSP callout countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-countries) table.",
                "type": "string",
                "example": ""
              },
              "type": {
                "description": "The [Zoom Phone Base plan type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans).",
                "type": "string",
                "example": ""
              }
            },
            "type": "object"
          },
          "plan_calling": {
            "description": "Information about the account's additional Zoom Phone calling plans.",
            "items": {
              "properties": {
                "hosts": {
                  "description": "The account plan's number of hosts.",
                  "type": "integer",
                  "example": ""
                },
                "type": {
                  "description": "The additional [Zoom Phone calling plan type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans).",
                  "type": "string",
                  "example": ""
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "plan_calling_addons": {
            "description": "Information about the account's additional Zoom Phone add-on calling plan. A calling plan is required when adding an add-on calling plan.",
            "items": {
              "properties": {
                "hosts": {
                  "type": "integer",
                  "description": "The account plan's number of hosts.",
                  "example": 2
                },
                "type": {
                  "type": "string",
                  "description": "The type of [Zoom Phone add-on calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans/#zoom-phone-add-on-calling-plans).",
                  "example": "zp_power_pack_monthly"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "plan_number": {
            "description": "Information about the account's additional Zoom Phone number plans.",
            "items": {
              "properties": {
                "hosts": {
                  "description": "The account plan's number of hosts.",
                  "type": "integer",
                  "example": ""
                },
                "type": {
                  "description": "The additional [Zoom Phone number plan type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans).",
                  "type": "string",
                  "example": ""
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Poll": {
        "description": "Information about meeting and webinar polling.",
        "properties": {
          "anonymous": {
            "default": false,
            "description": "Whether to allow meeting participants to answer poll questions anonymously: \n* `true` — Anonymous polls enabled. \n* `false` — Participants cannot answer poll questions anonymously. \n\nThis value defaults to `false`.",
            "type": "boolean",
            "example": true
          },
          "poll_type": {
            "description": "The type of poll: \n* `1` — Poll. \n* `2` — Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` — Quiz. This feature must be enabled in your Zoom account. \n\n This value defaults to `1`.",
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "example": 2
          },
          "questions": {
            "description": "Information about the poll's questions.",
            "items": {
              "properties": {
                "answer_max_character": {
                  "description": "The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls: \n* For `short_answer` polls, a maximum of 500 characters. \n* For `long_answer` polls, a maximum of 2,000 characters.",
                  "type": "integer",
                  "example": 200
                },
                "answer_min_character": {
                  "description": "The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a **one** character minimum value.",
                  "minimum": 1,
                  "type": "integer",
                  "example": 1
                },
                "answer_required": {
                  "default": false,
                  "description": "Whether participants must answer the question: \n* `true` — The participant must answer the question. \n* `false` — The participant does not need to answer the question. \n\n**Note:** \n* When the poll's `type` value is `1` (Poll), this value defaults to `true`. \n* When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`.",
                  "type": "boolean",
                  "example": false
                },
                "answers": {
                  "description": "The poll question's available answers. This field requires a **minimum** of two answers. \n\n* For `single` and `multiple` polls, you can only provide a maximum of 10 answers. \n* For `matching` polls, you can only provide a maximum of 16 answers. \n* For `rank_order` polls, you can only provide a maximum of seven answers.",
                  "items": {
                    "type": "string",
                    "example": "Extremely useful"
                  },
                  "minItems": 2,
                  "type": "array"
                },
                "case_sensitive": {
                  "default": false,
                  "description": "Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls: \n* `true` — The answer is case-sensitive. \n* `false` — The answer is not case-sensitive. \n\nThis value defaults to `false`.",
                  "type": "boolean",
                  "example": false
                },
                "name": {
                  "description": "The poll question, up to 255 characters. \n\nFor `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values.",
                  "maxLength": 255,
                  "type": "string",
                  "example": "How useful was this meeting?"
                },
                "prompts": {
                  "description": "Information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts.",
                  "items": {
                    "properties": {
                      "prompt_question": {
                        "description": "The question prompt's title.",
                        "type": "string",
                        "example": "How are you?"
                      },
                      "prompt_right_answers": {
                        "description": "The question prompt's correct answers: \n* For `matching` polls, you must provide a minimum of two correct answers, up to a maximum of 10 correct answers. \n* For `rank_order` polls, you can only provide one correct answer.",
                        "items": {
                          "type": "string",
                          "example": "Good"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "rating_max_label": {
                  "description": "The high score label used for the `rating_max_value` field. \n\nThis field only applies to the `rating_scale` poll.",
                  "type": "string",
                  "example": "Extremely Likely"
                },
                "rating_max_value": {
                  "description": "The rating scale's maximum value, up to a maximum value of 10. \n\nThis field only applies to the `rating_scale` poll.",
                  "maximum": 10,
                  "type": "integer",
                  "example": 4
                },
                "rating_min_label": {
                  "description": "The low score label used for the `rating_min_value` field. \n\nThis field only applies to the `rating_scale` poll.",
                  "type": "string",
                  "example": "Not likely"
                },
                "rating_min_value": {
                  "description": "The rating scale's minimum value. This value cannot be less than zero. \n\nThis field only applies to the `rating_scale` poll.",
                  "minimum": 0,
                  "type": "integer",
                  "example": 0
                },
                "right_answers": {
                  "description": "The poll question's correct answer(s). This field is **required** if the poll's `type` value is `3` (Quiz). \n\n For `single` and `matching` polls, this field only accepts one answer.",
                  "items": {
                    "type": "string",
                    "example": "Good"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "show_as_dropdown": {
                  "default": false,
                  "description": "Whether to display the radio selection as a drop-down box: \n* `true` — Show as a drop-down box. \n* `false` — Do not show as a drop-down box. \n\nThis value defaults to `false`.",
                  "type": "boolean",
                  "example": false
                },
                "type": {
                  "description": "The poll's question and answer type: \n* `single` — Single choice. \n* `multiple` — Multiple choice. \n* `matching` — Matching. \n* `rank_order` — Rank order. \n* `short_answer` — Short answer. \n* `long_answer` — Long answer. \n* `fill_in_the_blank` — Fill in the blank. \n* `rating_scale` — Rating scale.",
                  "enum": [
                    "single",
                    "multiple",
                    "matching",
                    "rank_order",
                    "short_answer",
                    "long_answer",
                    "fill_in_the_blank",
                    "rating_scale"
                  ],
                  "type": "string",
                  "x-enum-descriptions": [
                    "Single choice",
                    "Multiple choice",
                    "Matching",
                    "Rank order",
                    "Short answer",
                    "Long answer",
                    "Fill in the blank",
                    "Rating scale"
                  ],
                  "example": "single"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "title": {
            "description": "The poll's title, up to 64 characters.",
            "maxLength": 64,
            "type": "string",
            "example": "Learn something new"
          }
        },
        "title": "Meeting and Webinar Polling Object",
        "type": "object"
      },
      "PollList": {
        "allOf": [
          {
            "properties": {
              "polls": {
                "description": "Array of Polls",
                "items": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "ID of Poll",
                          "type": "string",
                          "example": "QalIoKWLTJehBJ8e1xRrbQ"
                        },
                        "status": {
                          "description": "Status of Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results",
                          "enum": [
                            "notstart",
                            "started",
                            "ended",
                            "sharing"
                          ],
                          "type": "string",
                          "x-enum-descriptions": [
                            "Poll not start",
                            "Poll started",
                            "Poll ended",
                            "Poll is sharing"
                          ],
                          "example": "notstart"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/Poll"
                    }
                  ]
                },
                "type": "array"
              },
              "total_records": {
                "description": "The number of all records available across pages",
                "type": "integer",
                "example": 1
              }
            },
            "type": "object"
          }
        ],
        "description": "Poll List",
        "title": "Poll List",
        "type": "object"
      },
      "Profile": {
        "properties": {
          "recording_storage_location": {
            "properties": {
              "allowed_values": {
                "description": "Users can choose the country to store their recorded content. Content can include meeting, webinar, and phone recordings, as well as voicemail, transcripts, and custom greeting prompts. See [Managing the Communications Content storage location](https://support.zoom.us/hc/en-us/articles/360050781131) for details.\n\nProvide abbreviated country codes as the value for this field. See the [Countries abbreviation list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for details.",
                "items": {
                  "type": "string",
                  "example": "US"
                },
                "type": "array"
              },
              "value": {
                "description": "Abbreviated country code.",
                "type": "string",
                "example": "US"
              }
            },
            "type": "object"
          }
        },
        "title": "Profile",
        "type": "object"
      },
      "QOSAudio": {
        "properties": {
          "avg_loss": {
            "description": "The average amount of packet loss. For example, the percentage of packets that failed to arrive at their destination.",
            "type": "string",
            "example": ""
          },
          "bitrate": {
            "description": "The bits per second transmitted along a digital network, in kbps.",
            "type": "string",
            "example": ""
          },
          "jitter": {
            "description": "The variation in the delay of received packets, in milliseconds.",
            "type": "string",
            "example": ""
          },
          "latency": {
            "description": "The time it took a packet to travel from one point to another, in milliseconds.",
            "type": "string",
            "example": ""
          },
          "max_loss": {
            "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that failed to arrive at their destination.",
            "type": "string",
            "example": ""
          }
        },
        "title": "Audio QoS Object",
        "type": "object"
      },
      "QOSParticipant": {
        "description": "Information about the participant and their quality of service (QoS).",
        "properties": {
          "device": {
            "description": "The type of device the participant used to join the meeting: \n* `Phone` — The participant joined via PSTN. \n* `H.323/SIP` — The participant joined via an H.323 or SIP device. \n* `Windows` — The participant joined via VoIP using a Windows device. \n* `Mac` — The participant joined via VoIP using a Mac device. \n* `iOS` — The participant joined via VoIP using an iOS device. \n* `Android` — The participant joined via VoIP using an Android device. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
            "enum": [
              "Phone",
              "H.323/SIP",
              "Windows",
              "Mac",
              "iOS",
              "Android"
            ],
            "type": "string",
            "example": ""
          },
          "domain": {
            "description": "The participant's PC domain. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
            "type": "string",
            "example": ""
          },
          "harddisk_id": {
            "description": "The participant's hard disk ID. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
            "type": "string",
            "example": ""
          },
          "ip_address": {
            "description": "The participant's IP address.",
            "type": "string",
            "example": ""
          },
          "join_time": {
            "description": "The time at which the participant joined the meeting.",
            "format": "date-time",
            "type": "string",
            "example": ""
          },
          "leave_time": {
            "description": "The time at which the participant left the meeting.",
            "format": "date-time",
            "type": "string",
            "example": ""
          },
          "location": {
            "description": "The participant's location.",
            "type": "string",
            "example": ""
          },
          "mac_addr": {
            "description": "The participant's MAC address. \n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
            "type": "string",
            "example": ""
          },
          "pc_name": {
            "description": "The participant's PC name.",
            "type": "string",
            "example": ""
          },
          "user_id": {
            "description": "The participant's ID. This value is assigned to a participant upon joining a meeting and is only valid for the meeting's duration.",
            "type": "string",
            "example": ""
          },
          "user_name": {
            "description": "The participant's display name.",
            "type": "string",
            "example": ""
          },
          "user_qos": {
            "description": "The participant's quality of service information.",
            "items": {
              "properties": {
                "as_device_from_crc": {
                  "description": "The QoS metrics for screen sharing by a participant who joined the meeting via CRC.",
                  "properties": {
                    "avg_loss": {
                      "description": "The average amount of packet loss. For example, the percentage of packets that failed to arrive at their destination.",
                      "type": "string",
                      "example": ""
                    },
                    "bitrate": {
                      "description": "The bits per second transmitted along a digital network, in kbps.",
                      "type": "string",
                      "example": ""
                    },
                    "jitter": {
                      "description": "The variation in the delay of received packets, in milliseconds.",
                      "type": "string",
                      "example": ""
                    },
                    "latency": {
                      "description": "The time it took a packet to travel from one point to another, in milliseconds.",
                      "type": "string",
                      "example": ""
                    },
                    "max_loss": {
                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that failed to arrive at their destination.",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                },
                "as_device_to_crc": {
                  "description": "The QoS metrics for screen sharing output received by a participant who joined the meeting via CRC.",
                  "properties": {
                    "avg_loss": {
                      "description": "The average amount of packet loss. For example, the percentage of packets that failed to arrive at their destination.",
                      "type": "string",
                      "example": ""
                    },
                    "bitrate": {
                      "description": "The bits per second transmitted along a digital network, in kbps.",
                      "type": "string",
                      "example": ""
                    },
                    "jitter": {
                      "description": "The variation in the delay of received packets, in milliseconds.",
                      "type": "string",
                      "example": ""
                    },
                    "latency": {
                      "description": "The time it took a packet to travel from one point to another, in milliseconds.",
                      "type": "string",
                      "example": ""
                    },
                    "max_loss": {
                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that failed to arrive at their destination.",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                },
                "as_input": {
                  "$ref": "#/components/schemas/QOSVideo"
                },
                "as_output": {
                  "$ref": "#/components/schemas/QOSVideo"
                },
                "audio_device_from_crc": {
                  "description": "The QoS metrics for audio sent by a participant who joined the meeting via a Cloud Room Connector (CRC).",
                  "properties": {
                    "avg_loss": {
                      "description": "The average amount of packet loss. For example, the percentage of packets that failed to arrive at their destination.",
                      "type": "string",
                      "example": ""
                    },
                    "bitrate": {
                      "description": "The bits per second transmitted along a digital network, in kbps.",
                      "type": "string",
                      "example": ""
                    },
                    "jitter": {
                      "description": "The variation in the delay of received packets, in milliseconds.",
                      "type": "string",
                      "example": ""
                    },
                    "latency": {
                      "description": "The time it took a packet to travel from one point to another, in milliseconds.",
                      "type": "string",
                      "example": ""
                    },
                    "max_loss": {
                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that failed to arrive at their destination.",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                },
                "audio_device_to_crc": {
                  "description": "The QoS metrics for audio received by a participant who joined the meeting via CRC.",
                  "properties": {
                    "avg_loss": {
                      "description": "The average amount of packet loss. For example, the percentage of packets that failed to arrive at their destination.",
                      "type": "string",
                      "example": ""
                    },
                    "bitrate": {
                      "description": "The bits per second transmitted along a digital network, in kbps.",
                      "type": "string",
                      "example": ""
                    },
                    "jitter": {
                      "description": "The variation in the delay of received packets, in milliseconds.",
                      "type": "string",
                      "example": ""
                    },
                    "latency": {
                      "description": "The time it took a packet to travel from one point to another, in milliseconds.",
                      "type": "string",
                      "example": ""
                    },
                    "max_loss": {
                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that failed to arrive at their destination.",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                },
                "audio_input": {
                  "$ref": "#/components/schemas/QOSAudio"
                },
                "audio_output": {
                  "$ref": "#/components/schemas/QOSAudio"
                },
                "cpu_usage": {
                  "properties": {
                    "system_max_cpu_usage": {
                      "description": "The system's maximum CPU usage.",
                      "type": "string",
                      "example": ""
                    },
                    "zoom_avg_cpu_usage": {
                      "description": "Zoom's average CPU usage.",
                      "type": "string",
                      "example": ""
                    },
                    "zoom_max_cpu_usage": {
                      "description": "Zoom's maximum CPU usage.",
                      "type": "string",
                      "example": ""
                    },
                    "zoom_min_cpu_usage": {
                      "description": "Zoom's minimum CPU usage.",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                },
                "date_time": {
                  "description": "The QoS date and time.",
                  "format": "date-time",
                  "type": "string",
                  "example": ""
                },
                "video_device_from_crc": {
                  "description": "The QoS metrics for video input being sent by a participant who joined the meeting via CRC.",
                  "properties": {
                    "avg_loss": {
                      "description": "The average amount of packet loss. For example, the percentage of packets that failed to arrive at their destination.",
                      "type": "string",
                      "example": ""
                    },
                    "bitrate": {
                      "description": "The bits per second transmitted along a digital network, in kbps.",
                      "type": "string",
                      "example": ""
                    },
                    "jitter": {
                      "description": "The variation in the delay of received packets, in milliseconds.",
                      "type": "string",
                      "example": ""
                    },
                    "latency": {
                      "description": "The time it took a packet to travel from one point to another, in milliseconds.",
                      "type": "string",
                      "example": ""
                    },
                    "max_loss": {
                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that failed to arrive at their destination.",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                },
                "video_device_to_crc": {
                  "description": "The QoS metrics for video output being sent by a participant who joined the meeting via CRC.",
                  "properties": {
                    "avg_loss": {
                      "description": "The average amount of packet loss. For example, the percentage of packets that failed to arrive at their destination.",
                      "type": "string",
                      "example": ""
                    },
                    "bitrate": {
                      "description": "The bits per second transmitted along a digital network, in kbps.",
                      "type": "string",
                      "example": ""
                    },
                    "jitter": {
                      "description": "The variation in the delay of received packets, in milliseconds.",
                      "type": "string",
                      "example": ""
                    },
                    "latency": {
                      "description": "The time it took a packet to travel from one point to another, in milliseconds.",
                      "type": "string",
                      "example": ""
                    },
                    "max_loss": {
                      "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that failed to arrive at their destination.",
                      "type": "string",
                      "example": ""
                    }
                  },
                  "type": "object"
                },
                "video_input": {
                  "$ref": "#/components/schemas/QOSVideo"
                },
                "video_output": {
                  "$ref": "#/components/schemas/QOSVideo"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "description": "The participant's Zoom client version.",
            "type": "string",
            "example": ""
          }
        },
        "title": "Participant QOS",
        "type": "object"
      },
      "QOSParticipantList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationToken4Qos"
          },
          {
            "properties": {
              "participants": {
                "description": "Information about the participant.",
                "items": {
                  "$ref": "#/components/schemas/QOSParticipant"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "Participant QOS list.",
        "title": "Participant QOS List",
        "type": "object"
      },
      "QOSVideo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QOSAudio"
          },
          {
            "properties": {
              "frame_rate": {
                "description": "The rate at which the video camera can produce unique images (frames). Zoom supports a frame rate of up to 30fps.",
                "type": "string",
                "example": ""
              },
              "resolution": {
                "description": "The number of pixels in each dimension that the video camera can display.",
                "type": "string",
                "example": ""
              }
            },
            "type": "object"
          }
        ],
        "title": "Video QoS Object",
        "type": "object"
      },
      "Recording": {
        "description": "Recording file object.",
        "properties": {
          "deleted_time": {
            "description": "The time at which recording was deleted. Returned in the response only for trash query.",
            "type": "string",
            "example": ""
          },
          "download_url": {
            "description": "The URL at which to download the the recording. \n\n**JWT apps** \n\nTo access a private or password-protected cloud recording of a user in your account, use a [Zoom JWT app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL. For example: \n\n`https://{{base-domain}}/recording/download/{{path-to-file-download}}?access_token={{JWT-token}}` \n\n**OAuth apps** \n\nIf a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://marketplace.zoom.us/docs/guides/auth/oauth) to download the file. For example: \n\n`https://{{base-domain}}/rec/archive/download/xxx?access_token={{OAuth-access-token}}` \n\n**Note:** This field does **not** return for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the `file_path` field.",
            "type": "string",
            "example": ""
          },
          "file_path": {
            "description": "The file path to the On-Premise account recording. \n\n**Note:** This API only returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the `download_url` field.",
            "type": "string",
            "example": ""
          },
          "file_size": {
            "description": "The recording file size.",
            "type": "number",
            "example": ""
          },
          "file_type": {
            "description": "The recording file type. The value of this field could be one of the following:<br>\n`MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording in JSON file format. To get a timeline file, the \"Add a timestamp to the recording\" setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.\n<br> `TRANSCRIPT`: Transcription file of the recording in VTT format.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording in VTT file format.<br>`CSV`: File containing polling data in csv format.\n\n<br>\n\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>\n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`.",
            "type": "string",
            "example": ""
          },
          "id": {
            "description": "The recording file ID. Included in the response of general query.",
            "type": "string",
            "example": ""
          },
          "meeting_id": {
            "description": "The meeting ID. ",
            "type": "string",
            "example": ""
          },
          "play_url": {
            "description": "The URL using which a recording file can be played.",
            "type": "string",
            "example": ""
          },
          "recording_end": {
            "description": "The recording end time. Response in general query.",
            "type": "string",
            "example": ""
          },
          "recording_start": {
            "description": "The recording start time.",
            "type": "string",
            "example": ""
          },
          "recording_type": {
            "description": "The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`active_speaker`<br>`poll`<br>`timeline`<br>`closed_caption`",
            "type": "string",
            "example": ""
          },
          "status": {
            "description": "The recording status.",
            "enum": [
              "completed"
            ],
            "type": "string",
            "example": ""
          }
        },
        "type": "object"
      },
      "RecordingList": {
        "allOf": [
          {
            "properties": {
              "recording_files": {
                "description": "List of recording file.",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Recording"
                    }
                  ]
                },
                "title": "Recording file List",
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "List of recording file.",
        "title": "Recording file List",
        "type": "object"
      },
      "RecordingMeeting": {
        "allOf": [
          {
            "properties": {
              "account_id": {
                "description": "Unique Identifier of the user account.",
                "type": "string",
                "example": ""
              },
              "duration": {
                "description": "Meeting duration.",
                "type": "integer",
                "example": ""
              },
              "host_id": {
                "description": "ID of the user set as host of meeting.",
                "type": "string",
                "example": ""
              },
              "id": {
                "description": "Meeting ID - also known as the meeting number.",
                "type": "integer",
                "example": ""
              },
              "recording_count": {
                "description": "Number of recording files returned in the response of this API call. This includes the `recording_files` and  `participant_audio_files` files.",
                "type": "integer",
                "example": ""
              },
              "start_time": {
                "description": "The time at which the meeting started.",
                "format": "date-time",
                "type": "string",
                "example": ""
              },
              "topic": {
                "description": "Meeting topic.",
                "type": "string",
                "example": ""
              },
              "total_size": {
                "description": "The total file size of the recording. This includes the `recording_files` and `participant_audio_files` files.",
                "format": "int64",
                "type": "integer",
                "example": ""
              },
              "type": {
                "description": "The recording's associated type of meeting or webinar: \n\nIf the recording is of a meeting: \n* `1` — Instant meeting. \n* `2` — Scheduled meeting. \n* `3` — A recurring meeting with no fixed time. \n* `4` — A meeting created via PMI (Personal Meeting ID). \n* `7` — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* `8` - Recurring meeting with a fixed time. \n\nIf the recording is of a webinar: \n* `5` — A webinar. \n* `6` — A recurring webinar without a fixed time \n* `9` — A recurring webinar with a fixed time.\n\nIf the recording is **not** from a meeting or webinar: \n\n* `99` — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  99
                ],
                "type": "string",
                "x-enum-descriptions": [
                  "Instant Meeting",
                  "Scheduled Meeting",
                  "Recurring Meeting with no fixed time",
                  "Meeting created using a Personal Meeting ID",
                  "A webinar",
                  "Recurring webinar without a fixed time",
                  "Personal Audio Conference",
                  "Recurring meeting with a fixed time",
                  "Recurring webinar with a fixed time",
                  "A recording uploaded"
                ],
                "example": ""
              },
              "uuid": {
                "description": "Unique Meeting Identifier. Each instance of the meeting will have its own UUID.",
                "type": "string",
                "example": ""
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/RecordingList"
          }
        ],
        "description": "The recording meeting object.",
        "type": "object"
      },
      "RecordingMeetingList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DateTime"
          },
          {
            "$ref": "#/components/schemas/PaginationToken"
          },
          {
            "properties": {
              "meetings": {
                "description": "List of recordings.",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordingMeeting"
                    }
                  ]
                },
                "title": "Recording List",
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "List of recordings.",
        "title": "Recording List",
        "type": "object"
      },
      "RecordingRegistrantList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "registrants": {
                "description": "Information about the cloud recording registrants.",
                "items": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "The registrant's ID.",
                          "type": "string",
                          "example": "3Z7sEm0TQQieLav3c3OD_g"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/MeetingRegistrant"
                    }
                  ]
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "Information about the cloud recording registrations.",
        "title": "Cloud Recording Registration List",
        "type": "object"
      },
      "RecordingRegistrantQuestions": {
        "description": "Recording Registrant Questions",
        "properties": {
          "custom_questions": {
            "description": "Array of Registrant Custom Questions",
            "items": {
              "properties": {
                "answers": {
                  "description": "Answer choices for the question. Can not be used with Short answer type.",
                  "items": {
                    "type": "string",
                    "example": "Yes"
                  },
                  "type": "array"
                },
                "required": {
                  "description": "State whether registrants are required to answer custom questions or not.",
                  "type": "boolean",
                  "example": true
                },
                "title": {
                  "description": "Title of the question.",
                  "type": "string",
                  "example": "What's your name?"
                },
                "type": {
                  "description": "The type of registration question and answers.",
                  "enum": [
                    "short",
                    "single",
                    "multiple"
                  ],
                  "type": "string",
                  "x-enum-descriptions": [
                    "Short Answer",
                    "Single Answer",
                    "Multiple Answer"
                  ],
                  "example": "short"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "questions": {
            "description": "Array of Registrant Questions",
            "items": {
              "properties": {
                "field_name": {
                  "description": "Field name.",
                  "enum": [
                    "last_name",
                    "address",
                    "city",
                    "country",
                    "zip",
                    "state",
                    "phone",
                    "industry",
                    "org",
                    "job_title",
                    "purchasing_time_frame",
                    "role_in_purchase_process",
                    "no_of_employees",
                    "comments"
                  ],
                  "type": "string",
                  "x-enum-descriptions": [
                    "Last Name",
                    "Address",
                    "City",
                    "Country/Region",
                    "Zip/Postal Code",
                    "State/Province",
                    "Phone",
                    "Industry",
                    "Organization",
                    "Job Title",
                    "Purchasing Time Frame",
                    "Role in Purchase Process",
                    "Number of Employees",
                    "Questions & Comments"
                  ],
                  "example": "last_name"
                },
                "required": {
                  "description": "State whether the field is required to be answered by the registrant or not.",
                  "type": "boolean",
                  "example": true
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "Recording Registrant Questions",
        "type": "object"
      },
      "RecordingRegistrantStatus": {
        "description": "Registrant Status",
        "properties": {
          "action": {
            "enum": [
              "approve",
              "deny"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Approve registrant",
              "Deny registrant"
            ],
            "example": "approve"
          },
          "registrants": {
            "description": "List of registrants",
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "example": "3Z7sEm0TQQieLav3c3OD_g"
                }
              },
              "type": "object"
            },
            "maximum": 30,
            "type": "array"
          }
        },
        "required": [
          "action"
        ],
        "type": "object"
      },
      "RecordingSeparateAudio": {
        "description": "The recording file object.",
        "properties": {
          "download_url": {
            "description": "The URL at which to download the the recording. \n\n**JWT apps** \n\nTo access a private or password-protected cloud recording of a user in your account, use a [Zoom JWT app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL. For example: \n\n`https://{{base-domain}}/recording/download/{{path-to-file-download}}?access_token={{JWT-token}}` \n\n**OAuth apps** \n\nIf a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://marketplace.zoom.us/docs/guides/auth/oauth) to download the file. For example: \n\n`https://{{base-domain}}/rec/archive/download/xxx?access_token={{OAuth-access-token}}` \n\n**Note:** This field does **not** return for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the `file_path` field.",
            "type": "string",
            "example": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB"
          },
          "file_name": {
            "description": "The recording file's name.",
            "type": "string",
            "example": "test.json"
          },
          "file_path": {
            "description": "The file path to the On-Premise account recording. \n\n**Note:** This API only returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the `download_url` field.",
            "type": "string",
            "example": "/9090876528/path01/demo.mp4"
          },
          "file_size": {
            "description": "The recording file's size, in bytes.",
            "type": "number",
            "example": 65536
          },
          "file_type": {
            "description": "The recording file's format. One of:\n\n* `MP4` — Video file.\n* `M4A` — Audio-only file.\n* `TIMELINE` — Timestamp file of the recording, in JSON file format. To get a timeline file, the **Add a timestamp to the recording** setting **must** be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone.\n* `TRANSCRIPT` — A transcript of the recording, in VTT format.\n* `CHAT` — A text file containing chat messages sent during the meeting.\n* `CC` — A file containing the closed captions of the recording, in VTT file format.\n* `CSV` — A file containing polling data, in CSV format.\n\nA recording file object with file the `CC` or `TIMELINE` value **does not** have the `id`, `status`, `file_size`, `recording_type`, and `play_url` properties.",
            "type": "string",
            "example": "M4A"
          },
          "id": {
            "description": "The recording file's unique ID. This is included in the general query response.",
            "type": "string",
            "example": "a2f19f96-9294-4f51-8134-6f0eea108eb2"
          },
          "play_url": {
            "description": "The URL at which the recording file can be opened and played.",
            "type": "string",
            "example": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngBBBB"
          },
          "recording_end": {
            "description": "The recording file's end time. This is included in the general query response.",
            "format": "date-time",
            "type": "string",
            "example": "2021-06-30T22:14:57Z"
          },
          "recording_start": {
            "description": "The recording file's start time.",
            "format": "date-time",
            "type": "string",
            "example": "2021-06-30T22:14:57Z"
          },
          "status": {
            "description": "The recording file's status.",
            "enum": [
              "completed"
            ],
            "type": "string",
            "example": "completed"
          }
        },
        "type": "object"
      },
      "RecordingSeparateAudioList": {
        "allOf": [
          {
            "properties": {
              "participant_audio_files": {
                "description": "A list of recording files. The API only returns this response when the **Record a separate audio file of each participant** setting is enabled.",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordingSeparateAudio"
                    }
                  ]
                },
                "title": "The list of recording files for each participant.",
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "Return a list of recording files for each participant. The API only returns this response when the **Record a separate audio file of each participant** setting is enabled.",
        "title": "List recording files for each participant.",
        "type": "object"
      },
      "RecordingSettings": {
        "properties": {
          "approval_type": {
            "description": "Approval type for the registration.<br>\n`0`- Automatically approve the registration when a user registers.<br>\n`1` - Manually approve or deny the registration of a user.<br>\n`2` - No registration required to view the recording.",
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Registrants can watch the recording directly after registration",
              "Registrants will receive emails then watch the recording after you approve the registration",
              "Disabled"
            ],
            "example": 1
          },
          "authentication_domains": {
            "description": "Authentication domains.",
            "type": "string",
            "example": "test.com"
          },
          "authentication_option": {
            "description": "Authentication Options.",
            "type": "string",
            "example": "auth_option"
          },
          "on_demand": {
            "description": "Determine whether registration is required to view the recording.",
            "type": "boolean",
            "example": true
          },
          "password": {
            "description": "Enable password protection for the recording by setting a password. The password must have a minimum of **eight** characters with a mix of numbers, letters and special characters.<br><br>\n**Note:** If the account owner or the admin has set minimum password strength requirements for recordings via Account Settings, the password value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API.",
            "maxLength": 10,
            "minLength": 8,
            "type": "string",
            "example": "975193018"
          },
          "recording_authentication": {
            "description": "Only authenticated users can view.",
            "type": "boolean",
            "example": true
          },
          "send_email_to_host": {
            "description": "Send an email to host when someone registers to view the recording. This applies for On-demand recordings only.",
            "type": "boolean",
            "example": true
          },
          "share_recording": {
            "description": "Determine how the meeting recording is shared.",
            "enum": [
              "publicly",
              "internally",
              "none"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Publicly",
              "Internally(account members only)",
              "None"
            ],
            "example": "publicly"
          },
          "show_social_share_buttons": {
            "description": "Show social share buttons on registration page. This applies for On-demand recordings only.",
            "type": "boolean",
            "example": true
          },
          "topic": {
            "description": "Name of the recording.",
            "type": "string",
            "example": "My Personal Meeting Room"
          },
          "viewer_download": {
            "description": "Determine whether a viewer can download the recording file or not.",
            "type": "boolean",
            "example": true
          }
        },
        "title": "Recording settings",
        "type": "object"
      },
      "Recurrence": {
        "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
        "properties": {
          "end_date_time": {
            "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
            "format": "date-time",
            "type": "string",
            "example": "2022-04-02T15:59:00Z"
          },
          "end_times": {
            "default": 1,
            "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
            "maximum": 365,
            "type": "integer",
            "example": 7
          },
          "monthly_day": {
            "default": 1,
            "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.",
            "type": "integer",
            "example": 1
          },
          "monthly_week": {
            "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
            "enum": [
              -1,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Last week",
              "First week",
              "Second week",
              "Third week",
              "Fourth week"
            ],
            "example": 1
          },
          "monthly_week_day": {
            "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "example": 1
          },
          "repeat_interval": {
            "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n",
            "type": "integer",
            "example": 1
          },
          "type": {
            "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Daily",
              "Weekly",
              "Monthly"
            ],
            "example": 1
          },
          "weekly_days": {
            "type": "string",
            "default": "1",
            "description": "This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `\"1\"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `\"1,3\"` as the value of this field.\n\n <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "example": "1"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "Registrant": {
        "description": "Information about the registrant.",
        "properties": {
          "address": {
            "description": "The registrant's address.",
            "type": "string",
            "example": "1800 Amphibious Blvd."
          },
          "city": {
            "description": "The registrant's city.",
            "type": "string",
            "example": "Mountain View"
          },
          "comments": {
            "description": "The registrant's questions and comments.",
            "type": "string",
            "example": "Looking forward to the discussion."
          },
          "country": {
            "description": "The registrant's two-letter [country code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
            "type": "string",
            "example": "US"
          },
          "custom_questions": {
            "description": "Information about custom questions.",
            "items": {
              "$ref": "#/components/schemas/CustomQuestion"
            },
            "type": "array"
          },
          "email": {
            "description": "The registrant's email address. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for return value details.",
            "format": "email",
            "maxLength": 128,
            "type": "string",
            "example": "jchill@example.com"
          },
          "first_name": {
            "description": "The registrant's first name.",
            "maxLength": 64,
            "type": "string",
            "example": "Jill"
          },
          "industry": {
            "description": "The registrant's industry.",
            "type": "string",
            "example": "Food"
          },
          "job_title": {
            "description": "The registrant's job title.",
            "type": "string",
            "example": "Chef"
          },
          "last_name": {
            "description": "The registrant's last name.",
            "maxLength": 64,
            "type": "string",
            "example": "Chill"
          },
          "no_of_employees": {
            "description": "The registrant's number of employees: \n* `1-20` \n* `21-50` \n* `51-100` \n* `101-500` \n* `500-1,000` \n* `1,001-5,000` \n* `5,001-10,000` \n* `More than 10,000`",
            "enum": [
              "",
              "1-20",
              "21-50",
              "51-100",
              "101-500",
              "500-1,000",
              "1,001-5,000",
              "5,001-10,000",
              "More than 10,000"
            ],
            "type": "string",
            "example": "1-20"
          },
          "org": {
            "description": "The registrant's organization.",
            "type": "string",
            "example": "Cooking Org"
          },
          "phone": {
            "description": "The registrant's phone number.",
            "type": "string",
            "example": "5550100"
          },
          "purchasing_time_frame": {
            "description": "The registrant's purchasing time frame: \n* `Within a month` \n* `1-3 months` \n* `4-6 months` \n* `More than 6 months` \n* `No timeframe`",
            "enum": [
              "",
              "Within a month",
              "1-3 months",
              "4-6 months",
              "More than 6 months",
              "No timeframe"
            ],
            "type": "string",
            "example": "1-3 months"
          },
          "role_in_purchase_process": {
            "description": "The registrant's role in the purchase process: \n* `Decision Maker` \n* `Evaluator/Recommender` \n* `Influencer` \n* `Not involved`",
            "enum": [
              "",
              "Decision Maker",
              "Evaluator/Recommender",
              "Influencer",
              "Not involved"
            ],
            "type": "string",
            "example": "Influencer"
          },
          "state": {
            "description": "The registrant's state or province.",
            "type": "string",
            "example": "CA"
          },
          "status": {
            "description": "The registrant's status: \n* `approved` — Registrant is approved. \n* `denied` — Registrant is denied. \n* `pending` — Registrant is waiting for approval.",
            "enum": [
              "approved",
              "denied",
              "pending"
            ],
            "type": "string",
            "example": "approved"
          },
          "zip": {
            "description": "The registrant's ZIP or postal code.",
            "type": "string",
            "example": "94045"
          }
        },
        "required": [
          "email",
          "first_name"
        ],
        "type": "object"
      },
      "RegistrantList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "registrants": {
                "description": "List of registrant objects.",
                "items": {
                  "allOf": [
                    {
                      "properties": {
                        "id": {
                          "description": "Registrant ID.",
                          "type": "string",
                          "example": "9tboDiHUQAeOnbmudzWa5g"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/MeetingRegistrant"
                    },
                    {
                      "properties": {
                        "create_time": {
                          "description": "The time at which the registrant registered.",
                          "format": "date-time",
                          "type": "string",
                          "example": "2022-03-22T05:59:09Z"
                        },
                        "join_url": {
                          "description": "The URL using which an approved registrant can join the webinar.",
                          "format": "string",
                          "type": "string",
                          "example": "https://example.com/j/11111"
                        },
                        "status": {
                          "description": "The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar.",
                          "type": "string",
                          "example": "approved"
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "List of users.",
        "title": "Registration List",
        "type": "object"
      },
      "RegistrantPost": {
        "type": "object",
        "description": "Information about the registrant.",
        "properties": {
          "first_name": {
            "type": "string",
            "maxLength": 64,
            "description": "The registrant's first name.",
            "example": "Jill"
          },
          "last_name": {
            "type": "string",
            "maxLength": 64,
            "description": "The registrant's last name.",
            "example": "Chill"
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 128,
            "description": "The registrant's email address.",
            "example": "jchill@example.com"
          },
          "address": {
            "type": "string",
            "description": "The registrant's address.",
            "example": "1800 Amphibious Blvd."
          },
          "city": {
            "type": "string",
            "description": "The registrant's city.",
            "example": "Mountain View"
          },
          "state": {
            "type": "string",
            "description": "The registrant's state or province.",
            "example": "CA"
          },
          "zip": {
            "type": "string",
            "description": "The registrant's ZIP or postal code.",
            "example": "94045"
          },
          "country": {
            "type": "string",
            "description": "The registrant's two-letter [country code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
            "example": "US"
          },
          "phone": {
            "type": "string",
            "description": "The registrant's phone number.",
            "example": "5550100"
          },
          "comments": {
            "type": "string",
            "description": "The registrant's questions and comments.",
            "example": "Looking forward to the discussion."
          },
          "custom_questions": {
            "type": "array",
            "description": "Information about custom questions.",
            "items": {
              "$ref": "#/components/schemas/CustomQuestion"
            }
          },
          "industry": {
            "type": "string",
            "description": "The registrant's industry.",
            "example": "Food"
          },
          "job_title": {
            "type": "string",
            "description": "The registrant's job title.",
            "example": "Chef"
          },
          "no_of_employees": {
            "type": "string",
            "description": "The registrant's number of employees: \n* `1-20` \n* `21-50` \n* `51-100` \n* `101-500` \n* `500-1,000` \n* `1,001-5,000` \n* `5,001-10,000` \n* `More than 10,000`",
            "enum": [
              "",
              "1-20",
              "21-50",
              "51-100",
              "101-500",
              "500-1,000",
              "1,001-5,000",
              "5,001-10,000",
              "More than 10,000"
            ],
            "example": "1-20"
          },
          "org": {
            "type": "string",
            "description": "The registrant's organization.",
            "example": "Cooking Org"
          },
          "purchasing_time_frame": {
            "type": "string",
            "description": "The registrant's purchasing time frame: \n* `Within a month` \n* `1-3 months` \n* `4-6 months` \n* `More than 6 months` \n* `No timeframe`",
            "enum": [
              "",
              "Within a month",
              "1-3 months",
              "4-6 months",
              "More than 6 months",
              "No timeframe"
            ],
            "example": "1-3 months"
          },
          "role_in_purchase_process": {
            "type": "string",
            "description": "The registrant's role in the purchase process: \n* `Decision Maker` \n* `Evaluator/Recommender` \n* `Influencer` \n* `Not involved`",
            "enum": [
              "",
              "Decision Maker",
              "Evaluator/Recommender",
              "Influencer",
              "Not involved"
            ],
            "example": "Influencer"
          }
        },
        "required": [
          "email",
          "first_name"
        ]
      },
      "RegistrantStatus": {
        "properties": {
          "action": {
            "description": "Registrant Status:<br>`approve` - Approve registrant.<br>`cancel` - Cancel previously approved registrant's registration.<br>`deny` - Deny registrant.",
            "enum": [
              "approve",
              "cancel",
              "deny"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Approve registrant",
              "Cancel previously approved registrant",
              "Deny registrant"
            ],
            "example": "approve"
          },
          "registrants": {
            "description": "List of registrants.",
            "items": {
              "properties": {
                "email": {
                  "type": "string",
                  "example": "jchill@example.com"
                },
                "id": {
                  "type": "string",
                  "example": "9tboDiHUQAeOnbmudzWa5g"
                }
              },
              "type": "object"
            },
            "maximum": 30,
            "type": "array"
          }
        },
        "required": [
          "action"
        ],
        "type": "object"
      },
      "RoleList": {
        "allOf": [
          {
            "properties": {
              "roles": {
                "description": "List of Roles objects",
                "items": {
                  "allOf": [
                    {
                      "properties": {
                        "description": {
                          "description": "Role Description",
                          "type": "string",
                          "example": ""
                        },
                        "id": {
                          "description": "Role Id",
                          "type": "string",
                          "example": ""
                        },
                        "name": {
                          "description": "Role Name",
                          "type": "string",
                          "example": ""
                        },
                        "total_members": {
                          "description": "Total members in this role",
                          "type": "integer",
                          "example": ""
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              },
              "total_records": {
                "description": "The number of all records available across pages",
                "type": "integer",
                "example": ""
              }
            },
            "type": "object"
          }
        ],
        "description": "List of Roles",
        "title": "Role List",
        "type": "object"
      },
      "RoleMembersList": {
        "description": "List of a Role Members",
        "properties": {
          "members": {
            "description": "List of a Role Members",
            "items": {
              "allOf": [
                {
                  "properties": {
                    "department": {
                      "description": "Member Department",
                      "type": "string",
                      "example": ""
                    },
                    "email": {
                      "description": "Member Email",
                      "type": "string",
                      "example": ""
                    },
                    "first_name": {
                      "description": "Member First Name",
                      "type": "string",
                      "example": ""
                    },
                    "id": {
                      "description": "Member ID",
                      "type": "string",
                      "example": ""
                    },
                    "last_name": {
                      "description": "Member Last Name",
                      "type": "string",
                      "example": ""
                    },
                    "type": {
                      "description": "Member Type",
                      "type": "integer",
                      "example": ""
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "object"
            },
            "type": "array"
          },
          "next_page_token": {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string",
            "example": ""
          },
          "page_count": {
            "description": "The number of pages returned for the request made.",
            "type": "integer",
            "example": ""
          },
          "page_number": {
            "default": 1,
            "description": "The page number of the current results.",
            "type": "integer",
            "example": ""
          },
          "page_size": {
            "default": 30,
            "description": "The number of records returned within a single API call.",
            "maximum": 300,
            "type": "integer",
            "example": ""
          },
          "total_records": {
            "description": "The total number of all the records available across pages.",
            "type": "integer",
            "example": ""
          }
        },
        "title": "Role Members List",
        "type": "object"
      },
      "SessionUpdate": {
        "description": "Base object for sessions.",
        "properties": {
          "agenda": {
            "description": "Meeting description.",
            "maxLength": 2000,
            "type": "string",
            "example": "My Meeting"
          },
          "duration": {
            "description": "Meeting duration (minutes). Used for scheduled meetings only.",
            "type": "integer",
            "example": 60
          },
          "password": {
            "description": "Meeting passcode. Passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ *] and can have a maximum of 10 characters.\n\n**Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API.",
            "maxLength": 10,
            "type": "string",
            "example": "123456"
          },
          "pre_schedule": {
            "default": false,
            "description": "Whether to create a prescheduled meeting via the [GSuite app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on). This **only** supports the meeting `type` value of `2` (scheduled meetings) and `3` (recurring meetings with no fixed time): \n* `true` — Create a prescheduled meeting. \n* `false` — Create a regular meeting.",
            "type": "boolean",
            "example": false
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeetingSettings"
              },
              {
                "properties": {
                  "meeting_invitees": {
                    "description": "A list of the meeting's invitees.",
                    "items": {
                      "properties": {
                        "email": {
                          "description": "The invitee's email address.",
                          "format": "email",
                          "type": "string",
                          "example": "jchil@example.com"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "registrants_confirmation_email": {
                    "description": "Send confirmation Email to Registrants",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              }
            ]
          },
          "start_time": {
            "description": "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\", always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\", you should use local time and  specify the time zone. Only used for scheduled meetings and recurring meetings with a fixed time.",
            "format": "date-time",
            "type": "string",
            "example": "2022-03-25T07:29:29Z"
          },
          "template_id": {
            "description": "Unique identifier of the meeting template. \n\nUse this field if you would like to [schedule the meeting from a meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates#h_86f06cff-0852-4998-81c5-c83663c176fb). You can retrieve the value of this field by calling the [List meeting templates]() API.",
            "type": "string",
            "example": "5Cj3ceXoStO6TGOVvIOVPA=="
          },
          "timezone": {
            "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats.",
            "type": "string",
            "example": "America/Los_Angeles"
          },
          "topic": {
            "description": "Meeting topic.",
            "type": "string",
            "example": "My Meeting"
          },
          "tracking_fields": {
            "description": "Tracking fields",
            "items": {
              "properties": {
                "field": {
                  "description": "Tracking fields type",
                  "type": "string",
                  "example": "field1"
                },
                "value": {
                  "description": "Tracking fields value",
                  "type": "string",
                  "example": "value1"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "type": {
            "default": 2,
            "description": "Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with a fixed time.",
            "enum": [
              1,
              2,
              3,
              8
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Instant Meeting",
              "Scheduled Meeting",
              "Recurring Meeting with no fixed time",
              "Recurring Meeting with fixed time"
            ],
            "example": 2
          }
        },
        "type": "object"
      },
      "SessionWebinarUpdate": {
        "description": "Base webinar object for sessions.",
        "properties": {
          "agenda": {
            "description": "Webinar description.",
            "type": "string",
            "example": "My Webinar"
          },
          "duration": {
            "description": "Webinar duration (minutes). Used for scheduled webinar only.",
            "type": "integer",
            "example": 60
          },
          "password": {
            "description": "[Webinar passcode](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords). By default, passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ * !] and can have a maximum of 10 characters.\n\n**Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API. \n\nIf \"**Require a passcode when scheduling new meetings**\" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request.",
            "maxLength": 10,
            "type": "string",
            "example": "123456"
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebinarSettings"
              },
              {
                "properties": {
                  "registrants_confirmation_email": {
                    "description": "Send confirmation email to registrants.",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              }
            ]
          },
          "start_time": {
            "description": "Webinar start time, in the format \"yyyy-MM-dd'T'HH:mm:ss'Z'.\" Should be in GMT time. In the format \"yyyy-MM-dd'T'HH:mm:ss.\" This should be in local time and the timezone should be specified. Only used for scheduled webinars and recurring webinars with a fixed time.",
            "format": "date-time",
            "type": "string",
            "example": "2022-03-26T07:18:32Z"
          },
          "timezone": {
            "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats.",
            "type": "string",
            "example": "America/Los_Angeles"
          },
          "topic": {
            "description": "Webinar topic.",
            "type": "string",
            "example": "My Webinar"
          },
          "tracking_fields": {
            "description": "Tracking fields",
            "items": {
              "properties": {
                "field": {
                  "description": "Tracking fields type",
                  "type": "string",
                  "example": "field1"
                },
                "value": {
                  "description": "Tracking fields value",
                  "type": "string",
                  "example": "value1"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "type": {
            "default": 5,
            "description": "Webinar Types:<br>`5` - webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.",
            "enum": [
              5,
              6,
              9
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Webinar",
              "Recurring Webinar with no fixed time",
              "Recurring Webinar with fixed time"
            ],
            "example": 5
          }
        },
        "type": "object"
      },
      "SettingsUpdateTelephony": {
        "properties": {
          "audio_conference_info": {
            "default": "",
            "description": "Third party audio conference info.",
            "maxLength": 2048,
            "type": "string",
            "example": "test"
          },
          "show_international_numbers_link": {
            "description": "Show the international numbers link on the invitation email.",
            "type": "boolean",
            "example": true
          },
          "telephony_regions": {
            "description": "Indicates where most of the participants call into or call from during a meeting.",
            "properties": {
              "selection_values": {
                "description": "The account's selected telephony regions that indicate where most participants call into or call from during a meeting.",
                "type": "string",
                "example": "CNTB"
              }
            },
            "type": "object"
          },
          "third_party_audio": {
            "description": "Third party audio conference.",
            "type": "boolean",
            "example": true
          }
        },
        "title": "Telephony update settings: Meeting settings",
        "type": "object"
      },
      "TSP": {
        "description": "List of TSP accounts.",
        "properties": {
          "conference_code": {
            "description": "Conference code: numeric value, length is less than 16.",
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "example": "0125"
          },
          "dial_in_numbers": {
            "description": "List of dial in numbers.",
            "items": {
              "properties": {
                "code": {
                  "description": "Country code.",
                  "maxLength": 6,
                  "type": "string",
                  "example": "1"
                },
                "country_label": {
                  "description": "Country Label, if passed, will display in place of code.",
                  "maxLength": 10,
                  "type": "string",
                  "example": "America"
                },
                "number": {
                  "description": "Dial-in number: length is less than 16.",
                  "maxLength": 16,
                  "minLength": 1,
                  "type": "string",
                  "example": "+1 1000200200"
                },
                "type": {
                  "description": "Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>\n`media_link` - Media link.",
                  "enum": [
                    "toll",
                    "tollfree",
                    "media_link"
                  ],
                  "type": "string",
                  "x-enum-descriptions": [
                    "Toll number <br/>",
                    "Toll free number <br/>",
                    "Media link phone number <br/>"
                  ],
                  "example": "toll"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "leader_pin": {
            "description": "Leader PIN: numeric value, length is less than 16.",
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "example": "US_TSP_TB"
          },
          "tsp_bridge": {
            "description": "Telephony bridge",
            "enum": [
              "US_TSP_TB",
              "EU_TSP_TB"
            ],
            "type": "string",
            "example": "US_TSP_TB"
          }
        },
        "required": [
          "conference_code",
          "leader_pin"
        ],
        "title": "TSP Accounts List",
        "type": "object"
      },
      "TrackingField": {
        "description": "Tracking Field",
        "properties": {
          "field": {
            "description": "Label/ Name for the tracking field.",
            "type": "string",
            "example": "field1"
          },
          "recommended_values": {
            "description": "Array of recommended values",
            "items": {
              "type": "string",
              "example": "value1"
            },
            "type": "array"
          },
          "required": {
            "description": "Tracking Field Required",
            "type": "boolean",
            "example": false
          },
          "visible": {
            "description": "Tracking Field Visible",
            "type": "boolean",
            "example": true
          }
        },
        "title": "Tracking Field",
        "type": "object"
      },
      "TrackingFieldList": {
        "type": "object",
        "description": "Tracking Field List",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "total_records": {
                "type": "integer",
                "description": "The number of all records available across pages",
                "example": 1
              },
              "tracking_fields": {
                "type": "array",
                "description": "Array of Tracking Fields",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID of Tracking Field",
                          "example": "a32CJji-weJ92"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/TrackingField"
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "User": {
        "description": "The user object represents a specific user on Zoom.",
        "properties": {
          "created_at": {
            "description": "User create time.",
            "format": "date-time",
            "type": "string",
            "example": "2018-10-31T04:32:37Z"
          },
          "dept": {
            "description": "Department.",
            "type": "string",
            "example": "Developers"
          },
          "email": {
            "description": "User's email address.",
            "type": "string",
            "example": "jchill@example.com"
          },
          "first_name": {
            "description": "User's first name.",
            "maxLength": 64,
            "type": "string",
            "example": "Jill"
          },
          "last_client_version": {
            "description": "User last login client version.",
            "type": "string",
            "example": "5.9.6.4993(mac)"
          },
          "last_login_time": {
            "description": "User last login time.",
            "format": "date-time",
            "type": "string",
            "example": "2021-05-05T20:40:30Z"
          },
          "last_name": {
            "description": "User's last name.",
            "maxLength": 64,
            "type": "string",
            "example": "Chill"
          },
          "pmi": {
            "description": "Personal meeting ID.",
            "format": "int64",
            "type": "integer",
            "example": 3542471135
          },
          "role_name": {
            "description": "User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) name.",
            "type": "string",
            "example": "Admin"
          },
          "timezone": {
            "description": "The time zone of the user.",
            "type": "string",
            "example": "Asia/Shanghai"
          },
          "type": {
            "description": "User's plan type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).",
            "enum": [
              1,
              2,
              3,
              99
            ],
            "type": "integer",
            "example": 1
          },
          "use_pmi": {
            "default": false,
            "description": "Use Personal Meeting ID for instant meetings.",
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "email",
          "type"
        ],
        "type": "object"
      },
      "UserAssistantsList": {
        "description": "List of user's assistants.",
        "properties": {
          "assistants": {
            "description": "List of User's assistants.",
            "items": {
              "properties": {
                "email": {
                  "description": "Assistant's email address.",
                  "type": "string",
                  "example": "jchill@example.com"
                },
                "id": {
                  "description": "Assistant's user ID.",
                  "type": "string",
                  "example": "KDcuGIm1QgePTO8WbOqwIQ"
                }
              },
              "type": "object"
            },
            "maximum": 30,
            "type": "array"
          }
        },
        "title": "User assistants List",
        "type": "object"
      },
      "UserPermissions": {
        "description": "",
        "properties": {
          "permissions": {
            "description": "List of user permissions.",
            "items": {
              "type": "string",
              "example": "Branding:Edit"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UserSchedulersList": {
        "description": "List of user's schedulers.",
        "properties": {
          "schedulers": {
            "description": "List of users for whom the current user can schedule meetings.",
            "items": {
              "properties": {
                "email": {
                  "description": "Email address of the scheduler.",
                  "type": "string",
                  "example": "jchill@example.com"
                },
                "id": {
                  "description": "Unique Identifier (User ID) of the Scheduler.",
                  "type": "string",
                  "example": "KDcuGIm1QgePTO8WbOqwIQ"
                },
                "pmi": {
                  "description": "PMI of the meeting host in long (int64) format.",
                  "format": "int64",
                  "type": "integer",
                  "example": 3542471135
                }
              },
              "type": "object"
            },
            "maximum": 30,
            "type": "array"
          }
        },
        "title": "User schedulers List",
        "type": "object"
      },
      "UserSettings": {
        "properties": {
          "audio_conferencing": {
            "$ref": "#/components/schemas/UserSettingsAudioConference"
          },
          "email_notification": {
            "$ref": "#/components/schemas/UserSettingsEmailNotification"
          },
          "feature": {
            "$ref": "#/components/schemas/UserSettingsFeature"
          },
          "in_meeting": {
            "$ref": "#/components/schemas/UserSettingsInMeeting"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          },
          "recording": {
            "$ref": "#/components/schemas/UserSettingsRecording"
          },
          "schedule_meeting": {
            "$ref": "#/components/schemas/UserSettingsScheduleMeeting"
          },
          "telephony": {
            "$ref": "#/components/schemas/UserSettingsTelephony"
          },
          "tsp": {
            "$ref": "#/components/schemas/UserSettingsTSP"
          }
        },
        "title": "User settings",
        "type": "object"
      },
      "UserSettingsAudioConference": {
        "description": "The user's audio conference settings.",
        "properties": {
          "toll_free_and_fee_based_toll_call": {
            "description": "The user's [**Toll-free and Fee-based Toll Call**](https://support.zoom.us/hc/en-us/articles/360060950711-Enabling-Toll-free-and-Fee-based-Toll-Call#h_01F5190TYM8736XHQX683YQYSY) settings.",
            "properties": {
              "allow_webinar_attendees_dial": {
                "description": "Whether webinar attendees can dial in through the account's **Toll-free and Fee-based Toll Call** phone numbers. This feature is only available in version 5.2.2 and higher.",
                "type": "boolean",
                "example": true
              },
              "enable": {
                "description": "Whether the user has the [**Toll-free and Fee-based Toll Call**](https://support.zoom.us/hc/en-us/articles/360060950711-Enabling-Toll-free-and-Fee-based-Toll-Call#h_01F5190TYM8736XHQX683YQYSY) setting enabled.",
                "type": "boolean",
                "example": true
              },
              "numbers": {
                "description": "The user's **Toll-free and Fee-based Toll Call** phone number information.",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The phone number's [E.164 country calling code](https://en.wikipedia.org/wiki/List_of_country_calling_codes).",
                      "type": "string",
                      "example": "86"
                    },
                    "country_code": {
                      "description": "The phone number's [country code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                      "type": "string",
                      "example": "CN"
                    },
                    "country_name": {
                      "description": "The country name.",
                      "type": "string",
                      "example": "China"
                    },
                    "display_number": {
                      "description": "The phone number's display number.",
                      "maxLength": 30,
                      "type": "string",
                      "example": "+86 777 777 77"
                    },
                    "number": {
                      "description": "The phone number.",
                      "maxLength": 30,
                      "type": "string",
                      "example": "777 777 77"
                    }
                  },
                  "type": "object"
                },
                "maxItems": 100,
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UserSettingsEmailNotification": {
        "description": "",
        "properties": {
          "alternative_host_reminder": {
            "default": false,
            "description": "When an alternative host is set or removed from a meeting.",
            "type": "boolean",
            "example": true
          },
          "cancel_meeting_reminder": {
            "default": false,
            "description": "When a meeting is cancelled.",
            "type": "boolean",
            "example": true
          },
          "cloud_recording_available_reminder": {
            "description": "Whether to notify the host when a cloud recording is available.",
            "type": "boolean",
            "example": true
          },
          "jbh_reminder": {
            "default": false,
            "description": "When attendees join meeting before host.",
            "type": "boolean",
            "example": true
          },
          "recording_available_reminder_alternative_hosts": {
            "description": "Whether to notify any alternative hosts when a cloud recording is available.",
            "type": "boolean",
            "example": true
          },
          "recording_available_reminder_schedulers": {
            "description": "Whether to notify the person who scheduled the meeting or webinar for the host when a cloud recording is available.",
            "type": "boolean",
            "example": true
          },
          "schedule_for_reminder": {
            "default": false,
            "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled.",
            "type": "boolean",
            "example": true
          }
        },
        "title": "User settings: Notification settings",
        "type": "object"
      },
      "UserSettingsFeature": {
        "description": "",
        "properties": {
          "cn_meeting": {
            "type": "boolean",
            "deprecated": true,
            "description": "Host meeting in China.",
            "example": true
          },
          "concurrent_meeting": {
            "description": "The user's assigned [Concurrent Meeting](https://support.zoom.us/hc/en-us/articles/206122046) type: \n* `Basic` \n* `Plus` \n* `None` \n\n **Note:** This feature requires a Concurrent Meeting Basic or Plus plan subscription.",
            "enum": [
              "Basic",
              "Plus",
              "None"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Concurrent Meeting Basic",
              "Concurrent Meeting Plus",
              "Concurrent Meeting disabled"
            ],
            "example": "Basic"
          },
          "in_meeting": {
            "type": "boolean",
            "deprecated": true,
            "description": "Host meeting in India.",
            "example": true
          },
          "large_meeting": {
            "description": "Large meeting feature.",
            "type": "boolean",
            "example": true
          },
          "large_meeting_capacity": {
            "description": "Large meeting capacity: can be 500 or 1000, depending on if the user has a large meeting capacity plan subscription or not.",
            "type": "integer",
            "example": 500
          },
          "meeting_capacity": {
            "description": "User's meeting capacity.",
            "type": "integer",
            "example": 500
          },
          "webinar": {
            "description": "Webinar feature.",
            "type": "boolean",
            "example": true
          },
          "webinar_capacity": {
            "description": "Webinar capacity: can be 100, 500, 1000, 3000, 5000 or 10000, depending on if the user has a webinar capacity plan subscription or not.",
            "type": "integer",
            "example": 500
          },
          "zoom_events": {
            "description": "Whether the Zoom Events feature is enabled for the user.",
            "type": "boolean",
            "example": true
          },
          "zoom_events_capacity": {
            "description": "The user's Zoom Events plan capacity: `500`, `1000`, `3000`, `5000`, `10000`, `20000`, `30000`, or `50000`.",
            "enum": [
              500,
              1000,
              3000,
              5000,
              10000,
              20000,
              30000,
              50000
            ],
            "type": "integer",
            "example": 500
          },
          "zoom_phone": {
            "description": "Zoom phone feature.",
            "type": "boolean",
            "example": true
          }
        },
        "title": "User settings: Feature settings",
        "type": "object"
      },
      "UserSettingsFeatureUpdate": {
        "description": "",
        "properties": {
          "concurrent_meeting": {
            "description": "The user's assigned [Concurrent Meeting](https://support.zoom.us/hc/en-us/articles/206122046) type: \n* `Basic` \n* `Plus` \n* `None` \n\n **Note:** This feature requires a Concurrent Meeting Basic or Plus plan subscription.",
            "enum": [
              "Basic",
              "Plus",
              "None"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Concurrent Meeting Basic",
              "Concurrent Meeting Plus",
              "Concurrent Meeting disabled"
            ],
            "example": "Plus"
          },
          "large_meeting": {
            "description": "Enable [large meeting](https://support.zoom.us/hc/en-us/articles/201362823-What-is-a-Large-Meeting-) feature for the user.",
            "type": "boolean",
            "example": true
          },
          "large_meeting_capacity": {
            "description": "Set the meeting capacity for the user if the user has **Large meeting** feature enabled. The value for the field can be either 500 or 1000.",
            "type": "integer",
            "example": 500
          },
          "meeting_capacity": {
            "description": "Set a user's meeting capacity. User's meeting capacity denotes the maximum number of participants that can join a meeting scheduled by the user.",
            "type": "integer",
            "example": 100
          },
          "webinar": {
            "description": "Enable Webinar feature for the user.",
            "type": "boolean",
            "example": true
          },
          "webinar_capacity": {
            "description": "The user's webinar capacity. This only applies to users with the [**Webinar**](https://support.zoom.us/hc/en-us/articles/200917029-Getting-started-with-webinar) feature enabled: \n* `100` \n* `500` \n* `501` \n* `1000` \n* `1001` \n* `3000` \n* `5000` \n* `10000`",
            "enum": [
              100,
              500,
              501,
              1000,
              1001,
              3000,
              5000,
              10000
            ],
            "type": "integer",
            "example": 100
          },
          "zoom_events": {
            "description": "Whether to enable the Zoom Events feature for the user.",
            "type": "boolean",
            "example": true
          },
          "zoom_events_capacity": {
            "description": "The user's Zoom Events plan capacity: `500`, `1000`, `3000`, `5000`, `10000`, `20000`, `30000`, or `50000`.",
            "enum": [
              500,
              1000,
              3000,
              5000,
              10000,
              20000,
              30000,
              50000
            ],
            "type": "integer",
            "example": 500
          },
          "zoom_phone": {
            "description": "Zoom phone feature.",
            "type": "boolean",
            "example": true
          }
        },
        "title": "User settings: Feature settings",
        "type": "object"
      },
      "UserSettingsInMeeting": {
        "description": "",
        "properties": {
          "allow_host_to_enable_focus_mode": {
            "default": null,
            "description": "Whether the host can enable [**Focus Mode**](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) when scheduling a meeting. This value defaults to `null`.",
            "type": "boolean",
            "example": true
          },
          "allow_live_streaming": {
            "description": "Whether to allow live streaming.",
            "type": "boolean",
            "example": true
          },
          "allow_participants_chat_with": {
            "description": "Whether to allow participants to only chat with certain groups:\n* `1` — The participant cannot use chat.\n* `2` — Host and co-hosts only.\n * `3` — The participant can chat with other participants publicly.\n* `4` - The participant can chat with other participants publicly and privately.\n\n**Note:** This setting is only available with client versions 5.7.3 and above.",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "No one",
              "Host and co-hosts",
              "Everyone",
              "Everyone and anyone directly"
            ],
            "example": 1
          },
          "allow_users_save_chats": {
            "description": "Whether to allow participants to save meeting chats:\n* `1` — Participants cannot save meeting chats.\n* `2` — Participants can only save host and co-host meeting chats.\n* `3` — Participants can save all meeting chats.",
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Not allow",
              "Host and co-hosts",
              "Everyone"
            ],
            "example": 1
          },
          "annotation": {
            "default": false,
            "description": "Allow participants to use annotation tools.",
            "type": "boolean",
            "example": true
          },
          "attendee_on_hold": {
            "deprecated": true,
            "default": false,
            "description": "Allow host to put attendee on hold.\n\n**This field has been deprecated and is no longer supported.**",
            "type": "boolean",
            "example": true
          },
          "attention_mode_focus_mode": {
            "default": false,
            "description": "Whether the [**Focus Mode**](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) feature is enabled. When enabled, this feature only displays the host and co-hosts' video and profile pictures during a meeting. \n\n This value defaults to `false`.",
            "type": "boolean",
            "example": true
          },
          "auto_saving_chat": {
            "default": false,
            "description": "Auto save all in-meeting chats.",
            "type": "boolean",
            "example": true
          },
          "breakout_room": {
            "default": false,
            "description": "Allow host to split meeting participants into separate breakout rooms.",
            "type": "boolean",
            "example": true
          },
          "breakout_room_schedule": {
            "description": "Whether the host can assign participants to breakout rooms when scheduling. This feature is only available in version 4.5.0 or higher.",
            "type": "boolean",
            "example": true
          },
          "chat": {
            "default": false,
            "description": "Enable chat during meeting for all participants.",
            "type": "boolean",
            "example": true
          },
          "closed_caption": {
            "default": false,
            "description": "Enable closed captions.",
            "type": "boolean",
            "example": true
          },
          "closed_captioning": {
            "description": "Information about the user's closed captioning settings.",
            "properties": {
              "auto_transcribing": {
                "description": "Whether to allow a live transcription service to transcribe meetings.",
                "type": "boolean",
                "example": true
              },
              "enable": {
                "description": "Whether to allow the host to type closed captions or assign a participant or 3rd-party service to provide closed captioning.",
                "type": "boolean",
                "example": true
              },
              "save_caption": {
                "description": "Whether to allow participants to save closed captions or transcripts.",
                "type": "boolean",
                "example": true
              },
              "third_party_captioning_service": {
                "description": "Whether to allow the use of an API token to integrate with 3rd-party closed captioning services.",
                "type": "boolean",
                "example": true
              },
              "view_full_transcript": {
                "description": "Whether to allow the viewing of full transcripts in the in-meeting side panel.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "co_host": {
            "default": false,
            "description": "Allow the host to add co-hosts.",
            "type": "boolean",
            "example": true
          },
          "custom_data_center_regions": {
            "description": "If set to `true`, you can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting your real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.",
            "type": "boolean",
            "example": true
          },
          "custom_live_streaming_service": {
            "description": "Whether to allow custom live streaming.",
            "type": "boolean",
            "example": true
          },
          "custom_service_instructions": {
            "description": "The custom live streaming service instructions.",
            "type": "string",
            "example": "The custom live streaming service instructions"
          },
          "data_center_regions": {
            "type": "array",
            "description": "If the value of `custom_data_center_regions` is `true`, a comma-separated list of the following [data center regions](https://support.zoom.us/hc/en-us/articles/360059254691-Datacenter-abbreviation-list) to opt in to: \n* `AU` — Australia.\n* `LA` — Latin America. \n* `CA` — Canada. \n* `CN` — China. \n* `DE` — Germany. \n* `HK` — Hong Kong SAR. \n* `IN` — India. \n* `IE` — Ireland. \n* `TY` — Japan. \n* `MX` — Mexico. \n* `NL` — Netherlands. \n* `SG` — Singapore. \n* `US` — United States.",
            "items": {
              "type": "string",
              "enum": [
                "AU",
                "LA",
                "CA",
                "CN",
                "DE",
                "HK",
                "IN",
                "IE",
                "TY",
                "MX",
                "NL",
                "SG",
                "US"
              ],
              "example": "AU"
            }
          },
          "disable_screen_sharing_for_host_meetings": {
            "description": "Whether to enable the **Disable desktop screen sharing for meetings you host** setting.",
            "type": "boolean",
            "example": true
          },
          "disable_screen_sharing_for_in_meeting_guests": {
            "description": "Whether to enable the **Disable screen sharing when guests are in the meeting** setting.",
            "type": "boolean",
            "example": true
          },
          "e2e_encryption": {
            "description": "Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).",
            "type": "boolean",
            "example": true
          },
          "entry_exit_chime": {
            "default": "all",
            "description": "Play sound when participants join or leave:<br>`host` - When host joins or leaves.<br>`all` - When any participant joins or leaves.<br>`none` - No join or leave sound.",
            "enum": [
              "host",
              "all",
              "none"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "when host joins/leaves",
              "when any participant joins/leaves",
              "no join/leave sound"
            ],
            "example": "all"
          },
          "far_end_camera_control": {
            "default": false,
            "description": "Allow another user to take control of the camera.",
            "type": "boolean",
            "example": true
          },
          "feedback": {
            "default": false,
            "description": "Enable option to send feedback to Zoom at the end of the meeting.",
            "type": "boolean",
            "example": true
          },
          "file_transfer": {
            "description": "Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the user or not.",
            "type": "boolean",
            "example": true
          },
          "group_hd": {
            "default": false,
            "description": "Enable group HD video.",
            "type": "boolean",
            "example": true
          },
          "join_from_desktop": {
            "description": "Whether to allow participants to join a meeting directly from their desktop browser. Note that the meeting experience from the desktop browser is limited.",
            "type": "boolean",
            "example": true
          },
          "join_from_mobile": {
            "description": "Whether to allow participants to join a meeting directly from their mobile browser. Note that the meeting experience from the mobile browser is limited.",
            "type": "boolean",
            "example": true
          },
          "language_interpretation": {
            "description": "Information about the [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Using-Language-Interpretation-in-your-meeting-or-webinar) settings.",
            "properties": {
              "custom_languages": {
                "default": null,
                "description": "A list of user-defined supported languages.",
                "items": {
                  "type": "string",
                  "example": "English"
                },
                "type": "array"
              },
              "enable": {
                "description": "Whether to allow hosts to assign participants as interpreters who can interpret one language into another in real-time.",
                "type": "boolean",
                "example": true
              },
              "languages": {
                "description": "A list of system-supported languages.",
                "items": {
                  "enum": [
                    "English",
                    "Chinese",
                    "Japanese",
                    "German",
                    "French",
                    "Russian",
                    "Portuguese",
                    "Spanish",
                    "Korean"
                  ],
                  "type": "string",
                  "example": "English"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "live_streaming_facebook": {
            "description": "Whether to allow Facebook live streaming.",
            "type": "boolean",
            "example": true
          },
          "live_streaming_youtube": {
            "description": "Whether to allow YouTube live streaming.",
            "type": "boolean",
            "example": true
          },
          "manual_captioning": {
            "description": "Information about manual captioning settings.",
            "properties": {
              "allow_to_type": {
                "description": "Whether to allow the host to manually caption or let the host assign a participant to provide manual captioning.",
                "type": "boolean",
                "example": true
              },
              "auto_generated_captions": {
                "description": "Whether to enable Zoom's [live transcription feature](https://support.zoom.us/hc/en-us/articles/207279736-Managing-closed-captioning-and-live-transcription#h_01FHGGHYJ4457H4GSZY0KM3NSB).",
                "type": "boolean",
                "example": true
              },
              "full_transcript": {
                "description": "Whether to enable the viewing of full transcripts in the in-meeting side panel.",
                "type": "boolean",
                "example": true
              },
              "manual_captions": {
                "description": "Whether to [enable manual closed captioning](https://support.zoom.us/hc/en-us/articles/207279736-Managing-closed-captioning-and-live-transcription).",
                "type": "boolean",
                "example": true
              },
              "save_captions": {
                "description": "Whether to allow participants to [save closed captions or transcripts](https://support.zoom.us/hc/en-us/articles/360060958752). \n\n **Note:** If the `full_transcript` field is set to `false`, participants **cannot** save captions.",
                "type": "boolean",
                "example": true
              },
              "third_party_captioning_service": {
                "description": "Whether to allow the use of an API token to integrate with a [3rd-party device](https://support.zoom.us/hc/en-us/articles/115002212983) to provide closed captioning.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "meeting_reactions": {
            "description": "Whether meeting participants can [communicate using the emoji reactions](https://support.zoom.us/hc/en-us/articles/115001286183-Nonverbal-feedback-and-meeting-reactions) located in the **Reactions** menu in the meeting toolbar.",
            "type": "boolean",
            "example": true
          },
          "meeting_survey": {
            "description": "Whether to allow the host to present a survey to participants once a meeting has ended. This feature is only available in version 5.7.3 or higher.",
            "type": "boolean",
            "example": true
          },
          "non_verbal_feedback": {
            "default": false,
            "description": "Enable non-verbal feedback through screens.",
            "type": "boolean",
            "example": true
          },
          "polling": {
            "default": false,
            "description": "Add polls to the meeting controls.",
            "type": "boolean",
            "example": true
          },
          "private_chat": {
            "default": false,
            "description": "Enable 1:1 private chat between participants during meetings.",
            "type": "boolean",
            "example": true
          },
          "record_play_voice": {
            "description": "Record and play their own voice.",
            "type": "boolean",
            "example": true
          },
          "remote_control": {
            "default": false,
            "description": "Enable remote control during screensharing.",
            "type": "boolean",
            "example": true
          },
          "remote_support": {
            "default": false,
            "description": "Allow host to provide 1:1 remote support to a participant.",
            "type": "boolean",
            "example": true
          },
          "request_permission_to_unmute": {
            "description": "Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the user or not.",
            "type": "boolean",
            "example": true
          },
          "screen_sharing": {
            "description": "Allow host and participants to share their screen or content during meetings\n",
            "type": "boolean",
            "example": true
          },
          "share_dual_camera": {
            "deprecated": true,
            "default": false,
            "description": "Share dual camera.",
            "type": "boolean",
            "example": true
          },
          "show_a_join_from_your_browser_link": {
            "description": "Whether to allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is useful for participants who cannot download, install, or run applications. Note that the meeting experience from the browser is limited.",
            "type": "boolean",
            "example": true
          },
          "show_meeting_control_toolbar": {
            "description": "Always show meeting controls during a meeting.",
            "type": "boolean",
            "example": true
          },
          "slide_control": {
            "description": "Whether the person sharing during a presentation can allow others to control the slide presentation. This feature is only available in version 5.8.3 or higher.",
            "type": "boolean",
            "example": true
          },
          "unchecked_data_center_regions": {
            "description": "If the value of `custom_data_center_regions` is `true`, a comma-separated list of the following [data center regions](https://support.zoom.us/hc/en-us/articles/360059254691-Datacenter-abbreviation-list) to **not** opt in to: \n* `EU` — Europe. \n* `HK` — Hong Kong. \n* `AU` — Australia. \n* `IN` — India. \n* `LA` — Latin America. \n* `TY` — Tokyo. \n* `CN` — China. \n* `US` — United States. \n* `CA` — Canada.",
            "items": {
              "enum": [
                "EU",
                "HK",
                "AU",
                "IN",
                "TY",
                "CN",
                "US",
                "CA",
                "DE",
                "NL",
                "LA"
              ],
              "type": "string",
              "example": "US"
            },
            "type": "array"
          },
          "virtual_background": {
            "default": false,
            "description": "Enable virtual background.",
            "type": "boolean",
            "example": true
          },
          "virtual_background_settings": {
            "description": "Settings to manage virtual background.",
            "properties": {
              "allow_upload_custom": {
                "description": "Allow user to upload custom backgrounds.",
                "type": "boolean",
                "example": true
              },
              "allow_videos": {
                "description": "Allow use of videos for virtual backgrounds.",
                "type": "boolean",
                "example": true
              },
              "enable": {
                "description": "Enable virtual background.",
                "type": "boolean",
                "example": true
              },
              "files": {
                "items": {
                  "properties": {
                    "id": {
                      "description": "Unique identifier of the file.",
                      "type": "string",
                      "example": "sdv34sa0jp-h80y98GBU"
                    },
                    "is_default": {
                      "description": "Indicates whether or not this file is the default virtual background file.",
                      "type": "boolean",
                      "example": true
                    },
                    "name": {
                      "description": "File name.",
                      "type": "string",
                      "example": "example.png"
                    },
                    "size": {
                      "description": "File size.",
                      "type": "integer",
                      "example": 1342
                    },
                    "type": {
                      "description": "File type.",
                      "type": "string",
                      "example": "image"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "waiting_room": {
            "default": false,
            "description": "Enable Waiting room - if enabled, attendees can only join after host approves.",
            "type": "boolean",
            "example": true
          },
          "webinar_chat": {
            "properties": {
              "allow_attendees_chat_with": {
                "description": "Allow webinar attendees to chat with:\n* `1` — No one.\n* `2` — Host and all panelists.\n* `3` — Everyone.",
                "enum": [
                  1,
                  2,
                  3
                ],
                "type": "integer",
                "example": 2
              },
              "allow_auto_save_local_chat_file": {
                "description": "Whether to automatically save chat messages to a local file on the host's computer when the webinar ends.",
                "type": "boolean",
                "example": true
              },
              "allow_panelists_chat_with": {
                "description": "Whether to allow webinar panelists to chat with:\n* `1` — Host and all panelists.\n* `2` — Everyone.",
                "enum": [
                  1,
                  2
                ],
                "type": "integer",
                "example": 2
              },
              "allow_panelists_send_direct_message": {
                "description": "Whether to allow webinar panelists to send direct messages to other panelists.",
                "type": "boolean",
                "example": true
              },
              "allow_users_save_chats": {
                "description": "Whether to allow webinar attendees to save chats:\n* `0` — Attendees cannot save chats.\n* `1` — Attendees can only save host and panelist chats.\n* `2` — Attendees can save all chats.",
                "enum": [
                  0,
                  1,
                  2
                ],
                "type": "integer",
                "example": 1
              },
              "default_attendees_chat_with": {
                "description": "By default, allow webinar attendees to chat with:\n* `1` — Host and all panelists.\n* `2` — Everyone.",
                "enum": [
                  1,
                  2
                ],
                "type": "integer",
                "example": 1
              },
              "enable": {
                "description": "Whether to allow webinar participants to send chat messages.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "webinar_live_streaming": {
            "properties": {
              "custom_service_instructions": {
                "description": "The specific instructions to allow your account's meeting hosts to configure a custom live stream.",
                "type": "string",
                "example": "The specific instructions"
              },
              "enable": {
                "description": "Whether webinar live streaming is enabled.",
                "type": "boolean",
                "example": true
              },
              "live_streaming_reminder": {
                "description": "Whether to notify users to watch the live stream. This does not apply to custom RTMP (real-time messaging protocol).",
                "type": "boolean",
                "example": true
              },
              "live_streaming_service": {
                "description": "The available live streaming services:\n* `facebook`\n* `workplace_by_facebook`\n* `youtube`\n* `custom_live_streaming_service`",
                "items": {
                  "enum": [
                    "facebook",
                    "workplace_by_facebook",
                    "youtube",
                    "custom_live_streaming_service"
                  ],
                  "type": "string",
                  "x-enum-descriptions": [
                    "Facebook",
                    "Workplace by Facebook",
                    "YouTube",
                    "Custom Live Streaming Service"
                  ],
                  "example": "workplace_by_facebook"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "webinar_polling": {
            "description": "Information about the user's webinar polling settings.",
            "properties": {
              "advanced_polls": {
                "description": "Whether to allow host to create advanced polls and quizzes. Advanced polls and quizzes include single choice, multiple choice, drop down, matching, short answer, long answer, rank order, and fill-in-the-blank questions. Hosts can also set the correct answers for quizzes they create.",
                "type": "boolean",
                "example": true
              },
              "enable": {
                "description": "Whether to allow the host to add polls before or during a webinar.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "webinar_survey": {
            "description": "Whether to allow the host to present surveys to attendees once a webinar has ended.",
            "type": "boolean",
            "example": true
          },
          "who_can_share_screen": {
            "description": "Indicates who can share their screen or content during meetings. The value can be one of the following: <br>\n`host`: Only host can share the screen.<br>\n`all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.\n",
            "enum": [
              "host",
              "all"
            ],
            "type": "string",
            "example": "all"
          },
          "who_can_share_screen_when_someone_is_sharing": {
            "description": "Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>\n`host`: Only a host can share the screen when someone else is sharing.<br>\n`all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.\n",
            "enum": [
              "host",
              "all"
            ],
            "type": "string",
            "example": "host"
          },
          "workplace_by_facebook": {
            "description": "Whether to allow Workplace by Facebook live streaming.",
            "type": "boolean",
            "example": true
          }
        },
        "title": "User settings: Meeting settings",
        "type": "object"
      },
      "UserSettingsRecording": {
        "description": "",
        "properties": {
          "ask_host_to_confirm_disclaimer": {
            "description": "Ask host to confirm the disclaimer.",
            "type": "boolean",
            "example": true
          },
          "ask_participants_to_consent_disclaimer": {
            "description": "This field can be used if `recording_disclaimer` is set to true. This field indicates whether or not you would like to ask participants for consent when a recording starts. The value can be one of the following:<br>\n* `true`: Ask participants for consent when a recording starts. <br>\n* `false`: Do not ask participants for consent when a recording starts.",
            "type": "boolean",
            "example": true
          },
          "auto_delete_cmr": {
            "default": false,
            "description": "Auto delete cloud recordings.",
            "type": "boolean",
            "example": true
          },
          "auto_delete_cmr_days": {
            "description": "When the `auto_delete_cmr` value is `true`, this value is the number of days before the auto-deletion of cloud recordings: \n* `30` — 30 days. \n* `60` — 60 days. \n* `90` — 90 days. \n* `120` — 120 days.",
            "enum": [
              30,
              60,
              90,
              120
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "30 days.",
              "60 days.",
              "90 days.",
              "120 days."
            ],
            "example": 90
          },
          "record_files_separately": {
            "type": "object",
            "description": "The account's [**Record active speaker, gallery view and shared screen separately**](https://support.zoom.us/hc/en-us/articles/360060316092-Changing-basic-and-advanced-cloud-recording-settings#h_01F4CYJTCTXNS2MXH00W9EFG6R) settings.",
            "properties": {
              "active_speaker": {
                "type": "boolean",
                "description": "Whether to record the active speaker only.",
                "example": true
              },
              "gallery_view": {
                "type": "boolean",
                "description": "Whether to record the gallery view only.",
                "example": true
              },
              "shared_screen": {
                "type": "boolean",
                "description": "Whether to record the shared screen only.",
                "example": true
              }
            }
          },
          "display_participant_name": {
            "type": "boolean",
            "description": "Whether to display participants' names in the recording.",
            "example": true
          },
          "recording_thumbnails": {
            "type": "boolean",
            "description": "Whether to record thumbnails of the presenter when they are sharing their screen.",
            "example": true
          },
          "optimize_recording_for_3rd_party_video_editor": {
            "type": "boolean",
            "description": "Whether to optimize recordings for a 3rd party video editor. This may increase the file size and the time it takes to generate recording files.",
            "example": true
          },
          "recording_highlight": {
            "type": "boolean",
            "description": "Whether to enable the [recording highlights](https://support.zoom.us/hc/en-us/articles/360060802432) feature.",
            "example": true
          },
          "save_panelist_chat": {
            "type": "boolean",
            "description": "Whether to save panelist chat to the recording. This setting saves messages sent by panelists during a webinar to either all panelists or all panelists and attendees to the recording.",
            "example": true
          },
          "save_poll_results": {
            "type": "boolean",
            "description": "Whether to save poll results shared during the meeting or webinar. This also includes poll results shared during the meeting or webinar.",
            "example": true
          },
          "save_close_caption": {
            "type": "boolean",
            "description": "Whether to save [closed captions](https://support.zoom.us/hc/en-us/articles/207279736) as a VTT (Video Track Text) file.",
            "example": true
          },
          "auto_recording": {
            "default": "local",
            "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` - Record on cloud.<br>`none` - Disabled.",
            "enum": [
              "local",
              "cloud",
              "none"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Record on local",
              "Record on cloud",
              "Disabled"
            ],
            "example": "cloud"
          },
          "cloud_recording": {
            "default": false,
            "description": "Cloud recording.",
            "type": "boolean",
            "example": true
          },
          "host_pause_stop_recording": {
            "default": false,
            "description": "Host can pause/stop the auto recording in the cloud.",
            "type": "boolean",
            "example": true
          },
          "ip_address_access_control": {
            "description": "Setting to allow cloud recording access only from specific IP address ranges.\n",
            "properties": {
              "enable": {
                "description": "If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.\n\n",
                "type": "boolean",
                "example": true
              },
              "ip_addresses_or_ranges": {
                "description": "IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.\n\nExample: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`\n\n",
                "type": "string",
                "example": ""
              }
            },
            "type": "object"
          },
          "local_recording": {
            "description": "Local recording.",
            "type": "boolean",
            "example": true
          },
          "record_audio_file": {
            "default": false,
            "description": "Whether to record one audio file for all participants.",
            "type": "boolean",
            "example": true
          },
          "record_gallery_view": {
            "default": false,
            "description": "Record the gallery view.",
            "type": "boolean",
            "example": true
          },
          "record_speaker_view": {
            "default": false,
            "description": "Record the active speaker view.",
            "type": "boolean",
            "example": true
          },
          "recording_audio_transcript": {
            "description": "Audio transcript.",
            "type": "boolean",
            "example": true
          },
          "recording_disclaimer": {
            "description": "Show a disclaimer to participants before a recording starts\n",
            "type": "boolean",
            "example": true
          },
          "recording_password_requirement": {
            "description": "This object represents the minimum passcode requirements set for recordings via Account Recording Settings.",
            "properties": {
              "have_letter": {
                "description": "Indicates whether or not passcode must contain at least one alphabetical letter (a, b, c..).",
                "type": "boolean",
                "example": true
              },
              "have_number": {
                "description": "Indicates whether or not passcode must contain at least one number(1, 2, 3..).",
                "type": "boolean",
                "example": true
              },
              "have_special_character": {
                "description": "Indicates whether or not passcode must contain at least one special character(!, @, #..).",
                "type": "boolean",
                "example": true
              },
              "length": {
                "description": "Minimum required length for the passcode.",
                "maximum": 10,
                "type": "integer",
                "example": 10
              },
              "only_allow_numeric": {
                "description": "Indicates whether or not passcode must contain only numeric characters.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "save_chat_text": {
            "default": false,
            "description": "Save chat text from the meeting.",
            "type": "boolean",
            "example": true
          },
          "show_timestamp": {
            "default": false,
            "description": "Show timestamp on video.",
            "type": "boolean",
            "example": true
          }
        },
        "title": "User settings: Recording settings",
        "type": "object"
      },
      "UserSettingsScheduleMeeting": {
        "description": "",
        "properties": {
          "audio_type": {
            "default": "voip",
            "description": "Determine how participants can join the audio portion of the meeting:<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - Third party audio conference.",
            "enum": [
              "both",
              "telephony",
              "voip",
              "thirdParty"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Telephony and VoIP",
              "Audio PSTN telephony only",
              "VoIP only",
              "3rd party audio conference"
            ],
            "example": "telephony"
          },
          "default_password_for_scheduled_meetings": {
            "description": "Passcode for already scheduled meetings\n",
            "type": "string",
            "example": "1213434"
          },
          "embed_password_in_join_link": {
            "description": "If the value is set to `true`, the meeting passcode will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the passcode.\n ",
            "type": "boolean",
            "example": true
          },
          "force_pmi_jbh_password": {
            "description": "Require a passcode for personal meetings if attendees can join before host.",
            "type": "boolean",
            "example": true
          },
          "host_video": {
            "description": "Start meetings with host video on.",
            "type": "boolean",
            "example": true
          },
          "join_before_host": {
            "description": "Join the meeting before host arrives.",
            "type": "boolean",
            "example": true
          },
          "meeting_password_requirement": {
            "description": "Account wide meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).",
            "properties": {
              "consecutive_characters_length": {
                "enum": [
                  0,
                  4,
                  5,
                  6,
                  7,
                  8
                ],
                "type": "integer",
                "example": 8
              },
              "have_letter": {
                "description": "If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).\n",
                "type": "boolean",
                "example": true
              },
              "have_number": {
                "description": "If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).",
                "type": "boolean",
                "example": true
              },
              "have_special_character": {
                "description": "If set to `true`, the passcode must have at least 1 special character (!,@,#...).",
                "type": "boolean",
                "example": true
              },
              "have_upper_and_lower_characters": {
                "description": "If set to `true`, the passcode must include both uppercase and lowercase characters.",
                "type": "boolean",
                "example": true
              },
              "length": {
                "description": "The minimum length that the meeting/webinar passcode needs to have.",
                "type": "integer",
                "example": 10
              },
              "only_allow_numeric": {
                "description": "If set to `true`, the passcode must only contain numbers and no other characters.",
                "type": "boolean",
                "example": true
              },
              "weak_enhance_detection": {
                "description": "If set to `true`, users will be informed if the provided passcode is weak.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "participants_video": {
            "description": "Start meetings with participants video on.",
            "type": "boolean",
            "example": true
          },
          "personal_meeting": {
            "description": "Personal Meeting Setting.<br><br>\n`true`: Indicates that the **\"Enable Personal Meeting ID\"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>\n`false`: Indicates that the **\"Enable Personal Meeting ID\"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.\nFor Zoom Phone only:If a user has been assigned a desk phone, **\"Elevate to Zoom Meeting\"** on desk phone will be disabled.\n\n\n",
            "type": "boolean",
            "example": true
          },
          "pmi_password": {
            "description": "PMI passcode\n",
            "type": "string",
            "example": "113332424"
          },
          "pstn_password_protected": {
            "description": "Generate and require passcode for participants joining by phone.",
            "type": "boolean",
            "example": true
          },
          "require_password_for_instant_meetings": {
            "description": "Require a passcode for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
            "type": "boolean",
            "example": true
          },
          "require_password_for_pmi_meetings": {
            "description": "Require a passcode for Personal Meeting ID (PMI). This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
            "enum": [
              "jbh_only",
              "all",
              "none"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Only meetings with Join Before Host enabled",
              "All meetings using PMI",
              "Disabled"
            ],
            "example": "jbh_only"
          },
          "require_password_for_scheduled_meetings": {
            "description": "Require a passcode for meetings which have already been scheduled\n",
            "type": "boolean",
            "example": true
          },
          "require_password_for_scheduling_new_meetings": {
            "description": "Require a passcode when scheduling new meetings.This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
            "type": "boolean",
            "example": true
          },
          "use_pmi_for_instant_meetings": {
            "description": "Use Personal Meeting ID (PMI) when starting an instant meeting\n",
            "type": "boolean",
            "example": true
          },
          "use_pmi_for_scheduled_meetings": {
            "description": "Use Personal Meeting ID (PMI) when scheduling a meeting\n",
            "type": "boolean",
            "example": true
          }
        },
        "title": "User settings: Meeting settings",
        "type": "object"
      },
      "UserSettingsTSP": {
        "description": "Account Settings: TSP.",
        "properties": {
          "call_out": {
            "description": "Call Out",
            "type": "boolean",
            "example": true
          },
          "call_out_countries": {
            "description": "Call Out Countries/Regions",
            "items": {},
            "type": "array"
          },
          "show_international_numbers_link": {
            "description": "Show international numbers link on the invitation email",
            "type": "boolean",
            "example": true
          }
        },
        "title": "User settings: TSP settings",
        "type": "object"
      },
      "UserSettingsTelephony": {
        "properties": {
          "audio_conference_info": {
            "default": "",
            "description": "Third party audio conference info.",
            "maxLength": 2048,
            "type": "string",
            "example": ""
          },
          "show_international_numbers_link": {
            "description": "Show the international numbers link on the invitation email.",
            "type": "boolean",
            "example": true
          },
          "telephony_regions": {
            "description": "Indicates where most of the participants call into or call from during a meeting.",
            "properties": {
              "allowed_values": {
                "description": "Telephony region options provided by Zoom to select from.",
                "items": {
                  "type": "string",
                  "example": "CNTB"
                },
                "type": "array"
              },
              "selection_values": {
                "description": "The account's selected telephony regions that indicate where most participants call into or call from during a meeting.",
                "type": "string",
                "example": "USTB"
              }
            },
            "type": "object"
          },
          "third_party_audio": {
            "description": "Third party audio conference.",
            "type": "boolean",
            "example": true
          }
        },
        "title": "User settings: Meeting settings",
        "type": "object"
      },
      "UserSettingsUpdate": {
        "properties": {
          "email_notification": {
            "$ref": "#/components/schemas/UserSettingsEmailNotification"
          },
          "feature": {
            "$ref": "#/components/schemas/UserSettingsFeatureUpdate"
          },
          "in_meeting": {
            "properties": {
              "allow_host_to_enable_focus_mode": {
                "default": null,
                "description": "Whether the host can enable [**Focus Mode**](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) when scheduling a meeting. This value defaults to `null`.",
                "type": "boolean",
                "example": true
              },
              "allow_live_streaming": {
                "description": "Whether to allow livestreaming.",
                "type": "boolean",
                "example": true
              },
              "allow_participants_chat_with": {
                "description": "Whether to allow participants to only chat with certain groups: \n* `1` — The participant cannot use chat. \n* `2` — Host and co-hosts only. \n * `3` — The participant can chat with other participants publicly. \n* `4` - The participant can chat with other participants publicly and privately. \n\n **Note:** This setting is only available with client versions 5.7.3 and above.",
                "enum": [
                  1,
                  2,
                  3,
                  4
                ],
                "type": "integer",
                "example": 4
              },
              "allow_users_save_chats": {
                "description": "Whether to allow participants to save meeting chats: \n* `1` — Participants cannot save meeting chats. \n* `2` — Participants can only save host and co-host meeting chats. \n* `3` — Participants can save all meeting chats.",
                "enum": [
                  1,
                  2,
                  3
                ],
                "type": "integer",
                "example": 3
              },
              "annotation": {
                "default": false,
                "description": "Whether to allow meeting participants to use the [annotation tools](https://support.zoom.us/hc/en-us/articles/115005706806).  This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "attendee_on_hold": {
                "default": false,
                "description": "Whether to allow the host to put an attendee on hold. This value defaults to `false`. **This field has been deprecated and is no longer supported.**",
                "type": "boolean",
                "example": true
              },
              "attention_mode_focus_mode": {
                "default": false,
                "description": "Whether the [**Focus Mode**](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) feature is enabled. When enabled, this feature only displays the host and co-hosts' video and profile pictures during a meeting. \n\n This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "auto_saving_chat": {
                "default": false,
                "description": "Whether to automatically save all in-meeting chats. This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "breakout_room": {
                "default": false,
                "description": "Whether to allow the meeting host to split meeting participants into separate breakout rooms.",
                "type": "boolean",
                "example": true
              },
              "breakout_room_schedule": {
                "description": "Whether the host can assign participants to breakout rooms when scheduling. This feature is **only** available in version 4.5.0 or higher.",
                "type": "boolean",
                "example": true
              },
              "chat": {
                "default": false,
                "description": "Whether to enable chat during meeting for all participants. This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "closed_caption": {
                "default": false,
                "description": "Whether to enable closed captions. This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "closed_captioning": {
                "description": "Information about the user's closed captioning settings.",
                "properties": {
                  "auto_transcribing": {
                    "description": "Whether to allow a live transcription service to transcribe meetings.",
                    "type": "boolean",
                    "example": true
                  },
                  "enable": {
                    "description": "Whether to allow the host to type closed captions or assign a participant or 3rd-party service to provide closed captioning.",
                    "type": "boolean",
                    "example": true
                  },
                  "save_caption": {
                    "description": "Whether to allow participants to save closed captions or transcripts.",
                    "type": "boolean",
                    "example": true
                  },
                  "third_party_captioning_service": {
                    "description": "Whether to allow the use of an API token to integrate with 3rd-party closed captioning services.",
                    "type": "boolean",
                    "example": true
                  },
                  "view_full_transcript": {
                    "description": "Whether to allow the viewing of full transcripts in the in-meeting side panel.",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              },
              "co_host": {
                "default": false,
                "description": "Whether to allow the host to add co-hosts. This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "custom_data_center_regions": {
                "description": "Whether to use custom [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-meetings-webinars): \n* `true` — Users can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting real-time meeting traffic. The data center regions can be provided in the `data_center_regions` field. \n* `false` — Only use the default data center regions.",
                "type": "boolean",
                "example": true
              },
              "custom_live_streaming_service": {
                "description": "Whether to allow custom livestreaming.",
                "type": "boolean",
                "example": true
              },
              "custom_service_instructions": {
                "description": "The custom livestreaming service instructions.",
                "type": "string",
                "example": ""
              },
              "data_center_regions": {
                "type": "array",
                "description": "If the value of `custom_data_center_regions` is `true`, a comma-separated list of the following [data center regions](https://support.zoom.us/hc/en-us/articles/360059254691-Datacenter-abbreviation-list) to opt in to: \n* `AU` — Australia.\n* `LA` — Latin America. \n* `CA` — Canada. \n* `CN` — China. \n* `DE` — Germany. \n* `HK` — Hong Kong SAR. \n* `IN` — India. \n* `IE` — Ireland. \n* `TY` — Japan. \n* `MX` — Mexico. \n* `NL` — Netherlands. \n* `SG` — Singapore. \n* `US` — United States.",
                "items": {
                  "type": "string",
                  "enum": [
                    "AU",
                    "LA",
                    "CA",
                    "CN",
                    "DE",
                    "HK",
                    "IN",
                    "IE",
                    "TY",
                    "MX",
                    "NL",
                    "SG",
                    "US"
                  ],
                  "example": "US"
                }
              },
              "disable_screen_sharing_for_host_meetings": {
                "description": "Whether to enable the **Disable desktop screen sharing for meetings you host** setting.",
                "type": "boolean",
                "example": true
              },
              "disable_screen_sharing_for_in_meeting_guests": {
                "description": "Whether to enable the **Disable screen sharing when guests are in the meeting** setting.",
                "type": "boolean",
                "example": true
              },
              "e2e_encryption": {
                "description": "Whether to require [AES encryption](https://en.wikipedia.org/wiki/Advanced_Encryption_Standard) for meetings.",
                "type": "boolean",
                "example": true
              },
              "entry_exit_chime": {
                "default": "all",
                "description": "When to play the meeting entry/exit sound notification: \n* `host` — Only when the host joins or leaves. \n* `all` — When any participant joins or leaves. \n* `none` - Disable the entry/exit sound notification. \n\nThis value defaults to `all`.",
                "enum": [
                  "host",
                  "all",
                  "none"
                ],
                "type": "string",
                "example": "all"
              },
              "far_end_camera_control": {
                "default": false,
                "description": "Whether to allow another user to take control of the user's camera. This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "feedback": {
                "default": false,
                "description": "Whether to enable the [**Feedback to Zoom**](https://support.zoom.us/hc/en-us/articles/115005838023-Feedback-to-Zoom) setting. This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "file_transfer": {
                "description": "Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the user or not.",
                "type": "boolean",
                "example": true
              },
              "group_hd": {
                "default": false,
                "description": "Whether to enable group HD video. This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "join_from_desktop": {
                "description": "Whether to allow participants to join a meeting directly from their desktop browser. Note that the meeting experience from the desktop browser is limited.",
                "type": "boolean",
                "example": true
              },
              "join_from_mobile": {
                "description": "Whether to allow participants to join a meeting directly from their mobile browser. Note that the meeting experience from the mobile browser is limited.",
                "type": "boolean",
                "example": true
              },
              "language_interpretation": {
                "description": "Information about the [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Using-Language-Interpretation-in-your-meeting-or-webinar) settings.",
                "properties": {
                  "custom_languages": {
                    "default": null,
                    "description": "A list of user-defined supported languages.",
                    "items": {
                      "type": "string",
                      "example": "English"
                    },
                    "type": "array"
                  },
                  "enable": {
                    "description": "Whether to allow hosts to assign participants as interpreters who can interpret one language into another in real-time.",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              },
              "live_streaming_facebook": {
                "description": "Whether to allow Facebook livestreaming.",
                "type": "boolean",
                "example": true
              },
              "live_streaming_youtube": {
                "description": "Whether to allow YouTube livestreaming.",
                "type": "boolean",
                "example": true
              },
              "manual_captioning": {
                "description": "Information about manual captioning settings.",
                "properties": {
                  "allow_to_type": {
                    "description": "Whether to allow the host to manually caption or let the host assign a participant to provide manual captioning.",
                    "type": "boolean",
                    "example": true
                  },
                  "auto_generated_captions": {
                    "description": "Whether to enable Zoom's [live transcription feature](https://support.zoom.us/hc/en-us/articles/207279736-Managing-closed-captioning-and-live-transcription#h_01FHGGHYJ4457H4GSZY0KM3NSB).",
                    "type": "boolean",
                    "example": true
                  },
                  "full_transcript": {
                    "description": "Whether to enable the viewing of full transcripts in the in-meeting side panel.",
                    "type": "boolean",
                    "example": true
                  },
                  "manual_captions": {
                    "description": "Whether to [enable manual closed captioning](https://support.zoom.us/hc/en-us/articles/207279736-Managing-closed-captioning-and-live-transcription).",
                    "type": "boolean",
                    "example": true
                  },
                  "save_captions": {
                    "description": "Whether to allow participants to [save closed captions or transcripts](https://support.zoom.us/hc/en-us/articles/360060958752). \n\n **Note:** If the `full_transcript` field is set to `false`, participants **cannot** save captions.",
                    "type": "boolean",
                    "example": true
                  },
                  "third_party_captioning_service": {
                    "description": "Whether to allow the use of an API token to integrate with a [3rd-party device](https://support.zoom.us/hc/en-us/articles/115002212983) to provide closed captioning.",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              },
              "meeting_reactions": {
                "description": "Whether meeting participants can [communicate using the emoji reactions](https://support.zoom.us/hc/en-us/articles/115001286183-Nonverbal-feedback-and-meeting-reactions) located in the **Reactions** menu in the meeting toolbar.",
                "type": "boolean",
                "example": true
              },
              "meeting_survey": {
                "description": "Whether to allow the host to present a survey to participants once a meeting has ended. This feature is only available in version 5.7.3 or higher.",
                "type": "boolean",
                "example": true
              },
              "non_verbal_feedback": {
                "default": false,
                "description": "Whether to enable the [**Non-verbal feedback**](https://support.zoom.us/hc/en-us/articles/115001286183-Nonverbal-feedback-and-meeting-reactions-) setting.  This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "polling": {
                "default": false,
                "description": "Whether to add polls to the meeting controls. This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "private_chat": {
                "default": false,
                "description": "Whether to [enable private chat](https://support.zoom.us/hc/en-us/articles/360060835932-Enabling-and-disabling-private-chat) between participants during meetings. This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "record_play_voice": {
                "description": "Whether to let the user record and play their own voice.",
                "type": "boolean",
                "example": true
              },
              "remote_control": {
                "default": false,
                "description": "Whether to enable the [**Remote control**](https://support.zoom.us/hc/en-us/articles/201362673-Requesting-or-giving-remote-control) setting.  This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "remote_support": {
                "default": false,
                "description": "Whether to enable the [**Remote support**](https://support.zoom.us/hc/en-us/articles/360060951012-Enabling-remote-support) setting. This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "request_permission_to_unmute": {
                "description": "Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the user or not.",
                "type": "boolean",
                "example": true
              },
              "screen_sharing": {
                "description": "Allow host and participants to share their screen or content during meetings\n",
                "type": "boolean",
                "example": true
              },
              "share_dual_camera": {
                "deprecated": true,
                "default": false,
                "description": "Whether to allow the use of shared dual cameras. This value defaults to `false`. **This field is deprecated.**",
                "type": "boolean",
                "example": true
              },
              "show_a_join_from_your_browser_link": {
                "description": "Whether to allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is useful for participants who cannot download, install, or run applications. Note that the meeting experience from the browser is limited.",
                "type": "boolean",
                "example": true
              },
              "show_meeting_control_toolbar": {
                "description": "Whether to always display the [in-meeting controls](https://support.zoom.us/hc/en-us/articles/360021921032-Zoom-Room-meeting-controls-and-settings#h_01EQCC03TCPRC72VKXZ7W47FDX).",
                "type": "boolean",
                "example": true
              },
              "slide_control": {
                "description": "Whether the person sharing during a presentation can allow others to control the slide presentation. This feature is only available in version 5.8.3 or higher.",
                "type": "boolean",
                "example": true
              },
              "virtual_background": {
                "default": false,
                "description": "Whether to enable Virtual Backgrounds. This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "virtual_background_settings": {
                "description": "The user's Virtual Background settings.",
                "properties": {
                  "allow_upload_custom": {
                    "description": "Whether to allow user to upload custom Virtual Backgrounds.",
                    "type": "boolean",
                    "example": true
                  },
                  "allow_videos": {
                    "description": "Whether to allow the use of videos for Virtual Backgrounds.",
                    "type": "boolean",
                    "example": true
                  },
                  "enable": {
                    "description": "Whether to enable Virtual Backgrounds.",
                    "type": "boolean",
                    "example": true
                  },
                  "files": {
                    "description": "Information about the Virtual Background files.",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The Virtual Background file's ID.",
                          "type": "string",
                          "example": "efwwf-f320fg34dsv34-5"
                        },
                        "is_default": {
                          "description": "Whether the file is the default Virtual Background file.",
                          "type": "boolean",
                          "example": true
                        },
                        "name": {
                          "description": "The Virtual Background file's name.",
                          "type": "string",
                          "example": "test.png"
                        },
                        "size": {
                          "description": "The Virtual Background file's size, in bytes.",
                          "type": "integer",
                          "example": 1432
                        },
                        "type": {
                          "description": "The Virtual Background file's type.",
                          "type": "string",
                          "example": "image"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "waiting_room": {
                "default": false,
                "description": "Whether to enable the [**Waiting Room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) feature. This value defaults to `false`.",
                "type": "boolean",
                "example": true
              },
              "webinar_chat": {
                "description": "Information about the user's webinar chat settings.",
                "properties": {
                  "allow_attendees_chat_with": {
                    "description": "Allow webinar attendees to chat with:\n* `1` — No one.\n* `2` — Host and all panelists.\n* `3` — Everyone.",
                    "enum": [
                      1,
                      2,
                      3
                    ],
                    "type": "integer",
                    "example": 1
                  },
                  "allow_auto_save_local_chat_file": {
                    "description": "Whether to automatically save chat messages to a local file on the host's computer when the webinar ends.",
                    "type": "boolean",
                    "example": true
                  },
                  "allow_panelists_chat_with": {
                    "description": "Whether to allow webinar panelists to chat with:\n* `1` — Host and all panelists.\n* `2` — Everyone.",
                    "enum": [
                      1,
                      2
                    ],
                    "type": "integer",
                    "example": 2
                  },
                  "allow_panelists_send_direct_message": {
                    "description": "Whether to allow webinar panelists to send direct messages to other panelists.",
                    "type": "boolean",
                    "example": true
                  },
                  "allow_users_save_chats": {
                    "description": "Whether to allow webinar attendees to save chats:\n* `0` — Attendees cannot save chats.\n* `1` — Attendees can only save host and panelist chats.\n* `2` — Attendees can save all chats.",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "type": "integer",
                    "example": 1
                  },
                  "default_attendees_chat_with": {
                    "description": "By default, allow webinar attendees to chat with:\n* `1` — Host and all panelists.\n* `2` — Everyone.",
                    "enum": [
                      1,
                      2
                    ],
                    "type": "integer",
                    "example": 2
                  },
                  "enable": {
                    "description": "Whether to allow webinar participants to send chat messages.",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              },
              "webinar_live_streaming": {
                "properties": {
                  "custom_service_instructions": {
                    "description": "The specific instructions to allow your account's meeting hosts to configure a custom livestream.",
                    "type": "string",
                    "example": "The specific instructions"
                  },
                  "enable": {
                    "description": "Whether webinar livestreaming is enabled.",
                    "type": "boolean",
                    "example": true
                  },
                  "live_streaming_reminder": {
                    "description": "Whether to notify users to watch the livestream. This does not apply to custom RTMP (real-time messaging protocol).",
                    "type": "boolean",
                    "example": true
                  },
                  "live_streaming_service": {
                    "description": "The available livestreaming services:\n* `facebook`\n* `workplace_by_facebook`\n* `youtube`\n* `custom_live_streaming_service`",
                    "items": {
                      "enum": [
                        "facebook",
                        "workplace_by_facebook",
                        "youtube",
                        "custom_live_streaming_service"
                      ],
                      "type": "string",
                      "x-enum-descriptions": [
                        "Facebook",
                        "Workplace by Facebook",
                        "YouTube",
                        "Custom Live Streaming Service"
                      ],
                      "example": "facebook"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "webinar_polling": {
                "description": "Information about the user's webinar polling settings.",
                "properties": {
                  "advanced_polls": {
                    "description": "Whether to allow host to create advanced polls and quizzes. Advanced polls and quizzes include single choice, multiple choice, drop down, matching, short answer, long answer, rank order, and fill-in-the-blank questions. Hosts can also set the correct answers for quizzes they create.",
                    "type": "boolean",
                    "example": true
                  },
                  "enable": {
                    "description": "Whether to allow the host to add polls before or during a webinar.",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              },
              "webinar_survey": {
                "description": "Whether to allow the host to present surveys to attendees once a webinar has ended.",
                "type": "boolean",
                "example": true
              },
              "who_can_share_screen": {
                "description": "Indicates who can share their screen or content during meetings. The value can be one of the following: <br>\n`host`: Only host can share the screen.<br>\n`all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.\n",
                "enum": [
                  "host",
                  "all"
                ],
                "type": "string",
                "example": "all"
              },
              "who_can_share_screen_when_someone_is_sharing": {
                "description": "Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>\n`host`: Only a host can share the screen when someone else is sharing.<br>\n`all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.\n",
                "enum": [
                  "host",
                  "all"
                ],
                "type": "string",
                "example": "all"
              },
              "workplace_by_facebook": {
                "description": "Whether to allow Workplace by Facebook livestreaming.",
                "type": "boolean",
                "example": true
              }
            },
            "title": "User In Meeting Settings",
            "type": "object"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          },
          "recording": {
            "$ref": "#/components/schemas/UserSettingsRecording"
          },
          "schedule_meeting": {
            "$ref": "#/components/schemas/UserSettingsScheduleMeeting"
          },
          "telephony": {
            "$ref": "#/components/schemas/SettingsUpdateTelephony"
          },
          "tsp": {
            "$ref": "#/components/schemas/UserSettingsTSP"
          }
        },
        "title": "User settings",
        "type": "object"
      },
      "UserUpdate": {
        "title": "Update a User",
        "properties": {
          "cms_user_id": {
            "type": "string",
            "description": "The Kaltura user ID.",
            "example": "KDcuGIm1QgePTO8WbOqwIQ"
          },
          "company": {
            "maxLength": 255,
            "type": "string",
            "description": "The user's company.",
            "example": "Example, Inc."
          },
          "custom_attributes": {
            "type": "object",
            "description": "The user's assigned custom attributes.",
            "properties": {
              "key": {
                "type": "string",
                "description": "The custom attribute's key.",
                "example": "cbf_cywdkexrtqc73f97gd4w6g"
              },
              "name": {
                "type": "string",
                "description": "The custom attribute's name.",
                "example": "A1"
              },
              "value": {
                "type": "string",
                "description": "The custom attribute's value",
                "example": "1"
              }
            }
          },
          "dept": {
            "type": "string",
            "description": "The user's assigned department.",
            "example": "Developers"
          },
          "first_name": {
            "type": "string",
            "maxLength": 64,
            "description": "The user's first name. This value cannot contain more than five Chinese characters.",
            "example": "Jill"
          },
          "group_id": {
            "description": "Provide unique identifier of the group that you would like to add a [pending user](https://support.zoom.us/hc/en-us/articles/201363183-Managing-users#h_13c87a2a-ecd6-40ad-be61-a9935e660edb) to. The value of this field can be retrieved from the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API.",
            "type": "string",
            "example": "RSMaSp8sTEGK0_oamiA2_w"
          },
          "host_key": {
            "type": "string",
            "minLength": 6,
            "maxLength": 10,
            "description": "The user's host key.",
            "example": "4692486817"
          },
          "job_title": {
            "type": "string",
            "maxLength": 128,
            "description": "The user's job title.",
            "example": "Developer"
          },
          "language": {
            "type": "string",
            "description": "The user's language.",
            "example": "English"
          },
          "last_name": {
            "type": "string",
            "maxLength": 64,
            "description": "The user's last name. This value cannot contain more than five Chinese characters.",
            "example": "Chill"
          },
          "location": {
            "type": "string",
            "maxLength": 256,
            "description": "The user's location.",
            "example": "San Jose"
          },
          "manager": {
            "type": "string",
            "format": "email",
            "description": "The user's assigned manager.",
            "example": "Tara Smith"
          },
          "phone_country": {
            "deprecated": true,
            "type": "string",
            "description": "**Note:** This field has been **deprecated** and will not be supported in the future. Use the `country` field of the `phone_numbers` object to select the phone number country. \n\nThe user's phone number [country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
            "example": "US"
          },
          "phone_number": {
            "deprecated": true,
            "type": "string",
            "description": "**Note:** This field has been **deprecated** and will not be supported in the future. Instead, use the `phone_numbers` field to assign phone numbers to a user. \n\nThe user's phone number. To update a phone number, you must also provide the `phone_country` field.",
            "example": "5550100"
          },
          "phone_numbers": {
            "type": "array",
            "description": "Information about the user's assigned phone numbers.",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The phone number's country code",
                  "example": "+1"
                },
                "country": {
                  "type": "string",
                  "description": "The phone number's [country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number.",
                  "example": "US"
                },
                "label": {
                  "type": "string",
                  "description": "The phone number's label: \n* `Mobile` \n* `Office` \n* `Home` \n* `Fax`",
                  "enum": [
                    "Mobile",
                    "Office",
                    "Home",
                    "Fax"
                  ],
                  "example": "Mobile"
                },
                "number": {
                  "type": "string",
                  "description": "The phone number.",
                  "example": "5550100"
                }
              }
            }
          },
          "pmi": {
            "type": "integer",
            "minLength": 10,
            "maxLength": 10,
            "description": "The user's Personal Meeting ID.",
            "example": 1234567890
          },
          "pronouns": {
            "type": "string",
            "description": "The user's pronouns.",
            "example": "They/Them/Their"
          },
          "pronouns_option": {
            "type": "integer",
            "description": "The user's display pronouns setting: \n* `1` — Ask the user every time they join meetings and webinars. \n* `2` — Always display pronouns in meetings and webinars. \n* `3` — Do not display pronouns in meetings and webinars.",
            "enum": [
              1,
              2,
              3
            ],
            "example": 1
          },
          "timezone": {
            "type": "string",
            "description": "The user's [timezone](/api-reference/other-references/abbreviation-lists#timezones)",
            "example": "America/Chicago"
          },
          "type": {
            "type": "integer",
            "description": "The type of [user](https://support.zoom.us/hc/en-us/articles/201363173-Zoom-user-types-roles): \n* `1` — Basic. \n* `2` — Licensed. \n* `3` — On-Premise. \n* `4` — No Meetings License. \n* `99` — None. You can only set this value if the user was created using the `ssoCreate` value for `action` parameter in the [**Create users**](/api-reference/zoom-api/methods#operation/userCreate) API.",
            "enum": [
              1,
              2,
              3,
              99
            ],
            "example": 2
          },
          "use_pmi": {
            "default": false,
            "type": "boolean",
            "description": "Whether to use a [Personal Meeting ID](https://support.zoom.us/hc/en-us/articles/203276937-Using-Personal-Meeting-ID-PMI) for instant meetings.",
            "example": false
          },
          "vanity_name": {
            "type": "string",
            "description": "The user's Personal Meeting Room name.",
            "example": "My Meeting Room"
          }
        },
        "type": "object"
      },
      "WebinarInfo": {
        "description": "Webinar object.",
        "properties": {
          "agenda": {
            "description": "Webinar agenda.",
            "type": "string",
            "example": "My Webinar"
          },
          "created_at": {
            "description": "Create time.",
            "format": "date-time",
            "type": "string",
            "example": "2022-03-26T07:18:32Z"
          },
          "duration": {
            "description": "Webinar duration.",
            "type": "integer",
            "example": 60
          },
          "join_url": {
            "description": "URL to join the Webinar. This URL should only be shared with the users who should be invited to the Webinar.",
            "type": "string",
            "example": "https://example.com/j/11111"
          },
          "occurrences": {
            "$ref": "#/components/schemas/Occurrences"
          },
          "password": {
            "description": "Webinar passcode. \n\nIf \"Require a passcode when scheduling new meetings\" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. <br><br>\n**Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API.",
            "maxLength": 10,
            "type": "string",
            "example": "123456"
          },
          "recurrence": {
            "$ref": "#/components/schemas/recurrence-webinar"
          },
          "settings": {
            "$ref": "#/components/schemas/WebinarSettings"
          },
          "start_time": {
            "description": "Webinar start time in GMT/UTC.",
            "format": "date-time",
            "type": "string",
            "example": "2022-03-26T07:18:32Z"
          },
          "start_url": {
            "description": "<br><aside>The <code>start_url</code> of a Webinar is a URL using which a host or an alternative host can start the Webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the Webinar. \n\nThe expiration time for the <code>start_url</code> field listed in the response of the [**Create a webinar**](/api-reference/zoom-api/methods#operation/webinarCreate) API is two hours for all regular users. \n\t\nFor users created using the <code>custCreate</code> option via the [**Create users**](/api-reference/zoom-api/methods#operation/userCreate) API, the expiration time of the <code>start_url</code> field is 90 days.\n\t\nFor security reasons, to retrieve the latest value for the <code>start_url</code> field programmatically (after expiry), you must call the [**Get a webinar**](/api-reference/zoom-api/methods#operation/webinar) API and refer to the value of the <code>start_url</code> field in the response.</aside><br><br><br>",
            "type": "string",
            "example": "https://example.com/s/11111"
          },
          "timezone": {
            "description": "Time zone to format start_time.",
            "type": "string",
            "example": "America/Los_Angeles"
          },
          "topic": {
            "description": "Webinar topic.",
            "maxLength": 200,
            "type": "string",
            "example": "My Webinar"
          },
          "tracking_fields": {
            "description": "Tracking fields",
            "items": {
              "properties": {
                "field": {
                  "description": "Tracking fields type",
                  "type": "string",
                  "example": "field1"
                },
                "value": {
                  "description": "Tracking fields value",
                  "type": "string",
                  "example": "value1"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "type": {
            "default": 5,
            "description": "Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.",
            "enum": [
              5,
              6,
              9
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Webinar",
              "Recurring Webinar with no fixed time",
              "Recurring Webinar with fixed time"
            ],
            "example": 5
          }
        },
        "type": "object"
      },
      "WebinarInstances": {
        "allOf": [
          {
            "properties": {
              "webinars": {
                "description": "List of ended webinar instances.",
                "items": {
                  "allOf": [
                    {
                      "properties": {
                        "start_time": {
                          "description": "Start time.",
                          "format": "date-time",
                          "type": "string",
                          "example": "2022-03-26T06:44:14Z"
                        },
                        "uuid": {
                          "description": "Webinar UUID.",
                          "type": "string",
                          "example": "Bznyg8KZTdCVbQxvS/oZ7w=="
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "List of webinars.",
        "title": "Webinar instances",
        "type": "object"
      },
      "WebinarList": {
        "description": "List of webinars.",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "type": "object",
            "properties": {
              "webinars": {
                "type": "array",
                "description": "List of webinar objects.",
                "items": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "agenda": {
                          "type": "string",
                          "description": "Webinar Description. The length of agenda gets truncated to 250 characters when you list all webinars for a user. To view the complete agenda, retrieve details for a single webinar, use the [**Get a webinar**](/api-reference/zoom-api/methods#operation/webinar) API.",
                          "example": "Learn more about Zoom APIs"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time of webinar creation.",
                          "example": "2021-07-01T22:00:00Z"
                        },
                        "duration": {
                          "type": "integer",
                          "description": "The webinar's duration, in minutes.",
                          "example": 60
                        },
                        "host_id": {
                          "type": "string",
                          "description": "The host's ID.",
                          "example": "x1yCzABCDEfg23HiJKl4mN"
                        },
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The webinar ID.",
                          "example": 1234567890
                        },
                        "join_url": {
                          "type": "string",
                          "description": "The URL to join the webinar.",
                          "example": "https://example.com/j/11111"
                        },
                        "start_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The webinar's start time.",
                          "example": "2021-07-13T21:00:00Z"
                        },
                        "timezone": {
                          "type": "string",
                          "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones).",
                          "example": "America/Los_Angeles"
                        },
                        "topic": {
                          "type": "string",
                          "description": "The webinar's topic.",
                          "example": "My Webinar"
                        },
                        "type": {
                          "type": "integer",
                          "default": 5,
                          "description": "The webinar type: \n* `5` — A webinar. \n* `6` — A recurring webinar without a fixed time. \n* `9` — A recurring webinar with a fixed time.",
                          "enum": [
                            5,
                            6,
                            9
                          ],
                          "example": 9
                        },
                        "uuid": {
                          "type": "string",
                          "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID.",
                          "example": "4444AAAiAAAAAiAiAiiAii=="
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "WebinarLiveStream": {
        "description": "Webinar live stream.",
        "properties": {
          "page_url": {
            "description": "The webinar live stream page's URL.",
            "format": "uri",
            "maxLength": 1024,
            "type": "string",
            "example": "https://example.com/livestream/123"
          },
          "stream_key": {
            "description": "The webinar live stream name and key.",
            "maxLength": 512,
            "type": "string",
            "example": "contact-it@example.com"
          },
          "stream_url": {
            "description": "The webinar live stream URL.",
            "maxLength": 1024,
            "type": "string",
            "example": "https://example.com/livestream"
          }
        },
        "required": [
          "stream_url",
          "stream_key",
          "page_url"
        ],
        "type": "object"
      },
      "WebinarLiveStreamStatus": {
        "description": "Webinar live stream status.",
        "properties": {
          "action": {
            "description": "Update the status of a live stream. This value can be one of the following:\n\n* `start` — Start a webinar live stream.\n\n* `stop` — Stop an ongoing webinar live stream.",
            "enum": [
              "start",
              "stop"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Start a webinar live stream.",
              "Stop a webinar live stream."
            ],
            "example": "start"
          },
          "settings": {
            "description": "Update the live stream session's settings. You can **only** update settings for a stopped live stream.",
            "properties": {
              "active_speaker_name": {
                "description": "Display the name of the active speaker during a live stream.",
                "type": "boolean",
                "example": true
              },
              "display_name": {
                "description": "Display the name of the live stream.",
                "maxLength": 50,
                "minLength": 1,
                "type": "string",
                "example": "Jill Chill"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "WebinarMetric": {
        "description": "Webinar metric details.",
        "properties": {
          "host": {
            "description": "User display name.",
            "type": "string",
            "example": ""
          },
          "custom_keys": {
            "description": "Custom keys and values assigned to the Webinar.",
            "items": {
              "properties": {
                "key": {
                  "description": "Custom key associated with the Webinar.",
                  "maxLength": 64,
                  "type": "string",
                  "example": ""
                },
                "value": {
                  "description": "Value of the custom key associated with the Webinar.",
                  "maxLength": 256,
                  "type": "string",
                  "example": ""
                }
              },
              "type": "object"
            },
            "maxItems": 10,
            "type": "array"
          },
          "dept": {
            "description": "Department of the host.",
            "type": "string",
            "example": ""
          },
          "duration": {
            "description": "Webinar duration, formatted as hh:mm:ss, for example: `10:00` for ten minutes.",
            "type": "string",
            "example": ""
          },
          "email": {
            "description": "User email.",
            "type": "string",
            "example": ""
          },
          "end_time": {
            "description": "Webinar end time.",
            "format": "date-time",
            "type": "string",
            "example": ""
          },
          "has_3rd_party_audio": {
            "description": "Indicates whether or not TSP was used for the Webinar.",
            "type": "boolean",
            "example": ""
          },
          "has_archiving": {
            "description": "Whether the archiving feature was used in the webinar.",
            "type": "boolean",
            "example": ""
          },
          "has_pstn": {
            "description": "Indicates whether or not PSTN was used for the Webinar.",
            "type": "boolean",
            "example": ""
          },
          "has_recording": {
            "description": "Indicates whether or not recording was used for the Webinar.",
            "type": "boolean",
            "example": ""
          },
          "has_screen_share": {
            "description": "Indicates whether or not screen sharing was used for the Webinar.",
            "type": "boolean",
            "example": ""
          },
          "has_sip": {
            "description": "Indicates whether or not SIP was used for the Webinar.",
            "type": "boolean",
            "example": ""
          },
          "has_video": {
            "description": "Indicates whether or not video was used for the Webinar.",
            "type": "boolean",
            "example": ""
          },
          "has_voip": {
            "description": "Indicates whether or not VoIP was used for the Webinar.",
            "type": "boolean",
            "example": ""
          },
          "id": {
            "description": "Webinar ID in \"**long**\" format(represented as int64 data type in JSON), also known as the webinar number.",
            "format": "int64",
            "type": "integer",
            "example": ""
          },
          "participants": {
            "description": "Webinar participant count.",
            "type": "integer",
            "example": ""
          },
          "start_time": {
            "description": "Webinar start time.",
            "format": "date-time",
            "type": "string",
            "example": ""
          },
          "topic": {
            "description": "Webinar topic.",
            "type": "string",
            "example": ""
          },
          "user_type": {
            "description": "User type.",
            "type": "string",
            "example": ""
          },
          "uuid": {
            "description": "Webinar UUID.",
            "type": "string",
            "example": ""
          },
          "audio_quality": {
            "type": "string",
            "description": "The webinar's [audio quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts): \n* `good` — The audio is almost flawless and the quality is excellent. \n* `fair` — The audio occasionally has distortion, noise, and other problems, but the content is basically continuous. Participants can communicate normally. \n* `poor` — The audio often has distortion, noise, and other problems, but the content is basically continuous. Participants can communicate normally. \n* `bad` — The sound quality is extremely poor and the audio content is almost inaudible.",
            "enum": [
              "good",
              "fair",
              "poor",
              "bad"
            ],
            "example": ""
          },
          "video_quality": {
            "type": "string",
            "description": "The webinar's [video quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts): \n* `good` — The video is almost flawless and the quality is excellent. \n* `fair` — The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \n* `poor` — The video definition is not high, but not many problems exist. The video quality is mediocre. \n* `bad` — The picture is very blurred and often gets stuck.",
            "enum": [
              "good",
              "fair",
              "poor",
              "bad"
            ],
            "example": ""
          },
          "screen_share_quality": {
            "type": "string",
            "description": "The webinar's [screen share quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts): \n* `good` — The video is almost flawless and the quality is excellent. \n* `fair` — The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \n* `poor` — The video definition is not high, but not many problems exist. The video quality is mediocre. \n* `bad` — The picture is very blurred and often gets stuck.",
            "enum": [
              "good",
              "fair",
              "poor",
              "bad"
            ],
            "example": ""
          }
        },
        "title": "Webinar Metrics",
        "type": "object"
      },
      "WebinarPanelist": {
        "description": "Webinar panelist.",
        "properties": {
          "panelists": {
            "description": "List of panelist objects.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Panelist"
                }
              ]
            },
            "maximum": 30,
            "type": "array"
          }
        },
        "type": "object"
      },
      "WebinarPanelistList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PanelistList"
          }
        ],
        "description": "Webinar panelist.",
        "type": "object"
      },
      "WebinarRegistrant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Registrant"
          },
          {
            "properties": {
              "language": {
                "description": "The registrant's language preference for confirmation emails: \n* `en-US` — English (US) \n* `de-DE` — German (Germany) \n* `es-ES` — Spanish (Spain) \n* `fr-FR` — French (France) \n* `jp-JP` — Japanese \n* `pt-PT` — Portuguese (Portugal) \n* `ru-RU` — Russian \n* `zh-CN` — Chinese (PRC) \n* `zh-TW` — Chinese (Taiwan) \n* `ko-KO` — Korean \n* `it-IT` — Italian (Italy) \n* `vi-VN` — Vietnamese \n* `pl-PL` — Polish \n* `Tr-TR` — Turkish",
                "enum": [
                  "en-US",
                  "de-DE",
                  "es-ES",
                  "fr-FR",
                  "jp-JP",
                  "pt-PT",
                  "ru-RU",
                  "zh-CN",
                  "zh-TW",
                  "ko-KO",
                  "it-IT",
                  "vi-VN",
                  "pl-PL",
                  "Tr-TR"
                ],
                "type": "string",
                "example": "en-US"
              }
            },
            "type": "object"
          }
        ],
        "description": "Webinar registrant.",
        "type": "object"
      },
      "WebinarRegistrantList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RegistrantList"
          }
        ],
        "description": "List of users.",
        "title": "Registration List",
        "type": "object"
      },
      "WebinarRegistrantQuestions": {
        "description": "Webinar Registrant Questions",
        "properties": {
          "custom_questions": {
            "description": "Array of Registrant Custom Questions.",
            "items": {
              "properties": {
                "answers": {
                  "description": "An array of answer choices. Can't be used for short answer type.",
                  "items": {
                    "type": "string",
                    "example": "Good"
                  },
                  "type": "array"
                },
                "required": {
                  "description": "State whether or not the custom question is required to be answered by a registrant.",
                  "type": "boolean",
                  "example": true
                },
                "title": {
                  "description": "Custom question.",
                  "type": "string",
                  "example": "How are you?"
                },
                "type": {
                  "description": "The question-answer type.",
                  "enum": [
                    "short",
                    "single_radio",
                    "single_dropdown",
                    "multiple"
                  ],
                  "type": "string",
                  "x-enum-descriptions": [
                    "Short Answer",
                    "Single Radio Answer",
                    "Single Dropdown Answer",
                    "Multiple Answer"
                  ],
                  "example": "short"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "questions": {
            "description": "Array of registration fields whose values should be provided by registrants during registration.",
            "items": {
              "properties": {
                "field_name": {
                  "description": "Field name",
                  "enum": [
                    "last_name",
                    "address",
                    "city",
                    "country",
                    "zip",
                    "state",
                    "phone",
                    "industry",
                    "org",
                    "job_title",
                    "purchasing_time_frame",
                    "role_in_purchase_process",
                    "no_of_employees",
                    "comments"
                  ],
                  "type": "string",
                  "x-enum-descriptions": [
                    "Last Name",
                    "Address",
                    "City",
                    "Country/Region",
                    "Zip/Postal Code",
                    "State/Province",
                    "Phone",
                    "Industry",
                    "Organization",
                    "Job Title",
                    "Purchasing Time Frame",
                    "Role in Purchase Process",
                    "Number of Employees",
                    "Questions & Comments"
                  ],
                  "example": "last_name"
                },
                "required": {
                  "description": "State whether the selected fields are required or optional.",
                  "type": "boolean",
                  "example": true
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "Webinar Registrant Questions",
        "type": "object"
      },
      "WebinarSettings": {
        "description": "Webinar settings.",
        "properties": {
          "allow_multiple_devices": {
            "description": "Allow attendees to join from multiple devices.",
            "type": "boolean",
            "example": true
          },
          "alternative_hosts": {
            "description": "Alternative host emails or IDs. Multiple values separated by comma.",
            "type": "string",
            "example": "jchill@example.com"
          },
          "alternative_host_update_polls": {
            "type": "boolean",
            "description": "Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher.",
            "example": true
          },
          "approval_type": {
            "default": 2,
            "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Automatically Approve",
              "Manually Approve",
              "No Registration Required"
            ],
            "example": 0
          },
          "attendees_and_panelists_reminder_email_notification": {
            "description": "Send reminder email to attendees and panelists.",
            "properties": {
              "enable": {
                "description": "* `true`: Send reminder email to attendees and panelists.\n\n* `false`: Do not send reminder email to attendees and panelists.",
                "type": "boolean",
                "example": true
              },
              "type": {
                "description": "`0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7
                ],
                "type": "integer",
                "x-enum-descriptions": [
                  "Send 1 hour before webinar.",
                  "Send 1 day before webinar.",
                  "Send 1 hour and 1 day before webinar.",
                  "Send 1 week before webinar.",
                  "Send 1 hour and 1 week before webinar.",
                  "Send 1 day and 1 week before webinar.",
                  "Send 1 hour, 1 day and 1 week before webinar."
                ],
                "example": 0
              }
            },
            "type": "object"
          },
          "audio": {
            "default": "both",
            "description": "Determine how participants can join the audio portion of the webinar.",
            "enum": [
              "both",
              "telephony",
              "voip"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Both Telephony and VoIP",
              "Telephony only",
              "VoIP only"
            ],
            "example": "telephony"
          },
          "authentication_domains": {
            "description": "If user has configured [\"Sign Into Zoom with Specified Domains\"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.",
            "type": "string",
            "example": "example.com"
          },
          "authentication_name": {
            "description": "Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).",
            "type": "string",
            "example": "Sign in to Zoom"
          },
          "authentication_option": {
            "description": "Webinar authentication option id.",
            "type": "string",
            "example": "signIn_D8cJuqWVQ623CI4Q8yQK0Q"
          },
          "auto_recording": {
            "default": "none",
            "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
            "enum": [
              "local",
              "cloud",
              "none"
            ],
            "type": "string",
            "x-enum-descriptions": [
              "Record to local device",
              "Record to cloud",
              "No Recording"
            ],
            "example": "cloud"
          },
          "close_registration": {
            "description": "Close registration after event date.",
            "type": "boolean",
            "example": true
          },
          "contact_email": {
            "description": "Contact email for registration",
            "type": "string",
            "example": "jchill@example.com"
          },
          "contact_name": {
            "description": "Contact name for registration",
            "type": "string",
            "example": "Jill Chill"
          },
          "email_language": {
            "description": "Set the email language to one of the following:\n`en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.",
            "type": "string",
            "example": "en-US"
          },
          "enforce_login": {
            "deprecated": true,
            "description": "Only signed in users can join this meeting.\n\n**This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the \"meeting_authentication\", \"authentication_option\" and \"authentication_domains\" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.",
            "type": "boolean",
            "example": true
          },
          "enforce_login_domains": {
            "deprecated": true,
            "description": "Only signed in users with specified domains can join meetings.\n\n**This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the \"meeting_authentication\", \"authentication_option\" and \"authentication_domains\" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.",
            "type": "string",
            "example": "example.com"
          },
          "follow_up_absentees_email_notification": {
            "description": "Send follow-up email to absentees.",
            "properties": {
              "enable": {
                "description": "* `true`: Send follow-up email to absentees.\n\n* `false`: Do not send follow-up email to absentees.",
                "type": "boolean",
                "example": true
              },
              "type": {
                "description": "`0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7
                ],
                "type": "integer",
                "x-enum-descriptions": [
                  "Send 1 days after the scheduled end date.",
                  "Send 2 days after the scheduled end date.",
                  "Send 3 days after the scheduled end date.",
                  "Send 4 days after the scheduled end date.",
                  "Send 5 days after the scheduled end date.",
                  "Send 6 days after the scheduled end date.",
                  "Send 7 days after the scheduled end date."
                ],
                "example": 0
              }
            },
            "type": "object"
          },
          "follow_up_attendees_email_notification": {
            "description": "Send follow-up email to attendees.",
            "properties": {
              "enable": {
                "description": "* `true`: Send follow-up email to attendees.\n\n* `false`: Do not send follow-up email to attendees.",
                "type": "boolean",
                "example": true
              },
              "type": {
                "description": "`0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7
                ],
                "type": "integer",
                "x-enum-descriptions": [
                  "Send 1 day after the scheduled end date.",
                  "Send 2 days after the scheduled end date.",
                  "Send 3 days after the scheduled end date.",
                  "Send 4 days after the scheduled end date.",
                  "Send 5 days after the scheduled end date.",
                  "Send 6 days after the scheduled end date.",
                  "Send 7 days after the scheduled end date."
                ],
                "example": 0
              }
            },
            "type": "object"
          },
          "global_dial_in_countries": {
            "description": "List of global dial-in countries",
            "items": {
              "type": "string",
              "example": "US"
            },
            "type": "array"
          },
          "hd_video": {
            "default": false,
            "description": "Default to HD video.",
            "type": "boolean",
            "example": false
          },
          "hd_video_for_attendees": {
            "default": false,
            "description": "Whether HD video for attendees is enabled.",
            "type": "boolean",
            "example": false
          },
          "host_video": {
            "description": "Start video when host joins webinar.",
            "type": "boolean",
            "example": true
          },
          "language_interpretation": {
            "description": "The webinar's [language interpretation settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars). \n\n**Note:** This feature is only available for certain Webinar add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the webinar.",
            "properties": {
              "enable": {
                "description": "Whether to enable [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars) for the webinar.",
                "type": "boolean",
                "example": true
              },
              "interpreters": {
                "description": "Information about the webinar's language interpreters.",
                "items": {
                  "properties": {
                    "email": {
                      "description": "The interpreter's email address.",
                      "format": "email",
                      "type": "string",
                      "example": "interpreter@example.com"
                    },
                    "languages": {
                      "description": "A comma-separated list of the interpreter's languages. The string must contain two [country IDs](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries). \n\nFor example, if the interpreter will translate from English to Chinese, then this value will be `US,CN`.",
                      "type": "string",
                      "example": "US,CN"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "meeting_authentication": {
            "description": "`true`- Only authenticated users can join Webinar.",
            "type": "boolean",
            "example": true
          },
          "notify_registrants": {
            "description": "Send notification email to registrants when the host updates a webinar.",
            "type": "boolean",
            "example": true
          },
          "on_demand": {
            "default": false,
            "description": "Make the webinar on-demand",
            "type": "boolean",
            "example": false
          },
          "panelists_invitation_email_notification": {
            "description": "* `true`: Send invitation email to panelists.\n\n* `false`: Do not send invitation email to panelists.",
            "type": "boolean",
            "example": true
          },
          "panelists_video": {
            "description": "Start video when panelists join webinar.",
            "type": "boolean",
            "example": true
          },
          "post_webinar_survey": {
            "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar",
            "type": "boolean",
            "example": true
          },
          "practice_session": {
            "default": false,
            "description": "Enable practice session.",
            "type": "boolean",
            "example": false
          },
          "question_and_answer": {
            "description": "[Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.",
            "properties": {
              "allow_anonymous_questions": {
                "description": "* `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..\n\n* `false`: Do not allow anonymous questions.",
                "type": "boolean",
                "example": true
              },
              "answer_questions": {
                "description": "Indicate whether you want attendees to be able to view answered questions only or view all questions.\n\n* `only`: Attendees are able to view answered questions only.\n\n*  `all`: Attendees are able to view all questions submitted in the Q&A.",
                "enum": [
                  "only",
                  "all"
                ],
                "type": "string",
                "example": "all"
              },
              "attendees_can_comment": {
                "description": "* `true`: Attendees can answer questions or leave a comment in the question thread.\n\n* `false`: Attendees can not answer questions or leave a comment in the question thread",
                "type": "boolean",
                "example": true
              },
              "attendees_can_upvote": {
                "description": "* `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.\n\n* `false`: Attendees can not click the thumbs up button on questions.",
                "type": "boolean",
                "example": true
              },
              "enable": {
                "description": "* `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.\n\n* `false`: Disable Q&A for webinar.",
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "registrants_confirmation_email": {
            "description": "Send confirmation email to registrants",
            "type": "boolean",
            "example": true
          },
          "registrants_email_notification": {
            "description": "Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.",
            "type": "boolean",
            "example": true
          },
          "registrants_restrict_number": {
            "default": 0,
            "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
            "maximum": 20000,
            "minimum": 0,
            "type": "integer",
            "example": 100
          },
          "registration_type": {
            "default": 1,
            "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Attendees register once and can attend any of the occurrences",
              "Attendees need to register for each occurrence to attend",
              "Attendees register once and can choose one or more occurrences to attend"
            ],
            "example": 1
          },
          "send_1080p_video_to_attendees": {
            "default": false,
            "description": "Whether to always send 1080p video to attendees.",
            "type": "boolean",
            "example": false
          },
          "show_share_button": {
            "description": "Show social share buttons on the registration page.",
            "type": "boolean",
            "example": true
          },
          "survey_url": {
            "description": "Survey url for post webinar survey",
            "type": "string",
            "example": "https://example.com"
          }
        },
        "type": "object"
      },
      "WebinarSurvey": {
        "description": "Information about the webinar survey.",
        "properties": {
          "custom_survey": {
            "description": "Information about the customized webinar survey.",
            "properties": {
              "anonymous": {
                "default": false,
                "description": "Whether to allow participants to anonymously answer survey questions: \n* `true` — Anonymous survey enabled. \n* `false` — Participants cannot answer survey questions anonymously. \n\n This value defaults to `true`.",
                "type": "boolean",
                "example": false
              },
              "questions": {
                "description": "Information about the webinar survey's questions.",
                "items": {
                  "properties": {
                    "answer_max_character": {
                      "description": "The allowed maximum number of characters. This field only applies to `long_answer` survey, a maximum of 2,000 characters.",
                      "type": "integer",
                      "example": 200
                    },
                    "answer_min_character": {
                      "description": "The allowed minimum number of characters. This field only applies to `long_answer` survey. You must provide at least a **one** character minimum value.",
                      "minimum": 1,
                      "type": "integer",
                      "example": 1
                    },
                    "answer_required": {
                      "default": false,
                      "description": "Whether participants must answer the question: \n* `true` — The participant must answer the question. \n* `false` — The participant does not need to answer the question. \n\n This value defaults to `false`.",
                      "type": "boolean",
                      "example": false
                    },
                    "answers": {
                      "description": "The survey question's available answers. This field requires a **minimum** of two answers. \n\n* For `single` and `multiple` polls, you can only provide a maximum of 10 answers. \n* For `matching` polls, you can only provide a maximum of 16 answers. \n* For `rank_order` polls, you can only provide a maximum of seven answers.",
                      "items": {
                        "type": "string",
                        "example": "Extremely useful"
                      },
                      "minItems": 2,
                      "type": "array"
                    },
                    "name": {
                      "description": "The survey question, up to 255 characters.",
                      "maxLength": 255,
                      "type": "string",
                      "example": "How useful was this meeting?"
                    },
                    "rating_max_label": {
                      "description": "The high score label used for the `rating_max_value` field. \n\n This field only applies to the `rating_scale` survey.",
                      "type": "string",
                      "example": "Extremely Likely"
                    },
                    "rating_max_value": {
                      "description": "The rating scale's maximum value, up to a maximum value of 10. \n\n This field only applies to the `rating_scale` survey.",
                      "maximum": 10,
                      "type": "integer",
                      "example": 4
                    },
                    "rating_min_label": {
                      "description": "The low score label used for the `rating_min_value` field. \n\n This field only applies to the `rating_scale` survey.",
                      "type": "string",
                      "example": "Not likely"
                    },
                    "rating_min_value": {
                      "description": "The rating scale's minimum value. This value cannot be less than zero. \n\n This field only applies to the `rating_scale` survey.",
                      "minimum": 0,
                      "type": "integer",
                      "example": 0
                    },
                    "show_as_dropdown": {
                      "default": false,
                      "description": "Whether to display the radio selection as a drop-down box: \n* `true` — Show as a drop-down box. \n* `false` — Do not show as a drop-down box. \n\n This value defaults to `false`.",
                      "type": "boolean",
                      "example": false
                    },
                    "type": {
                      "description": "The survey's question and answer type: \n* `single` — Single choice. \n* `multiple` — Multiple choice. \n* `rating_scale` — Rating scale. \n* `long_answer` — Long answer.",
                      "enum": [
                        "single",
                        "multiple",
                        "rating_scale",
                        "long_answer"
                      ],
                      "type": "string",
                      "x-enum-descriptions": [
                        "Single choice",
                        "Multiple choice",
                        "Rating scale",
                        "Long answer"
                      ],
                      "example": "single"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "show_in_the_browser": {
            "default": true,
            "description": "Whether the **Show in the browser when the webinar ends** option is enabled: \n* `true` — Enabled. \n* `false` — Disabled. \n\n This value defaults to `true`.",
            "type": "boolean",
            "example": true
          },
          "show_in_the_follow_up_email": {
            "default": false,
            "description": "Whether the **Show the link on the follow-up email** option is enabled: \n* `true` — Enabled. \n* `false` — Disabled. \n\n This value defaults to `false`.",
            "type": "boolean",
            "example": false
          },
          "third_party_survey": {
            "description": "The link to the third party webinar survey.",
            "maxLength": 64,
            "type": "string",
            "example": "https://example.com"
          }
        },
        "title": "Webinar Survey Object",
        "type": "object"
      },
      "WebinarUpdate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SessionWebinarUpdate"
          }
        ],
        "description": "Webinar object",
        "type": "object"
      },
      "ZoomRoom": {
        "description": "Zoom room.",
        "properties": {
          "account_type": {
            "description": "Zoom room email type.",
            "type": "string",
            "example": ""
          },
          "calender_name": {
            "description": "Zoom calendar name.",
            "type": "string",
            "example": ""
          },
          "camera": {
            "description": "Zoom Room camera.\n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
            "type": "string",
            "example": ""
          },
          "device_ip": {
            "description": "Zoom room device IP.",
            "type": "string",
            "example": ""
          },
          "email": {
            "description": "Zoom room email.",
            "type": "string",
            "example": ""
          },
          "health": {
            "type": "string",
            "example": ""
          },
          "id": {
            "description": "Zoom room ID.",
            "type": "string",
            "example": ""
          },
          "issues": {
            "description": "Zoom Room issues.",
            "items": {
              "type": "string",
              "example": ""
            },
            "type": "array"
          },
          "last_start_time": {
            "description": "Zoom room last start time.",
            "type": "string",
            "example": ""
          },
          "location": {
            "description": "Zoom room location.",
            "type": "string",
            "example": ""
          },
          "microphone": {
            "description": "Zoom Room microphone.\n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
            "type": "string",
            "example": ""
          },
          "room_name": {
            "description": "Zoom room name.",
            "type": "string",
            "example": ""
          },
          "speaker": {
            "description": "Zoom Room speaker.\n\n**Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).",
            "type": "string",
            "example": ""
          },
          "status": {
            "description": "Zoom room status.",
            "type": "string",
            "example": ""
          }
        },
        "title": "Zoom Room",
        "type": "object"
      },
      "ZoomRoomList": {
        "allOf": [
          {
            "description": "Pagination Object.",
            "properties": {
              "next_page_token": {
                "type": "string",
                "example": ""
              },
              "page_count": {
                "description": "The number of pages returned for the request made.",
                "type": "integer",
                "example": ""
              },
              "page_number": {
                "default": 1,
                "description": "The page number of the current results.",
                "type": "integer",
                "example": ""
              },
              "page_size": {
                "default": 30,
                "description": "The number of records returned with a single API call.",
                "maximum": 300,
                "type": "integer",
                "example": ""
              },
              "total_records": {
                "description": "The total number of all the records available across pages.",
                "type": "integer",
                "example": ""
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "zoom_rooms": {
                "description": "Array of Zoom Rooms",
                "items": {
                  "$ref": "#/components/schemas/ZoomRoom"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "Zoom Room List",
        "title": "Zoom Room List",
        "type": "object"
      },
      "create_webinar": {
        "description": "Base webinar object for sessions.",
        "properties": {
          "agenda": {
            "description": "Webinar description.",
            "type": "string",
            "example": "My Webinar"
          },
          "duration": {
            "description": "Webinar duration (minutes). Used for scheduled webinars only.",
            "type": "integer",
            "example": 60
          },
          "password": {
            "description": "Webinar passcode. Passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ * !]. Max of 10 characters.\n\nIf \"Require a passcode when scheduling new meetings\" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. <br><br>\n\n**Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API.",
            "type": "string",
            "example": "123456"
          },
          "recurrence": {
            "$ref": "#/components/schemas/recurrence-webinar"
          },
          "settings": {
            "$ref": "#/components/schemas/CreateWebinarSettings"
          },
          "start_time": {
            "description": "Webinar start time. We support two formats for `start_time` - local time and GMT.<br> \n\nTo set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.\n\nTo set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.\n\nThe `start_time` should only be used for scheduled and / or recurring webinars with fixed time.",
            "format": "date-time",
            "type": "string",
            "example": "2022-03-26T06:44:14Z"
          },
          "template_id": {
            "description": "The webinar template ID with which to schedule a webinar using a [webinar template](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates). For a list of webinar templates, use the [**List webinar templates**](/api-reference/zoom-api/methods#operation/listWebinarTemplates) API.",
            "type": "string",
            "example": "5Cj3ceXoStO6TGOVvIOVPA=="
          },
          "timezone": {
            "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats.",
            "type": "string",
            "example": "America/Los_Angeles"
          },
          "topic": {
            "description": "Webinar topic.",
            "type": "string",
            "example": "My Webinar"
          },
          "tracking_fields": {
            "description": "Tracking fields",
            "items": {
              "properties": {
                "field": {
                  "description": "Tracking fields type",
                  "type": "string",
                  "example": "field1"
                },
                "value": {
                  "description": "Tracking fields value",
                  "type": "string",
                  "example": "value1"
                }
              },
              "required": [
                "field"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "type": {
            "default": 5,
            "description": "Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.",
            "enum": [
              5,
              6,
              9
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Webinar",
              "Recurring Webinar with no fixed time",
              "Recurring Webinar with fixed time"
            ],
            "example": 5
          }
        },
        "type": "object"
      },
      "listmeetingmetrics": {
        "description": "Meeting metric details.",
        "properties": {
          "host": {
            "description": "Host display name.",
            "type": "string",
            "example": ""
          },
          "custom_keys": {
            "description": "Custom keys and values assigned to the meeting.",
            "items": {
              "properties": {
                "key": {
                  "description": "Custom key associated with the meeting.",
                  "maxLength": 64,
                  "type": "string",
                  "example": ""
                },
                "value": {
                  "description": "Value of the custom key associated with the meeting.",
                  "maxLength": 256,
                  "type": "string",
                  "example": ""
                }
              },
              "type": "object"
            },
            "maxItems": 10,
            "type": "array"
          },
          "dept": {
            "description": "Department of the host.",
            "type": "string",
            "example": ""
          },
          "duration": {
            "description": "Meeting duration. Formatted as hh:mm:ss, for example: `16:08` for 16 minutes and 8 seconds.",
            "type": "string",
            "example": ""
          },
          "email": {
            "description": "Email address of the host.",
            "type": "string",
            "example": ""
          },
          "end_time": {
            "description": "Meeting end time.",
            "format": "date-time",
            "type": "string",
            "example": ""
          },
          "has_3rd_party_audio": {
            "description": "Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting.",
            "type": "boolean",
            "example": ""
          },
          "has_archiving": {
            "description": "Whether the archiving feature was used in the meeting.",
            "type": "boolean",
            "example": ""
          },
          "has_pstn": {
            "description": "Indicates whether or not the PSTN was used in the meeting.",
            "type": "boolean",
            "example": ""
          },
          "has_recording": {
            "description": "Indicates whether or not the recording feature was used in the meeting. ",
            "type": "boolean",
            "example": ""
          },
          "has_screen_share": {
            "description": "Indicates whether or not screenshare feature was used in the meeting.",
            "type": "boolean",
            "example": ""
          },
          "has_sip": {
            "description": "Indicates whether or not someone joined the meeting using SIP.",
            "type": "boolean",
            "example": ""
          },
          "has_video": {
            "description": "Indicates whether or not video was used in the meeting.",
            "type": "boolean",
            "example": ""
          },
          "has_voip": {
            "description": "Indicates whether or not VoIP was used in the meeting.",
            "type": "boolean",
            "example": ""
          },
          "id": {
            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in \"**long**\" format(represented as int64 data type in JSON), also known as the meeting number.",
            "format": "int64",
            "type": "integer",
            "example": ""
          },
          "in_room_participants": {
            "description": "The number of Zoom Room participants in the meeting.",
            "type": "integer",
            "example": ""
          },
          "participants": {
            "description": "Meeting participant count.",
            "type": "integer",
            "example": ""
          },
          "start_time": {
            "description": "Meeting start time.",
            "format": "date-time",
            "type": "string",
            "example": ""
          },
          "topic": {
            "description": "Meeting topic.",
            "type": "string",
            "example": ""
          },
          "tracking_fields": {
            "description": "Tracking fields and values assigned to the meeting.",
            "items": {
              "properties": {
                "field": {
                  "description": "Label of the tracking field.",
                  "maxLength": 64,
                  "type": "string",
                  "example": ""
                },
                "value": {
                  "description": "Value of the tracking field.",
                  "maxLength": 256,
                  "type": "string",
                  "example": ""
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "user_type": {
            "description": "License type of the user.",
            "type": "string",
            "example": ""
          },
          "uuid": {
            "description": "Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.",
            "type": "string",
            "example": ""
          },
          "audio_quality": {
            "type": "string",
            "description": "The meeting's [audio quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts): \n* `good` — The audio is almost flawless and the quality is excellent. \n* `fair` — The audio occasionally has distortion, noise, and other problems, but the content is basically continuous. Participants can communicate normally. \n* `poor` — The audio often has distortion, noise, and other problems, but the content is basically continuous. Participants can communicate normally. \n* `bad` — The sound quality is extremely poor and the audio content is almost inaudible.",
            "enum": [
              "good",
              "fair",
              "poor",
              "bad"
            ],
            "example": ""
          },
          "video_quality": {
            "type": "string",
            "description": "The meeting's [video quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts): \n* `good` — The video is almost flawless and the quality is excellent. \n* `fair` — The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \n* `poor` — The video definition is not high, but not many problems exist. The video quality is mediocre. \n* `bad` — The picture is very blurred and often gets stuck.",
            "enum": [
              "good",
              "fair",
              "poor",
              "bad"
            ],
            "example": ""
          },
          "screen_share_quality": {
            "type": "string",
            "description": "The meeting's [screen share quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts): \n* `good` — The video is almost flawless and the quality is excellent. \n* `fair` — The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \n* `poor` — The video definition is not high, but not many problems exist. The video quality is mediocre. \n* `bad` — The picture is very blurred and often gets stuck.",
            "enum": [
              "good",
              "fair",
              "poor",
              "bad"
            ],
            "example": ""
          }
        },
        "title": "Metrics",
        "type": "object"
      },
      "recurrence-webinar": {
        "description": "Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. ",
        "properties": {
          "end_date_time": {
            "description": "Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
            "format": "date-time",
            "type": "string",
            "example": "2022-04-02T15:59:00Z"
          },
          "end_times": {
            "default": 1,
            "description": "Select how many times the webinar will recur before it is canceled. (Cannot be used with \"end_date_time\".)",
            "maximum": 365,
            "type": "integer",
            "example": 7
          },
          "monthly_day": {
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.",
            "type": "integer",
            "example": 1
          },
          "monthly_week": {
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
            "enum": [
              -1,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Last week",
              "First week",
              "Second week",
              "Third week",
              "Fourth week"
            ],
            "example": 1
          },
          "monthly_week_day": {
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "example": 1
          },
          "repeat_interval": {
            "description": "Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months.",
            "type": "integer",
            "example": 1
          },
          "type": {
            "description": "Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "x-enum-descriptions": [
              "Daily",
              "Weekly",
              "Monthly"
            ],
            "example": 1
          },
          "weekly_days": {
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `\"1\"` as the value of this field.  <br><br> **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `\"1,3\"` as the value of this field.\n\n<br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.\n\n",
            "type": "string",
            "example": "1"
          }
        },
        "required": [
          "type"
        ],
        "title": "Recurrence Webinar",
        "type": "object"
      },
      "tsp-global-dial-in": {
        "properties": {
          "audio_url": {
            "description": "The global dial-in URL for a TSP enabled account. The URL must be valid with a max-length of 512 characters.",
            "maxLength": 512,
            "type": "string",
            "example": "https://example.com"
          }
        },
        "title": "TSP Global Dial-In URL Setting",
        "type": "object"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "Client_Credentials": {
        "description": "Client Credentials Flow for ChatBots",
        "flows": {
          "clientCredentials": {
            "scopes": {},
            "tokenUrl": "https://api.zoom.us/oauth/token"
          }
        },
        "type": "oauth2"
      },
      "OAuth": {
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://zoom.us/oauth/authorize",
            "scopes": {},
            "tokenUrl": "https://zoom.us/oauth/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "OAuth": []
    }
  ],
  "tags": [
    {
      "description": "Archiving operations.",
      "name": "Archiving"
    },
    {
      "description": "Cloud Recording operations.",
      "name": "Cloud Recording"
    },
    {
      "description": "Dashboard operations.",
      "name": "Dashboards"
    },
    {
      "description": "H.323/SIP device operations.",
      "name": "Devices"
    },
    {
      "description": "Group operations.",
      "name": "Groups"
    },
    {
      "description": "IM group operations.",
      "name": "IM Groups"
    },
    {
      "description": "Meeting operations.",
      "name": "Meetings"
    },
    {
      "description": "Personal Audio Conference (PAC) operations.",
      "name": "PAC"
    },
    {
      "description": "Report operations.",
      "name": "Reports"
    },
    {
      "description": "User roles operations.",
      "name": "Roles"
    },
    {
      "description": "Zoom Phone System Integration (PSI) phone operations.",
      "name": "SIP Phone"
    },
    {
      "description": "Tracking field operations.",
      "name": "Tracking Field"
    },
    {
      "description": "Telephony Service Provider (TSP) operations.",
      "name": "TSP"
    },
    {
      "description": "User operations.",
      "name": "Users"
    },
    {
      "description": "Webinar operations.",
      "name": "Webinars"
    },
    {
      "description": "Zoom Rooms operations. \n\n**Note:** For privacy reasons, these APIs do not return Personal Zoom Rooms information.",
      "name": "Zoom Rooms"
    },
    {
      "description": "Zoom Rooms account operations.",
      "name": "Zoom Rooms Account"
    },
    {
      "description": "Zoom Rooms location operations.",
      "name": "Zoom Rooms Location"
    },
    {
      "description": "Zoom Room device operations.",
      "name": "Zoom Rooms Devices"
    },
    {
      "description": "Deprecated API endpoints.",
      "name": "Deprecated API Endpoints"
    }
  ]
}